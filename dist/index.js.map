{"version":3,"file":"index.js","sources":["../webpack://@oracle-actions/get-ocir-repository/./lib/main.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/core/lib/command.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/core/lib/core.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/core/lib/file-command.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/core/lib/utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/http-client/auth.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/http-client/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@actions/http-client/proxy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/ber/errors.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/ber/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/ber/reader.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/ber/types.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/ber/writer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/asn1/lib/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/assert-plus/assert.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/bcrypt-pbkdf/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/buffer-equal-constant-time/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/core-util-is/lib/util.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ecc-jsbn/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ecc-jsbn/lib/ec.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ecc-jsbn/lib/sec.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/es6-promise/dist/es6-promise.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/extsprintf/lib/extsprintf.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/http-signature/lib/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/http-signature/lib/parser.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/http-signature/lib/signer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/http-signature/lib/utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/http-signature/lib/verify.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/isomorphic-fetch/fetch-npm-node.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsbn/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/json-schema/lib/validate.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/decode.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/lib/JsonWebTokenError.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/lib/NotBeforeError.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/lib/TokenExpiredError.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/lib/psSupported.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/lib/timespan.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/sign.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsonwebtoken/verify.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jsprim/lib/jsprim.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jssha/src/sha.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jwa/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jws/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jws/lib/data-stream.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jws/lib/sign-stream.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jws/lib/tostring.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/jws/lib/verify-stream.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.includes/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.isboolean/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.isinteger/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.isnumber/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.isplainobject/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.isstring/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/lodash.once/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/ms/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/node-fetch/lib/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/artifacts-waiter.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/client.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/change-container-repository-compartment-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/change-repository-compartment-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-configuration.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-layer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-signature-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-signature-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-signature.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-image.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-repository-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-repository-readme.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-repository-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-repository.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/container-version.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/create-container-image-signature-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/create-container-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/create-generic-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/create-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/generic-artifact-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/generic-artifact-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/generic-artifact.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/generic-repository-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/generic-repository.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/remove-container-version-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/repository-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/repository-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/repository.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/restore-container-image-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-container-configuration-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-container-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-generic-artifact-by-path-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-generic-artifact-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-generic-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/model/update-repository-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/list-container-image-signatures-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/list-container-images-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/list-container-repositories-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/list-generic-artifacts-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/request/list-repositories-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-artifacts/lib/response/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/X509-federation-client.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/abstract-federation-client-authenticated-details-provider-builder.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/abstract-requesting-authentication-detail-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/auth.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/certificate-and-privatekey-pair.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/config-file-auth.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/file-based-key-supplier.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/file-based-resource-principal-federation-client.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/fixed-content-key-supplier.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/fixed-content-resource-principal-federation-client.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/helpers/auth-utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/helpers/delegate-auth-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/helpers/load-private-key-from-file.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/instance-principals-authentication-detail-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/key-pair.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/resource-principal-authentication-details-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/security-token-adapter.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/session-key-supplier.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/auth/url-based-x509-certificate-supplier.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/chunker.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/chunks/ChunkBuffer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/chunks/ChunkStream.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/chunks/getReadableData.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/chunks/getReadableStreamData.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/circuit-breaker.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/config-file-reader.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/constants.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/endpoint-builder.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/error.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/headers.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/helper.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/http.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/log.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/object-serializer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/paginators.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/range.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/realm.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/region-metadata-schema.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/region.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/request-generator.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/response-generator.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/retrier.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/retry-token-header.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/signer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-common/lib/waiter.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/client.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/identity-waiter.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/add-user-to-group-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/api-key.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/auth-token.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/authentication-policy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/availability-domain.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/base-tag-definition-validator.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-action-resource-type-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-action-resource-type.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-action-resource.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-delete-resources-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-delete-tags-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-edit-operation-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-edit-resource.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-edit-tags-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-edit-tags-resource-type-collection.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-edit-tags-resource-type.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/bulk-move-resources-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/change-tag-namespace-compartment-detail.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/compartment.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-api-key-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-auth-token-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-compartment-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-customer-secret-key-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-dynamic-group-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-group-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-identity-provider-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-idp-group-mapping-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-network-source-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-oauth2-client-credential-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-policy-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-region-subscription-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-saml2-identity-provider-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-smtp-credential-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-swift-password-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-tag-default-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-tag-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-tag-namespace-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/create-user-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/customer-secret-key-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/customer-secret-key.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/default-tag-definition-validator.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/dynamic-group.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/enum-tag-definition-validator.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/fault-domain.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/fully-qualified-scope.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/group.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/identity-provider-group-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/identity-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/idp-group-mapping.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/mfa-totp-device-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/mfa-totp-device.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/mfa-totp-token.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/move-compartment-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/network-policy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/network-sources-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/network-sources.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/network-sources_virtual-source-list.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/o-auth2-client-credential-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/o-auth2-client-credential.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/password-policy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/policy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/region-subscription.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/region.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/saml2-identity-provider.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/scim-client-credentials.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/smtp-credential-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/smtp-credential.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/swift-password.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag-default-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag-default.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag-namespace-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag-namespace.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tag.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tagging-work-request-error-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tagging-work-request-log-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tagging-work-request-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tagging-work-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/tenancy.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/u-ipassword-information.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/u-ipassword.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-auth-token-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-authentication-policy-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-compartment-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-customer-secret-key-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-dynamic-group-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-group-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-identity-provider-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-idp-group-mapping-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-network-source-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-oauth2-client-credential-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-policy-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-saml2-identity-provider-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-smtp-credential-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-state-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-swift-password-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-tag-default-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-tag-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-tag-namespace-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-user-capabilities-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/update-user-details.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/user-capabilities.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/user-group-membership.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/user.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/work-request-error.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/work-request-log-entry.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/work-request-resource.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/work-request-summary.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/model/work-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-bulk-action-resource-types-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-compartments-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-dynamic-groups-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-groups-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-identity-providers-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-mfa-totp-devices-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-network-sources-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-policies-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/request/list-users-request.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/oci-identity/lib/response/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/opossum/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/opossum/lib/circuit.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/opossum/lib/semaphore.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/opossum/lib/status.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/safe-buffer/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/safer-buffer/safer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/semver/semver.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/algs.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/certificate.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/dhe.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/ed-compat.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/errors.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/fingerprint.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/auto.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/dnssec.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/openssh-cert.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/pem.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/pkcs1.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/pkcs8.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/putty.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/rfc4253.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/ssh-private.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/ssh.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/x509-pem.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/formats/x509.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/identity.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/key.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/private-key.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/signature.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/ssh-buffer.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/sshpk/lib/utils.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/tunnel/index.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/tunnel/lib/tunnel.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/tweetnacl/nacl-fast.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/uuid/lib/bytesToUuid.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/uuid/lib/rng.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/uuid/v1.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/verror/lib/verror.js","../webpack://@oracle-actions/get-ocir-repository/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://@oracle-actions/get-ocir-repository/external \"assert\"","../webpack://@oracle-actions/get-ocir-repository/external \"buffer\"","../webpack://@oracle-actions/get-ocir-repository/external \"crypto\"","../webpack://@oracle-actions/get-ocir-repository/external \"events\"","../webpack://@oracle-actions/get-ocir-repository/external \"fs\"","../webpack://@oracle-actions/get-ocir-repository/external \"http\"","../webpack://@oracle-actions/get-ocir-repository/external \"https\"","../webpack://@oracle-actions/get-ocir-repository/external \"net\"","../webpack://@oracle-actions/get-ocir-repository/external \"os\"","../webpack://@oracle-actions/get-ocir-repository/external \"path\"","../webpack://@oracle-actions/get-ocir-repository/external \"stream\"","../webpack://@oracle-actions/get-ocir-repository/external \"tls\"","../webpack://@oracle-actions/get-ocir-repository/external \"url\"","../webpack://@oracle-actions/get-ocir-repository/external \"util\"","../webpack://@oracle-actions/get-ocir-repository/external \"zlib\"","../webpack://@oracle-actions/get-ocir-repository/webpack/bootstrap","../webpack://@oracle-actions/get-ocir-repository/webpack/runtime/compat","../webpack://@oracle-actions/get-ocir-repository/webpack/startup"],"sourcesContent":["\"use strict\";\n/* Copyright (c) 2021, Oracle and/or its affiliates.\n * Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst artifacts = __importStar(require(\"oci-artifacts\"));\nconst identity = __importStar(require(\"oci-identity\"));\nconst common = require(\"oci-common\");\nfunction getOcirRepo() {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        // Required environment variables\n        const tenancy = process.env.OCI_CLI_TENANCY || '';\n        const user = process.env.OCI_CLI_USER || '';\n        const fingerprint = process.env.OCI_CLI_FINGERPRINT || '';\n        const privateKey = process.env.OCI_CLI_KEY_CONTENT || '';\n        const region = common.Region.fromRegionId(process.env.OCI_CLI_REGION || '');\n        const authProvider = new common.SimpleAuthenticationDetailsProvider(tenancy, user, fingerprint, privateKey, null, region);\n        const ac = new artifacts.ArtifactsClient({ authenticationDetailsProvider: authProvider });\n        const ic = new identity.IdentityClient({ authenticationDetailsProvider: authProvider });\n        const compartmentId = core.getInput('compartment', { required: true });\n        const displayName = core.getInput('name', { required: true });\n        const namespace = (yield ac.getContainerConfiguration({ compartmentId: compartmentId })).containerConfiguration\n            .namespace;\n        const regionCode = (_b = (_a = (yield ic.listRegions({})).items\n            .find(x => x.name === authProvider.getRegion().regionId)) === null || _a === void 0 ? void 0 : _a.key) === null || _b === void 0 ? void 0 : _b.toLocaleLowerCase();\n        const ocir = regionCode ? `${regionCode}.ocir.io` : '';\n        if (ocir) {\n            const repo = (yield ac.listContainerRepositories({ compartmentId: compartmentId })).containerRepositoryCollection.items.find(x => x.displayName === displayName);\n            if (repo) {\n                core.setOutput('repo_path', `${ocir}/${namespace}/${repo.displayName}`);\n                core.setOutput('repo_ocid', `${repo.id}`);\n            }\n            else {\n                const containerRepository = (yield ac.createContainerRepository({\n                    createContainerRepositoryDetails: {\n                        compartmentId: compartmentId,\n                        displayName: displayName,\n                        isImmutable: false,\n                        isPublic: false\n                    }\n                })).containerRepository;\n                core.setOutput('repo_path', `${ocir}/${namespace}/${containerRepository.displayName}`);\n                core.setOutput('repo_ocid', `${containerRepository.id}`);\n            }\n        }\n        else {\n            core.setFailed('Failed to identify OCIR endpoint.');\n        }\n    });\n}\ngetOcirRepo().catch(e => {\n    if (e instanceof Error)\n        core.setFailed(e.message);\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' +\n                Buffer.from(this.username + ':' + this.password).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n\n  newInvalidAsn1Error: function (msg) {\n    var e = new Error();\n    e.name = 'InvalidAsn1Error';\n    e.message = msg || '';\n    return e;\n  }\n\n};\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar errors = require('./errors');\nvar types = require('./types');\n\nvar Reader = require('./reader');\nvar Writer = require('./writer');\n\n\n// --- Exports\n\nmodule.exports = {\n\n  Reader: Reader,\n\n  Writer: Writer\n\n};\n\nfor (var t in types) {\n  if (types.hasOwnProperty(t))\n    module.exports[t] = types[t];\n}\nfor (var e in errors) {\n  if (errors.hasOwnProperty(e))\n    module.exports[e] = errors[e];\n}\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\n\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\n\n\n// --- API\n\nfunction Reader(data) {\n  if (!data || !Buffer.isBuffer(data))\n    throw new TypeError('data must be a node Buffer');\n\n  this._buf = data;\n  this._size = data.length;\n\n  // These hold the \"current\" state\n  this._len = 0;\n  this._offset = 0;\n}\n\nObject.defineProperty(Reader.prototype, 'length', {\n  enumerable: true,\n  get: function () { return (this._len); }\n});\n\nObject.defineProperty(Reader.prototype, 'offset', {\n  enumerable: true,\n  get: function () { return (this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'remain', {\n  get: function () { return (this._size - this._offset); }\n});\n\nObject.defineProperty(Reader.prototype, 'buffer', {\n  get: function () { return (this._buf.slice(this._offset)); }\n});\n\n\n/**\n * Reads a single byte and advances offset; you can pass in `true` to make this\n * a \"peek\" operation (i.e., get the byte, but don't advance the offset).\n *\n * @param {Boolean} peek true means don't move offset.\n * @return {Number} the next byte, null if not enough data.\n */\nReader.prototype.readByte = function (peek) {\n  if (this._size - this._offset < 1)\n    return null;\n\n  var b = this._buf[this._offset] & 0xff;\n\n  if (!peek)\n    this._offset += 1;\n\n  return b;\n};\n\n\nReader.prototype.peek = function () {\n  return this.readByte(true);\n};\n\n\n/**\n * Reads a (potentially) variable length off the BER buffer.  This call is\n * not really meant to be called directly, as callers have to manipulate\n * the internal buffer afterwards.\n *\n * As a result of this call, you can call `Reader.length`, until the\n * next thing called that does a readLength.\n *\n * @return {Number} the amount of offset to advance the buffer.\n * @throws {InvalidAsn1Error} on bad ASN.1\n */\nReader.prototype.readLength = function (offset) {\n  if (offset === undefined)\n    offset = this._offset;\n\n  if (offset >= this._size)\n    return null;\n\n  var lenB = this._buf[offset++] & 0xff;\n  if (lenB === null)\n    return null;\n\n  if ((lenB & 0x80) === 0x80) {\n    lenB &= 0x7f;\n\n    if (lenB === 0)\n      throw newInvalidAsn1Error('Indefinite length not supported');\n\n    if (lenB > 4)\n      throw newInvalidAsn1Error('encoding too long');\n\n    if (this._size - offset < lenB)\n      return null;\n\n    this._len = 0;\n    for (var i = 0; i < lenB; i++)\n      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);\n\n  } else {\n    // Wasn't a variable length\n    this._len = lenB;\n  }\n\n  return offset;\n};\n\n\n/**\n * Parses the next sequence in this BER buffer.\n *\n * To get the length of the sequence, call `Reader.length`.\n *\n * @return {Number} the sequence's tag.\n */\nReader.prototype.readSequence = function (tag) {\n  var seq = this.peek();\n  if (seq === null)\n    return null;\n  if (tag !== undefined && tag !== seq)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + seq.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  this._offset = o;\n  return seq;\n};\n\n\nReader.prototype.readInt = function () {\n  return this._readTag(ASN1.Integer);\n};\n\n\nReader.prototype.readBoolean = function () {\n  return (this._readTag(ASN1.Boolean) === 0 ? false : true);\n};\n\n\nReader.prototype.readEnumeration = function () {\n  return this._readTag(ASN1.Enumeration);\n};\n\n\nReader.prototype.readString = function (tag, retbuf) {\n  if (!tag)\n    tag = ASN1.OctetString;\n\n  var b = this.peek();\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n\n  if (o === null)\n    return null;\n\n  if (this.length > this._size - o)\n    return null;\n\n  this._offset = o;\n\n  if (this.length === 0)\n    return retbuf ? Buffer.alloc(0) : '';\n\n  var str = this._buf.slice(this._offset, this._offset + this.length);\n  this._offset += this.length;\n\n  return retbuf ? str : str.toString('utf8');\n};\n\nReader.prototype.readOID = function (tag) {\n  if (!tag)\n    tag = ASN1.OID;\n\n  var b = this.readString(tag, true);\n  if (b === null)\n    return null;\n\n  var values = [];\n  var value = 0;\n\n  for (var i = 0; i < b.length; i++) {\n    var byte = b[i] & 0xff;\n\n    value <<= 7;\n    value += byte & 0x7f;\n    if ((byte & 0x80) === 0) {\n      values.push(value);\n      value = 0;\n    }\n  }\n\n  value = values.shift();\n  values.unshift(value % 40);\n  values.unshift((value / 40) >> 0);\n\n  return values.join('.');\n};\n\n\nReader.prototype._readTag = function (tag) {\n  assert.ok(tag !== undefined);\n\n  var b = this.peek();\n\n  if (b === null)\n    return null;\n\n  if (b !== tag)\n    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +\n                              ': got 0x' + b.toString(16));\n\n  var o = this.readLength(this._offset + 1); // stored in `length`\n  if (o === null)\n    return null;\n\n  if (this.length > 4)\n    throw newInvalidAsn1Error('Integer too long: ' + this.length);\n\n  if (this.length > this._size - o)\n    return null;\n  this._offset = o;\n\n  var fb = this._buf[this._offset];\n  var value = 0;\n\n  for (var i = 0; i < this.length; i++) {\n    value <<= 8;\n    value |= (this._buf[this._offset++] & 0xff);\n  }\n\n  if ((fb & 0x80) === 0x80 && i !== 4)\n    value -= (1 << (i * 8));\n\n  return value >> 0;\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Reader;\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n\nmodule.exports = {\n  EOC: 0,\n  Boolean: 1,\n  Integer: 2,\n  BitString: 3,\n  OctetString: 4,\n  Null: 5,\n  OID: 6,\n  ObjectDescriptor: 7,\n  External: 8,\n  Real: 9, // float\n  Enumeration: 10,\n  PDV: 11,\n  Utf8String: 12,\n  RelativeOID: 13,\n  Sequence: 16,\n  Set: 17,\n  NumericString: 18,\n  PrintableString: 19,\n  T61String: 20,\n  VideotexString: 21,\n  IA5String: 22,\n  UTCTime: 23,\n  GeneralizedTime: 24,\n  GraphicString: 25,\n  VisibleString: 26,\n  GeneralString: 28,\n  UniversalString: 29,\n  CharacterString: 30,\n  BMPString: 31,\n  Constructor: 32,\n  Context: 128\n};\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\nvar assert = require('assert');\nvar Buffer = require('safer-buffer').Buffer;\nvar ASN1 = require('./types');\nvar errors = require('./errors');\n\n\n// --- Globals\n\nvar newInvalidAsn1Error = errors.newInvalidAsn1Error;\n\nvar DEFAULT_OPTS = {\n  size: 1024,\n  growthFactor: 8\n};\n\n\n// --- Helpers\n\nfunction merge(from, to) {\n  assert.ok(from);\n  assert.equal(typeof (from), 'object');\n  assert.ok(to);\n  assert.equal(typeof (to), 'object');\n\n  var keys = Object.getOwnPropertyNames(from);\n  keys.forEach(function (key) {\n    if (to[key])\n      return;\n\n    var value = Object.getOwnPropertyDescriptor(from, key);\n    Object.defineProperty(to, key, value);\n  });\n\n  return to;\n}\n\n\n\n// --- API\n\nfunction Writer(options) {\n  options = merge(DEFAULT_OPTS, options || {});\n\n  this._buf = Buffer.alloc(options.size || 1024);\n  this._size = this._buf.length;\n  this._offset = 0;\n  this._options = options;\n\n  // A list of offsets in the buffer where we need to insert\n  // sequence tag/len pairs.\n  this._seq = [];\n}\n\nObject.defineProperty(Writer.prototype, 'buffer', {\n  get: function () {\n    if (this._seq.length)\n      throw newInvalidAsn1Error(this._seq.length + ' unended sequence(s)');\n\n    return (this._buf.slice(0, this._offset));\n  }\n});\n\nWriter.prototype.writeByte = function (b) {\n  if (typeof (b) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(1);\n  this._buf[this._offset++] = b;\n};\n\n\nWriter.prototype.writeInt = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Integer;\n\n  var sz = 4;\n\n  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000 >> 0)) &&\n        (sz > 1)) {\n    sz--;\n    i <<= 8;\n  }\n\n  if (sz > 4)\n    throw newInvalidAsn1Error('BER ints cannot be > 0xffffffff');\n\n  this._ensure(2 + sz);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = sz;\n\n  while (sz-- > 0) {\n    this._buf[this._offset++] = ((i & 0xff000000) >>> 24);\n    i <<= 8;\n  }\n\n};\n\n\nWriter.prototype.writeNull = function () {\n  this.writeByte(ASN1.Null);\n  this.writeByte(0x00);\n};\n\n\nWriter.prototype.writeEnumeration = function (i, tag) {\n  if (typeof (i) !== 'number')\n    throw new TypeError('argument must be a Number');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Enumeration;\n\n  return this.writeInt(i, tag);\n};\n\n\nWriter.prototype.writeBoolean = function (b, tag) {\n  if (typeof (b) !== 'boolean')\n    throw new TypeError('argument must be a Boolean');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Boolean;\n\n  this._ensure(3);\n  this._buf[this._offset++] = tag;\n  this._buf[this._offset++] = 0x01;\n  this._buf[this._offset++] = b ? 0xff : 0x00;\n};\n\n\nWriter.prototype.writeString = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string (was: ' + typeof (s) + ')');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OctetString;\n\n  var len = Buffer.byteLength(s);\n  this.writeByte(tag);\n  this.writeLength(len);\n  if (len) {\n    this._ensure(len);\n    this._buf.write(s, this._offset);\n    this._offset += len;\n  }\n};\n\n\nWriter.prototype.writeBuffer = function (buf, tag) {\n  if (typeof (tag) !== 'number')\n    throw new TypeError('tag must be a number');\n  if (!Buffer.isBuffer(buf))\n    throw new TypeError('argument must be a buffer');\n\n  this.writeByte(tag);\n  this.writeLength(buf.length);\n  this._ensure(buf.length);\n  buf.copy(this._buf, this._offset, 0, buf.length);\n  this._offset += buf.length;\n};\n\n\nWriter.prototype.writeStringArray = function (strings) {\n  if ((!strings instanceof Array))\n    throw new TypeError('argument must be an Array[String]');\n\n  var self = this;\n  strings.forEach(function (s) {\n    self.writeString(s);\n  });\n};\n\n// This is really to solve DER cases, but whatever for now\nWriter.prototype.writeOID = function (s, tag) {\n  if (typeof (s) !== 'string')\n    throw new TypeError('argument must be a string');\n  if (typeof (tag) !== 'number')\n    tag = ASN1.OID;\n\n  if (!/^([0-9]+\\.){3,}[0-9]+$/.test(s))\n    throw new Error('argument is not a valid OID string');\n\n  function encodeOctet(bytes, octet) {\n    if (octet < 128) {\n        bytes.push(octet);\n    } else if (octet < 16384) {\n        bytes.push((octet >>> 7) | 0x80);\n        bytes.push(octet & 0x7F);\n    } else if (octet < 2097152) {\n      bytes.push((octet >>> 14) | 0x80);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else if (octet < 268435456) {\n      bytes.push((octet >>> 21) | 0x80);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    } else {\n      bytes.push(((octet >>> 28) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 21) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 14) | 0x80) & 0xFF);\n      bytes.push(((octet >>> 7) | 0x80) & 0xFF);\n      bytes.push(octet & 0x7F);\n    }\n  }\n\n  var tmp = s.split('.');\n  var bytes = [];\n  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));\n  tmp.slice(2).forEach(function (b) {\n    encodeOctet(bytes, parseInt(b, 10));\n  });\n\n  var self = this;\n  this._ensure(2 + bytes.length);\n  this.writeByte(tag);\n  this.writeLength(bytes.length);\n  bytes.forEach(function (b) {\n    self.writeByte(b);\n  });\n};\n\n\nWriter.prototype.writeLength = function (len) {\n  if (typeof (len) !== 'number')\n    throw new TypeError('argument must be a Number');\n\n  this._ensure(4);\n\n  if (len <= 0x7f) {\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xff) {\n    this._buf[this._offset++] = 0x81;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffff) {\n    this._buf[this._offset++] = 0x82;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else if (len <= 0xffffff) {\n    this._buf[this._offset++] = 0x83;\n    this._buf[this._offset++] = len >> 16;\n    this._buf[this._offset++] = len >> 8;\n    this._buf[this._offset++] = len;\n  } else {\n    throw newInvalidAsn1Error('Length too long (> 4 bytes)');\n  }\n};\n\nWriter.prototype.startSequence = function (tag) {\n  if (typeof (tag) !== 'number')\n    tag = ASN1.Sequence | ASN1.Constructor;\n\n  this.writeByte(tag);\n  this._seq.push(this._offset);\n  this._ensure(3);\n  this._offset += 3;\n};\n\n\nWriter.prototype.endSequence = function () {\n  var seq = this._seq.pop();\n  var start = seq + 3;\n  var len = this._offset - start;\n\n  if (len <= 0x7f) {\n    this._shift(start, len, -2);\n    this._buf[seq] = len;\n  } else if (len <= 0xff) {\n    this._shift(start, len, -1);\n    this._buf[seq] = 0x81;\n    this._buf[seq + 1] = len;\n  } else if (len <= 0xffff) {\n    this._buf[seq] = 0x82;\n    this._buf[seq + 1] = len >> 8;\n    this._buf[seq + 2] = len;\n  } else if (len <= 0xffffff) {\n    this._shift(start, len, 1);\n    this._buf[seq] = 0x83;\n    this._buf[seq + 1] = len >> 16;\n    this._buf[seq + 2] = len >> 8;\n    this._buf[seq + 3] = len;\n  } else {\n    throw newInvalidAsn1Error('Sequence too long');\n  }\n};\n\n\nWriter.prototype._shift = function (start, len, shift) {\n  assert.ok(start !== undefined);\n  assert.ok(len !== undefined);\n  assert.ok(shift);\n\n  this._buf.copy(this._buf, start + shift, start, start + len);\n  this._offset += shift;\n};\n\nWriter.prototype._ensure = function (len) {\n  assert.ok(len);\n\n  if (this._size - this._offset < len) {\n    var sz = this._size * this._options.growthFactor;\n    if (sz - this._offset < len)\n      sz += len;\n\n    var buf = Buffer.alloc(sz);\n\n    this._buf.copy(buf, 0, 0, this._offset);\n    this._buf = buf;\n    this._size = sz;\n  }\n};\n\n\n\n// --- Exported API\n\nmodule.exports = Writer;\n","// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.\n\n// If you have no idea what ASN.1 or BER is, see this:\n// ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc\n\nvar Ber = require('./ber/index');\n\n\n\n// --- Exported API\n\nmodule.exports = {\n\n  Ber: Ber,\n\n  BerReader: Ber.Reader,\n\n  BerWriter: Ber.Writer\n\n};\n","// Copyright (c) 2012, Mark Cavage. All rights reserved.\n// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert');\nvar Stream = require('stream').Stream;\nvar util = require('util');\n\n\n///--- Globals\n\n/* JSSTYLED */\nvar UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;\n\n\n///--- Internal\n\nfunction _capitalize(str) {\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n\nfunction _toss(name, expected, oper, arg, actual) {\n    throw new assert.AssertionError({\n        message: util.format('%s (%s) is required', name, expected),\n        actual: (actual === undefined) ? typeof (arg) : actual(arg),\n        expected: expected,\n        operator: oper || '===',\n        stackStartFunction: _toss.caller\n    });\n}\n\nfunction _getClass(arg) {\n    return (Object.prototype.toString.call(arg).slice(8, -1));\n}\n\nfunction noop() {\n    // Why even bother with asserts?\n}\n\n\n///--- Exports\n\nvar types = {\n    bool: {\n        check: function (arg) { return typeof (arg) === 'boolean'; }\n    },\n    func: {\n        check: function (arg) { return typeof (arg) === 'function'; }\n    },\n    string: {\n        check: function (arg) { return typeof (arg) === 'string'; }\n    },\n    object: {\n        check: function (arg) {\n            return typeof (arg) === 'object' && arg !== null;\n        }\n    },\n    number: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg);\n        }\n    },\n    finite: {\n        check: function (arg) {\n            return typeof (arg) === 'number' && !isNaN(arg) && isFinite(arg);\n        }\n    },\n    buffer: {\n        check: function (arg) { return Buffer.isBuffer(arg); },\n        operator: 'Buffer.isBuffer'\n    },\n    array: {\n        check: function (arg) { return Array.isArray(arg); },\n        operator: 'Array.isArray'\n    },\n    stream: {\n        check: function (arg) { return arg instanceof Stream; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    date: {\n        check: function (arg) { return arg instanceof Date; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    regexp: {\n        check: function (arg) { return arg instanceof RegExp; },\n        operator: 'instanceof',\n        actual: _getClass\n    },\n    uuid: {\n        check: function (arg) {\n            return typeof (arg) === 'string' && UUID_REGEXP.test(arg);\n        },\n        operator: 'isUUID'\n    }\n};\n\nfunction _setExports(ndebug) {\n    var keys = Object.keys(types);\n    var out;\n\n    /* re-export standard assert */\n    if (process.env.NODE_NDEBUG) {\n        out = noop;\n    } else {\n        out = function (arg, msg) {\n            if (!arg) {\n                _toss(msg, 'true', arg);\n            }\n        };\n    }\n\n    /* standard checks */\n    keys.forEach(function (k) {\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        var type = types[k];\n        out[k] = function (arg, msg) {\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* optional checks */\n    keys.forEach(function (k) {\n        var name = 'optional' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!type.check(arg)) {\n                _toss(msg, k, type.operator, arg, type.actual);\n            }\n        };\n    });\n\n    /* arrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'arrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* optionalArrayOf checks */\n    keys.forEach(function (k) {\n        var name = 'optionalArrayOf' + _capitalize(k);\n        if (ndebug) {\n            out[name] = noop;\n            return;\n        }\n        var type = types[k];\n        var expected = '[' + k + ']';\n        out[name] = function (arg, msg) {\n            if (arg === undefined || arg === null) {\n                return;\n            }\n            if (!Array.isArray(arg)) {\n                _toss(msg, expected, type.operator, arg, type.actual);\n            }\n            var i;\n            for (i = 0; i < arg.length; i++) {\n                if (!type.check(arg[i])) {\n                    _toss(msg, expected, type.operator, arg, type.actual);\n                }\n            }\n        };\n    });\n\n    /* re-export built-in assertions */\n    Object.keys(assert).forEach(function (k) {\n        if (k === 'AssertionError') {\n            out[k] = assert[k];\n            return;\n        }\n        if (ndebug) {\n            out[k] = noop;\n            return;\n        }\n        out[k] = assert[k];\n    });\n\n    /* export ourselves (for unit tests _only_) */\n    out._setExports = _setExports;\n\n    return out;\n}\n\nmodule.exports = _setExports(process.env.NODE_NDEBUG);\n","'use strict';\n\nvar crypto_hash_sha512 = require('tweetnacl').lowlevel.crypto_hash;\n\n/*\n * This file is a 1:1 port from the OpenBSD blowfish.c and bcrypt_pbkdf.c. As a\n * result, it retains the original copyright and license. The two files are\n * under slightly different (but compatible) licenses, and are here combined in\n * one file.\n *\n * Credit for the actual porting work goes to:\n *  Devi Mandiri <me@devi.web.id>\n */\n\n/*\n * The Blowfish portions are under the following license:\n *\n * Blowfish block cipher for OpenBSD\n * Copyright 1997 Niels Provos <provos@physnet.uni-hamburg.de>\n * All rights reserved.\n *\n * Implementation advice by David Mazieres <dm@lcs.mit.edu>.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. The name of the author may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * The bcrypt_pbkdf portions are under the following license:\n *\n * Copyright (c) 2013 Ted Unangst <tedu@openbsd.org>\n *\n * Permission to use, copy, modify, and distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n/*\n * Performance improvements (Javascript-specific):\n *\n * Copyright 2016, Joyent Inc\n * Author: Alex Wilson <alex.wilson@joyent.com>\n *\n * Permission to use, copy, modify, and distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n */\n\n// Ported from OpenBSD bcrypt_pbkdf.c v1.9\n\nvar BLF_J = 0;\n\nvar Blowfish = function() {\n  this.S = [\n    new Uint32Array([\n      0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7,\n      0xb8e1afed, 0x6a267e96, 0xba7c9045, 0xf12c7f99,\n      0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n      0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e,\n      0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,\n      0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n      0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef,\n      0x8e79dcb0, 0x603a180e, 0x6c9e0e8b, 0xb01e8a3e,\n      0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n      0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\n      0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce,\n      0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n      0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e,\n      0xafd6ba33, 0x6c24cf5c, 0x7a325381, 0x28958677,\n      0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n      0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032,\n      0xef845d5d, 0xe98575b1, 0xdc262302, 0xeb651b88,\n      0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n      0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e,\n      0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\n      0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n      0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98,\n      0xa1f1651d, 0x39af0176, 0x66ca593e, 0x82430e88,\n      0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n      0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,\n      0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d,\n      0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n      0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7,\n      0xe3fe501a, 0xb6794c3b, 0x976ce0bd, 0x04c006ba,\n      0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n      0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f,\n      0x6dfc511f, 0x9b30952c, 0xcc814544, 0xaf5ebd09,\n      0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n      0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb,\n      0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,\n      0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n      0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab,\n      0x323db5fa, 0xfd238760, 0x53317b48, 0x3e00df82,\n      0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n      0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\n      0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0,\n      0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n      0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790,\n      0xe1ddf2da, 0xa4cb7e33, 0x62fb1341, 0xcee4c6e8,\n      0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n      0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0,\n      0xd08ed1d0, 0xafc725e0, 0x8e3c5b2f, 0x8e7594b7,\n      0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n      0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad,\n      0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\n      0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n      0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9,\n      0x165fa266, 0x80957705, 0x93cc7314, 0x211a1477,\n      0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n      0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,\n      0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af,\n      0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n      0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5,\n      0x83260376, 0x6295cfa9, 0x11c81968, 0x4e734a41,\n      0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n      0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400,\n      0x08ba6fb5, 0x571be91f, 0xf296ec6b, 0x2a0dd915,\n      0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n      0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a]),\n    new Uint32Array([\n      0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,\n      0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\n      0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1,\n      0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e,\n      0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\n      0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\n      0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e,\n      0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\n      0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737,\n      0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8,\n      0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\n      0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,\n      0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701,\n      0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\n      0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41,\n      0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\n      0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\n      0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af,\n      0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e,\n      0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\n      0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\n      0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2,\n      0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\n      0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,\n      0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b,\n      0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\n      0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e,\n      0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3,\n      0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\n      0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,\n      0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,\n      0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\n      0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66,\n      0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28,\n      0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\n      0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\n      0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510,\n      0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\n      0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14,\n      0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e,\n      0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\n      0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7,\n      0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8,\n      0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\n      0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99,\n      0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\n      0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\n      0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,\n      0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0,\n      0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\n      0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\n      0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250,\n      0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\n      0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,\n      0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00,\n      0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\n      0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb,\n      0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e,\n      0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\n      0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,\n      0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,\n      0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\n      0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20,\n      0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7]),\n    new Uint32Array([\n      0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\n      0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\n      0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af,\n      0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\n      0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45,\n      0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,\n      0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\n      0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb,\n      0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee,\n      0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\n      0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42,\n      0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\n      0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\n      0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb,\n      0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527,\n      0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\n      0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,\n      0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,\n      0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\n      0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc,\n      0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17,\n      0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\n      0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b,\n      0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,\n      0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\n      0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728,\n      0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\n      0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\n      0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37,\n      0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,\n      0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\n      0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\n      0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3,\n      0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\n      0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d,\n      0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,\n      0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\n      0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9,\n      0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a,\n      0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\n      0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d,\n      0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\n      0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\n      0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61,\n      0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2,\n      0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\n      0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,\n      0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c,\n      0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\n      0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633,\n      0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10,\n      0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\n      0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52,\n      0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027,\n      0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\n      0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62,\n      0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\n      0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\n      0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24,\n      0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc,\n      0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\n      0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\n      0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837,\n      0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0]),\n    new Uint32Array([\n      0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b,\n      0x5cb0679e, 0x4fa33742, 0xd3822740, 0x99bc9bbe,\n      0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n      0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4,\n      0x5748ab2f, 0xbc946e79, 0xc6a376d2, 0x6549c2c8,\n      0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n      0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304,\n      0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\n      0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n      0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6,\n      0x2826a2f9, 0xa73a3ae1, 0x4ba99586, 0xef5562e9,\n      0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n      0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,\n      0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51,\n      0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n      0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c,\n      0xe029ac71, 0xe019a5e6, 0x47b0acfd, 0xed93fa9b,\n      0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n      0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c,\n      0x15056dd4, 0x88f46dba, 0x03a16125, 0x0564f0bd,\n      0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n      0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319,\n      0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,\n      0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n      0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991,\n      0xea7a90c2, 0xfb3e7bce, 0x5121ce64, 0x774fbe32,\n      0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n      0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\n      0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae,\n      0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n      0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5,\n      0x72eacea8, 0xfa6484bb, 0x8d6612ae, 0xbf3c6f47,\n      0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n      0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d,\n      0x4040cb08, 0x4eb4e2cc, 0x34d2466a, 0x0115af84,\n      0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n      0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8,\n      0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\n      0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n      0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7,\n      0x1a908749, 0xd44fbd9a, 0xd0dadecb, 0xd50ada38,\n      0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n      0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,\n      0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525,\n      0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n      0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442,\n      0xe0ec6e0e, 0x1698db3b, 0x4c98a0be, 0x3278e964,\n      0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n      0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8,\n      0xdf359f8d, 0x9b992f2e, 0xe60b6f47, 0x0fe3f11d,\n      0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n      0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299,\n      0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,\n      0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n      0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614,\n      0xe6c6c7bd, 0x327a140a, 0x45e1d006, 0xc3f27b9a,\n      0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n      0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\n      0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0,\n      0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n      0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e,\n      0x1948c25c, 0x02fb8a8c, 0x01c36ae4, 0xd6ebe1f9,\n      0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n      0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6])\n    ];\n  this.P = new Uint32Array([\n    0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344,\n    0xa4093822, 0x299f31d0, 0x082efa98, 0xec4e6c89,\n    0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n    0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917,\n    0x9216d5d9, 0x8979fb1b]);\n};\n\nfunction F(S, x8, i) {\n  return (((S[0][x8[i+3]] +\n            S[1][x8[i+2]]) ^\n            S[2][x8[i+1]]) +\n            S[3][x8[i]]);\n};\n\nBlowfish.prototype.encipher = function(x, x8) {\n  if (x8 === undefined) {\n    x8 = new Uint8Array(x.buffer);\n    if (x.byteOffset !== 0)\n      x8 = x8.subarray(x.byteOffset);\n  }\n  x[0] ^= this.P[0];\n  for (var i = 1; i < 16; i += 2) {\n    x[1] ^= F(this.S, x8, 0) ^ this.P[i];\n    x[0] ^= F(this.S, x8, 4) ^ this.P[i+1];\n  }\n  var t = x[0];\n  x[0] = x[1] ^ this.P[17];\n  x[1] = t;\n};\n\nBlowfish.prototype.decipher = function(x) {\n  var x8 = new Uint8Array(x.buffer);\n  if (x.byteOffset !== 0)\n    x8 = x8.subarray(x.byteOffset);\n  x[0] ^= this.P[17];\n  for (var i = 16; i > 0; i -= 2) {\n    x[1] ^= F(this.S, x8, 0) ^ this.P[i];\n    x[0] ^= F(this.S, x8, 4) ^ this.P[i-1];\n  }\n  var t = x[0];\n  x[0] = x[1] ^ this.P[0];\n  x[1] = t;\n};\n\nfunction stream2word(data, databytes){\n  var i, temp = 0;\n  for (i = 0; i < 4; i++, BLF_J++) {\n    if (BLF_J >= databytes) BLF_J = 0;\n    temp = (temp << 8) | data[BLF_J];\n  }\n  return temp;\n};\n\nBlowfish.prototype.expand0state = function(key, keybytes) {\n  var d = new Uint32Array(2), i, k;\n  var d8 = new Uint8Array(d.buffer);\n\n  for (i = 0, BLF_J = 0; i < 18; i++) {\n    this.P[i] ^= stream2word(key, keybytes);\n  }\n  BLF_J = 0;\n\n  for (i = 0; i < 18; i += 2) {\n    this.encipher(d, d8);\n    this.P[i]   = d[0];\n    this.P[i+1] = d[1];\n  }\n\n  for (i = 0; i < 4; i++) {\n    for (k = 0; k < 256; k += 2) {\n      this.encipher(d, d8);\n      this.S[i][k]   = d[0];\n      this.S[i][k+1] = d[1];\n    }\n  }\n};\n\nBlowfish.prototype.expandstate = function(data, databytes, key, keybytes) {\n  var d = new Uint32Array(2), i, k;\n\n  for (i = 0, BLF_J = 0; i < 18; i++) {\n    this.P[i] ^= stream2word(key, keybytes);\n  }\n\n  for (i = 0, BLF_J = 0; i < 18; i += 2) {\n    d[0] ^= stream2word(data, databytes);\n    d[1] ^= stream2word(data, databytes);\n    this.encipher(d);\n    this.P[i]   = d[0];\n    this.P[i+1] = d[1];\n  }\n\n  for (i = 0; i < 4; i++) {\n    for (k = 0; k < 256; k += 2) {\n      d[0] ^= stream2word(data, databytes);\n      d[1] ^= stream2word(data, databytes);\n      this.encipher(d);\n      this.S[i][k]   = d[0];\n      this.S[i][k+1] = d[1];\n    }\n  }\n  BLF_J = 0;\n};\n\nBlowfish.prototype.enc = function(data, blocks) {\n  for (var i = 0; i < blocks; i++) {\n    this.encipher(data.subarray(i*2));\n  }\n};\n\nBlowfish.prototype.dec = function(data, blocks) {\n  for (var i = 0; i < blocks; i++) {\n    this.decipher(data.subarray(i*2));\n  }\n};\n\nvar BCRYPT_BLOCKS = 8,\n    BCRYPT_HASHSIZE = 32;\n\nfunction bcrypt_hash(sha2pass, sha2salt, out) {\n  var state = new Blowfish(),\n      cdata = new Uint32Array(BCRYPT_BLOCKS), i,\n      ciphertext = new Uint8Array([79,120,121,99,104,114,111,109,97,116,105,\n            99,66,108,111,119,102,105,115,104,83,119,97,116,68,121,110,97,109,\n            105,116,101]); //\"OxychromaticBlowfishSwatDynamite\"\n\n  state.expandstate(sha2salt, 64, sha2pass, 64);\n  for (i = 0; i < 64; i++) {\n    state.expand0state(sha2salt, 64);\n    state.expand0state(sha2pass, 64);\n  }\n\n  for (i = 0; i < BCRYPT_BLOCKS; i++)\n    cdata[i] = stream2word(ciphertext, ciphertext.byteLength);\n  for (i = 0; i < 64; i++)\n    state.enc(cdata, cdata.byteLength / 8);\n\n  for (i = 0; i < BCRYPT_BLOCKS; i++) {\n    out[4*i+3] = cdata[i] >>> 24;\n    out[4*i+2] = cdata[i] >>> 16;\n    out[4*i+1] = cdata[i] >>> 8;\n    out[4*i+0] = cdata[i];\n  }\n};\n\nfunction bcrypt_pbkdf(pass, passlen, salt, saltlen, key, keylen, rounds) {\n  var sha2pass = new Uint8Array(64),\n      sha2salt = new Uint8Array(64),\n      out = new Uint8Array(BCRYPT_HASHSIZE),\n      tmpout = new Uint8Array(BCRYPT_HASHSIZE),\n      countsalt = new Uint8Array(saltlen+4),\n      i, j, amt, stride, dest, count,\n      origkeylen = keylen;\n\n  if (rounds < 1)\n    return -1;\n  if (passlen === 0 || saltlen === 0 || keylen === 0 ||\n      keylen > (out.byteLength * out.byteLength) || saltlen > (1<<20))\n    return -1;\n\n  stride = Math.floor((keylen + out.byteLength - 1) / out.byteLength);\n  amt = Math.floor((keylen + stride - 1) / stride);\n\n  for (i = 0; i < saltlen; i++)\n    countsalt[i] = salt[i];\n\n  crypto_hash_sha512(sha2pass, pass, passlen);\n\n  for (count = 1; keylen > 0; count++) {\n    countsalt[saltlen+0] = count >>> 24;\n    countsalt[saltlen+1] = count >>> 16;\n    countsalt[saltlen+2] = count >>>  8;\n    countsalt[saltlen+3] = count;\n\n    crypto_hash_sha512(sha2salt, countsalt, saltlen + 4);\n    bcrypt_hash(sha2pass, sha2salt, tmpout);\n    for (i = out.byteLength; i--;)\n      out[i] = tmpout[i];\n\n    for (i = 1; i < rounds; i++) {\n      crypto_hash_sha512(sha2salt, tmpout, tmpout.byteLength);\n      bcrypt_hash(sha2pass, sha2salt, tmpout);\n      for (j = 0; j < out.byteLength; j++)\n        out[j] ^= tmpout[j];\n    }\n\n    amt = Math.min(amt, keylen);\n    for (i = 0; i < amt; i++) {\n      dest = i * stride + (count - 1);\n      if (dest >= origkeylen)\n        break;\n      key[dest] = out[i];\n    }\n    keylen -= i;\n  }\n\n  return 0;\n};\n\nmodule.exports = {\n      BLOCKS: BCRYPT_BLOCKS,\n      HASHSIZE: BCRYPT_HASHSIZE,\n      hash: bcrypt_hash,\n      pbkdf: bcrypt_pbkdf\n};\n","/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var crypto = require(\"crypto\");\nvar BigInteger = require(\"jsbn\").BigInteger;\nvar ECPointFp = require(\"./lib/ec.js\").ECPointFp;\nvar Buffer = require(\"safer-buffer\").Buffer;\nexports.ECCurves = require(\"./lib/sec.js\");\n\n// zero prepad\nfunction unstupid(hex,len)\n{\n\treturn (hex.length >= len) ? hex : unstupid(\"0\"+hex,len);\n}\n\nexports.ECKey = function(curve, key, isPublic)\n{\n  var priv;\n\tvar c = curve();\n\tvar n = c.getN();\n  var bytes = Math.floor(n.bitLength()/8);\n\n  if(key)\n  {\n    if(isPublic)\n    {\n      var curve = c.getCurve();\n//      var x = key.slice(1,bytes+1); // skip the 04 for uncompressed format\n//      var y = key.slice(bytes+1);\n//      this.P = new ECPointFp(curve,\n//        curve.fromBigInteger(new BigInteger(x.toString(\"hex\"), 16)),\n//        curve.fromBigInteger(new BigInteger(y.toString(\"hex\"), 16)));      \n      this.P = curve.decodePointHex(key.toString(\"hex\"));\n    }else{\n      if(key.length != bytes) return false;\n      priv = new BigInteger(key.toString(\"hex\"), 16);      \n    }\n  }else{\n    var n1 = n.subtract(BigInteger.ONE);\n    var r = new BigInteger(crypto.randomBytes(n.bitLength()));\n    priv = r.mod(n1).add(BigInteger.ONE);\n    this.P = c.getG().multiply(priv);\n  }\n  if(this.P)\n  {\n//  var pubhex = unstupid(this.P.getX().toBigInteger().toString(16),bytes*2)+unstupid(this.P.getY().toBigInteger().toString(16),bytes*2);\n//  this.PublicKey = Buffer.from(\"04\"+pubhex,\"hex\");\n    this.PublicKey = Buffer.from(c.getCurve().encodeCompressedPointHex(this.P),\"hex\");\n  }\n  if(priv)\n  {\n    this.PrivateKey = Buffer.from(unstupid(priv.toString(16),bytes*2),\"hex\");\n    this.deriveSharedSecret = function(key)\n    {\n      if(!key || !key.P) return false;\n      var S = key.P.multiply(priv);\n      return Buffer.from(unstupid(S.getX().toBigInteger().toString(16),bytes*2),\"hex\");\n   }     \n  }\n}\n\n","// Basic Javascript Elliptic Curve implementation\n// Ported loosely from BouncyCastle's Java EC code\n// Only Fp curves implemented for now\n\n// Requires jsbn.js and jsbn2.js\nvar BigInteger = require('jsbn').BigInteger\nvar Barrett = BigInteger.prototype.Barrett\n\n// ----------------\n// ECFieldElementFp\n\n// constructor\nfunction ECFieldElementFp(q,x) {\n    this.x = x;\n    // TODO if(x.compareTo(q) >= 0) error\n    this.q = q;\n}\n\nfunction feFpEquals(other) {\n    if(other == this) return true;\n    return (this.q.equals(other.q) && this.x.equals(other.x));\n}\n\nfunction feFpToBigInteger() {\n    return this.x;\n}\n\nfunction feFpNegate() {\n    return new ECFieldElementFp(this.q, this.x.negate().mod(this.q));\n}\n\nfunction feFpAdd(b) {\n    return new ECFieldElementFp(this.q, this.x.add(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpSubtract(b) {\n    return new ECFieldElementFp(this.q, this.x.subtract(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpMultiply(b) {\n    return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger()).mod(this.q));\n}\n\nfunction feFpSquare() {\n    return new ECFieldElementFp(this.q, this.x.square().mod(this.q));\n}\n\nfunction feFpDivide(b) {\n    return new ECFieldElementFp(this.q, this.x.multiply(b.toBigInteger().modInverse(this.q)).mod(this.q));\n}\n\nECFieldElementFp.prototype.equals = feFpEquals;\nECFieldElementFp.prototype.toBigInteger = feFpToBigInteger;\nECFieldElementFp.prototype.negate = feFpNegate;\nECFieldElementFp.prototype.add = feFpAdd;\nECFieldElementFp.prototype.subtract = feFpSubtract;\nECFieldElementFp.prototype.multiply = feFpMultiply;\nECFieldElementFp.prototype.square = feFpSquare;\nECFieldElementFp.prototype.divide = feFpDivide;\n\n// ----------------\n// ECPointFp\n\n// constructor\nfunction ECPointFp(curve,x,y,z) {\n    this.curve = curve;\n    this.x = x;\n    this.y = y;\n    // Projective coordinates: either zinv == null or z * zinv == 1\n    // z and zinv are just BigIntegers, not fieldElements\n    if(z == null) {\n      this.z = BigInteger.ONE;\n    }\n    else {\n      this.z = z;\n    }\n    this.zinv = null;\n    //TODO: compression flag\n}\n\nfunction pointFpGetX() {\n    if(this.zinv == null) {\n      this.zinv = this.z.modInverse(this.curve.q);\n    }\n    var r = this.x.toBigInteger().multiply(this.zinv);\n    this.curve.reduce(r);\n    return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpGetY() {\n    if(this.zinv == null) {\n      this.zinv = this.z.modInverse(this.curve.q);\n    }\n    var r = this.y.toBigInteger().multiply(this.zinv);\n    this.curve.reduce(r);\n    return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpEquals(other) {\n    if(other == this) return true;\n    if(this.isInfinity()) return other.isInfinity();\n    if(other.isInfinity()) return this.isInfinity();\n    var u, v;\n    // u = Y2 * Z1 - Y1 * Z2\n    u = other.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(other.z)).mod(this.curve.q);\n    if(!u.equals(BigInteger.ZERO)) return false;\n    // v = X2 * Z1 - X1 * Z2\n    v = other.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(other.z)).mod(this.curve.q);\n    return v.equals(BigInteger.ZERO);\n}\n\nfunction pointFpIsInfinity() {\n    if((this.x == null) && (this.y == null)) return true;\n    return this.z.equals(BigInteger.ZERO) && !this.y.toBigInteger().equals(BigInteger.ZERO);\n}\n\nfunction pointFpNegate() {\n    return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);\n}\n\nfunction pointFpAdd(b) {\n    if(this.isInfinity()) return b;\n    if(b.isInfinity()) return this;\n\n    // u = Y2 * Z1 - Y1 * Z2\n    var u = b.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(b.z)).mod(this.curve.q);\n    // v = X2 * Z1 - X1 * Z2\n    var v = b.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(b.z)).mod(this.curve.q);\n\n    if(BigInteger.ZERO.equals(v)) {\n        if(BigInteger.ZERO.equals(u)) {\n            return this.twice(); // this == b, so double\n        }\n\treturn this.curve.getInfinity(); // this = -b, so infinity\n    }\n\n    var THREE = new BigInteger(\"3\");\n    var x1 = this.x.toBigInteger();\n    var y1 = this.y.toBigInteger();\n    var x2 = b.x.toBigInteger();\n    var y2 = b.y.toBigInteger();\n\n    var v2 = v.square();\n    var v3 = v2.multiply(v);\n    var x1v2 = x1.multiply(v2);\n    var zu2 = u.square().multiply(this.z);\n\n    // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n    var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.q);\n    // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n    var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.q);\n    // z3 = v^3 * z1 * z2\n    var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.q);\n\n    return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\nfunction pointFpTwice() {\n    if(this.isInfinity()) return this;\n    if(this.y.toBigInteger().signum() == 0) return this.curve.getInfinity();\n\n    // TODO: optimized handling of constants\n    var THREE = new BigInteger(\"3\");\n    var x1 = this.x.toBigInteger();\n    var y1 = this.y.toBigInteger();\n\n    var y1z1 = y1.multiply(this.z);\n    var y1sqz1 = y1z1.multiply(y1).mod(this.curve.q);\n    var a = this.curve.a.toBigInteger();\n\n    // w = 3 * x1^2 + a * z1^2\n    var w = x1.square().multiply(THREE);\n    if(!BigInteger.ZERO.equals(a)) {\n      w = w.add(this.z.square().multiply(a));\n    }\n    w = w.mod(this.curve.q);\n    //this.curve.reduce(w);\n    // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n    var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.q);\n    // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n    var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.square().multiply(w)).mod(this.curve.q);\n    // z3 = 8 * (y1 * z1)^3\n    var z3 = y1z1.square().multiply(y1z1).shiftLeft(3).mod(this.curve.q);\n\n    return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nfunction pointFpMultiply(k) {\n    if(this.isInfinity()) return this;\n    if(k.signum() == 0) return this.curve.getInfinity();\n\n    var e = k;\n    var h = e.multiply(new BigInteger(\"3\"));\n\n    var neg = this.negate();\n    var R = this;\n\n    var i;\n    for(i = h.bitLength() - 2; i > 0; --i) {\n\tR = R.twice();\n\n\tvar hBit = h.testBit(i);\n\tvar eBit = e.testBit(i);\n\n\tif (hBit != eBit) {\n\t    R = R.add(hBit ? this : neg);\n\t}\n    }\n\n    return R;\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nfunction pointFpMultiplyTwo(j,x,k) {\n  var i;\n  if(j.bitLength() > k.bitLength())\n    i = j.bitLength() - 1;\n  else\n    i = k.bitLength() - 1;\n\n  var R = this.curve.getInfinity();\n  var both = this.add(x);\n  while(i >= 0) {\n    R = R.twice();\n    if(j.testBit(i)) {\n      if(k.testBit(i)) {\n        R = R.add(both);\n      }\n      else {\n        R = R.add(this);\n      }\n    }\n    else {\n      if(k.testBit(i)) {\n        R = R.add(x);\n      }\n    }\n    --i;\n  }\n\n  return R;\n}\n\nECPointFp.prototype.getX = pointFpGetX;\nECPointFp.prototype.getY = pointFpGetY;\nECPointFp.prototype.equals = pointFpEquals;\nECPointFp.prototype.isInfinity = pointFpIsInfinity;\nECPointFp.prototype.negate = pointFpNegate;\nECPointFp.prototype.add = pointFpAdd;\nECPointFp.prototype.twice = pointFpTwice;\nECPointFp.prototype.multiply = pointFpMultiply;\nECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo;\n\n// ----------------\n// ECCurveFp\n\n// constructor\nfunction ECCurveFp(q,a,b) {\n    this.q = q;\n    this.a = this.fromBigInteger(a);\n    this.b = this.fromBigInteger(b);\n    this.infinity = new ECPointFp(this, null, null);\n    this.reducer = new Barrett(this.q);\n}\n\nfunction curveFpGetQ() {\n    return this.q;\n}\n\nfunction curveFpGetA() {\n    return this.a;\n}\n\nfunction curveFpGetB() {\n    return this.b;\n}\n\nfunction curveFpEquals(other) {\n    if(other == this) return true;\n    return(this.q.equals(other.q) && this.a.equals(other.a) && this.b.equals(other.b));\n}\n\nfunction curveFpGetInfinity() {\n    return this.infinity;\n}\n\nfunction curveFpFromBigInteger(x) {\n    return new ECFieldElementFp(this.q, x);\n}\n\nfunction curveReduce(x) {\n    this.reducer.reduce(x);\n}\n\n// for now, work with hex strings because they're easier in JS\nfunction curveFpDecodePointHex(s) {\n    switch(parseInt(s.substr(0,2), 16)) { // first byte\n    case 0:\n\treturn this.infinity;\n    case 2:\n    case 3:\n\t// point compression not supported yet\n\treturn null;\n    case 4:\n    case 6:\n    case 7:\n\tvar len = (s.length - 2) / 2;\n\tvar xHex = s.substr(2, len);\n\tvar yHex = s.substr(len+2, len);\n\n\treturn new ECPointFp(this,\n\t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n\t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n    default: // unsupported\n\treturn null;\n    }\n}\n\nfunction curveFpEncodePointHex(p) {\n\tif (p.isInfinity()) return \"00\";\n\tvar xHex = p.getX().toBigInteger().toString(16);\n\tvar yHex = p.getY().toBigInteger().toString(16);\n\tvar oLen = this.getQ().toString(16).length;\n\tif ((oLen % 2) != 0) oLen++;\n\twhile (xHex.length < oLen) {\n\t\txHex = \"0\" + xHex;\n\t}\n\twhile (yHex.length < oLen) {\n\t\tyHex = \"0\" + yHex;\n\t}\n\treturn \"04\" + xHex + yHex;\n}\n\nECCurveFp.prototype.getQ = curveFpGetQ;\nECCurveFp.prototype.getA = curveFpGetA;\nECCurveFp.prototype.getB = curveFpGetB;\nECCurveFp.prototype.equals = curveFpEquals;\nECCurveFp.prototype.getInfinity = curveFpGetInfinity;\nECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger;\nECCurveFp.prototype.reduce = curveReduce;\n//ECCurveFp.prototype.decodePointHex = curveFpDecodePointHex;\nECCurveFp.prototype.encodePointHex = curveFpEncodePointHex;\n\n// from: https://github.com/kaielvin/jsbn-ec-point-compression\nECCurveFp.prototype.decodePointHex = function(s)\n{\n\tvar yIsEven;\n    switch(parseInt(s.substr(0,2), 16)) { // first byte\n    case 0:\n\treturn this.infinity;\n    case 2:\n\tyIsEven = false;\n    case 3:\n\tif(yIsEven == undefined) yIsEven = true;\n\tvar len = s.length - 2;\n\tvar xHex = s.substr(2, len);\n\tvar x = this.fromBigInteger(new BigInteger(xHex,16));\n\tvar alpha = x.multiply(x.square().add(this.getA())).add(this.getB());\n\tvar beta = alpha.sqrt();\n\n    if (beta == null) throw \"Invalid point compression\";\n\n    var betaValue = beta.toBigInteger();\n    if (betaValue.testBit(0) != yIsEven)\n    {\n        // Use the other root\n        beta = this.fromBigInteger(this.getQ().subtract(betaValue));\n    }\n    return new ECPointFp(this,x,beta);\n    case 4:\n    case 6:\n    case 7:\n\tvar len = (s.length - 2) / 2;\n\tvar xHex = s.substr(2, len);\n\tvar yHex = s.substr(len+2, len);\n\n\treturn new ECPointFp(this,\n\t\t\t     this.fromBigInteger(new BigInteger(xHex, 16)),\n\t\t\t     this.fromBigInteger(new BigInteger(yHex, 16)));\n\n    default: // unsupported\n\treturn null;\n    }\n}\nECCurveFp.prototype.encodeCompressedPointHex = function(p)\n{\n\tif (p.isInfinity()) return \"00\";\n\tvar xHex = p.getX().toBigInteger().toString(16);\n\tvar oLen = this.getQ().toString(16).length;\n\tif ((oLen % 2) != 0) oLen++;\n\twhile (xHex.length < oLen)\n\t\txHex = \"0\" + xHex;\n\tvar yPrefix;\n\tif(p.getY().toBigInteger().isEven()) yPrefix = \"02\";\n\telse                                 yPrefix = \"03\";\n\n\treturn yPrefix + xHex;\n}\n\n\nECFieldElementFp.prototype.getR = function()\n{\n\tif(this.r != undefined) return this.r;\n\n    this.r = null;\n    var bitLength = this.q.bitLength();\n    if (bitLength > 128)\n    {\n        var firstWord = this.q.shiftRight(bitLength - 64);\n        if (firstWord.intValue() == -1)\n        {\n            this.r = BigInteger.ONE.shiftLeft(bitLength).subtract(this.q);\n        }\n    }\n    return this.r;\n}\nECFieldElementFp.prototype.modMult = function(x1,x2)\n{\n    return this.modReduce(x1.multiply(x2));\n}\nECFieldElementFp.prototype.modReduce = function(x)\n{\n    if (this.getR() != null)\n    {\n        var qLen = q.bitLength();\n        while (x.bitLength() > (qLen + 1))\n        {\n            var u = x.shiftRight(qLen);\n            var v = x.subtract(u.shiftLeft(qLen));\n            if (!this.getR().equals(BigInteger.ONE))\n            {\n                u = u.multiply(this.getR());\n            }\n            x = u.add(v); \n        }\n        while (x.compareTo(q) >= 0)\n        {\n            x = x.subtract(q);\n        }\n    }\n    else\n    {\n        x = x.mod(q);\n    }\n    return x;\n}\nECFieldElementFp.prototype.sqrt = function()\n{\n    if (!this.q.testBit(0)) throw \"unsupported\";\n\n    // p mod 4 == 3\n    if (this.q.testBit(1))\n    {\n    \tvar z = new ECFieldElementFp(this.q,this.x.modPow(this.q.shiftRight(2).add(BigInteger.ONE),this.q));\n    \treturn z.square().equals(this) ? z : null;\n    }\n\n    // p mod 4 == 1\n    var qMinusOne = this.q.subtract(BigInteger.ONE);\n\n    var legendreExponent = qMinusOne.shiftRight(1);\n    if (!(this.x.modPow(legendreExponent, this.q).equals(BigInteger.ONE)))\n    {\n        return null;\n    }\n\n    var u = qMinusOne.shiftRight(2);\n    var k = u.shiftLeft(1).add(BigInteger.ONE);\n\n    var Q = this.x;\n    var fourQ = modDouble(modDouble(Q));\n\n    var U, V;\n    do\n    {\n        var P;\n        do\n        {\n            P = new BigInteger(this.q.bitLength(), new SecureRandom());\n        }\n        while (P.compareTo(this.q) >= 0\n            || !(P.multiply(P).subtract(fourQ).modPow(legendreExponent, this.q).equals(qMinusOne)));\n\n        var result = this.lucasSequence(P, Q, k);\n        U = result[0];\n        V = result[1];\n\n        if (this.modMult(V, V).equals(fourQ))\n        {\n            // Integer division by 2, mod q\n            if (V.testBit(0))\n            {\n                V = V.add(q);\n            }\n\n            V = V.shiftRight(1);\n\n            return new ECFieldElementFp(q,V);\n        }\n    }\n    while (U.equals(BigInteger.ONE) || U.equals(qMinusOne));\n\n    return null;\n}\nECFieldElementFp.prototype.lucasSequence = function(P,Q,k)\n{\n    var n = k.bitLength();\n    var s = k.getLowestSetBit();\n\n    var Uh = BigInteger.ONE;\n    var Vl = BigInteger.TWO;\n    var Vh = P;\n    var Ql = BigInteger.ONE;\n    var Qh = BigInteger.ONE;\n\n    for (var j = n - 1; j >= s + 1; --j)\n    {\n        Ql = this.modMult(Ql, Qh);\n\n        if (k.testBit(j))\n        {\n            Qh = this.modMult(Ql, Q);\n            Uh = this.modMult(Uh, Vh);\n            Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n            Vh = this.modReduce(Vh.multiply(Vh).subtract(Qh.shiftLeft(1)));\n        }\n        else\n        {\n            Qh = Ql;\n            Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n            Vh = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n            Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n        }\n    }\n\n    Ql = this.modMult(Ql, Qh);\n    Qh = this.modMult(Ql, Q);\n    Uh = this.modReduce(Uh.multiply(Vl).subtract(Ql));\n    Vl = this.modReduce(Vh.multiply(Vl).subtract(P.multiply(Ql)));\n    Ql = this.modMult(Ql, Qh);\n\n    for (var j = 1; j <= s; ++j)\n    {\n        Uh = this.modMult(Uh, Vl);\n        Vl = this.modReduce(Vl.multiply(Vl).subtract(Ql.shiftLeft(1)));\n        Ql = this.modMult(Ql, Ql);\n    }\n\n    return [ Uh, Vl ];\n}\n\nvar exports = {\n  ECCurveFp: ECCurveFp,\n  ECPointFp: ECPointFp,\n  ECFieldElementFp: ECFieldElementFp\n}\n\nmodule.exports = exports\n","// Named EC curves\n\n// Requires ec.js, jsbn.js, and jsbn2.js\nvar BigInteger = require('jsbn').BigInteger\nvar ECCurveFp = require('./ec.js').ECCurveFp\n\n\n// ----------------\n// X9ECParameters\n\n// constructor\nfunction X9ECParameters(curve,g,n,h) {\n    this.curve = curve;\n    this.g = g;\n    this.n = n;\n    this.h = h;\n}\n\nfunction x9getCurve() {\n    return this.curve;\n}\n\nfunction x9getG() {\n    return this.g;\n}\n\nfunction x9getN() {\n    return this.n;\n}\n\nfunction x9getH() {\n    return this.h;\n}\n\nX9ECParameters.prototype.getCurve = x9getCurve;\nX9ECParameters.prototype.getG = x9getG;\nX9ECParameters.prototype.getN = x9getN;\nX9ECParameters.prototype.getH = x9getH;\n\n// ----------------\n// SECNamedCurves\n\nfunction fromHex(s) { return new BigInteger(s, 16); }\n\nfunction secp128r1() {\n    // p = 2^128 - 2^97 - 1\n    var p = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFDFFFFFFFFFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"E87579C11079F43DD824993C2CEE5ED3\");\n    //byte[] S = Hex.decode(\"000E0D4D696E6768756151750CC03A4473D03679\");\n    var n = fromHex(\"FFFFFFFE0000000075A30D1B9038A115\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"161FF7528B899B2D0C28607CA52C5B86\"\n\t\t+ \"CF5AC8395BAFEB13C02DA292DDED7A83\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp160k1() {\n    // p = 2^160 - 2^32 - 2^14 - 2^12 - 2^9 - 2^8 - 2^7 - 2^3 - 2^2 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFAC73\");\n    var a = BigInteger.ZERO;\n    var b = fromHex(\"7\");\n    //byte[] S = null;\n    var n = fromHex(\"0100000000000000000001B8FA16DFAB9ACA16B6B3\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"3B4C382CE37AA192A4019E763036F4F5DD4D7EBB\"\n                + \"938CF935318FDCED6BC28286531733C3F03C4FEE\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp160r1() {\n    // p = 2^160 - 2^31 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFF\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7FFFFFFC\");\n    var b = fromHex(\"1C97BEFC54BD7A8B65ACF89F81D4D4ADC565FA45\");\n    //byte[] S = Hex.decode(\"1053CDE42C14D696E67687561517533BF3F83345\");\n    var n = fromHex(\"0100000000000000000001F4C8F927AED3CA752257\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n\t\t+ \"4A96B5688EF573284664698968C38BB913CBFC82\"\n\t\t+ \"23A628553168947D59DCC912042351377AC5FB32\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp192k1() {\n    // p = 2^192 - 2^32 - 2^12 - 2^8 - 2^7 - 2^6 - 2^3 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFEE37\");\n    var a = BigInteger.ZERO;\n    var b = fromHex(\"3\");\n    //byte[] S = null;\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFE26F2FC170F69466A74DEFD8D\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"DB4FF10EC057E9AE26B07D0280B7F4341DA5D1B1EAE06C7D\"\n                + \"9B2F2F6D9C5628A7844163D015BE86344082AA88D95E2F9D\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp192r1() {\n    // p = 2^192 - 2^64 - 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"64210519E59C80E70FA7E9AB72243049FEB8DEECC146B9B1\");\n    //byte[] S = Hex.decode(\"3045AE6FC8422F64ED579528D38120EAE12196D5\");\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFF99DEF836146BC9B1B4D22831\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"188DA80EB03090F67CBF20EB43A18800F4FF0AFD82FF1012\"\n                + \"07192B95FFC8DA78631011ED6B24CDD573F977A11E794811\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp224r1() {\n    // p = 2^224 - 2^96 + 1\n    var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000001\");\n    var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFE\");\n    var b = fromHex(\"B4050A850C04B3ABF54132565044B0B7D7BFD8BA270B39432355FFB4\");\n    //byte[] S = Hex.decode(\"BD71344799D5C7FCDC45B59FA3B9AB8F6A948BC5\");\n    var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFF16A2E0B8F03E13DD29455C5C2A3D\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"B70E0CBD6BB4BF7F321390B94A03C1D356C21122343280D6115C1D21\"\n                + \"BD376388B5F723FB4C22DFE6CD4375A05A07476444D5819985007E34\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp256r1() {\n    // p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1\n    var p = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\");\n    var a = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\");\n    var b = fromHex(\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\");\n    //byte[] S = Hex.decode(\"C49D360886E704936A6678E1139D26B7819F7E90\");\n    var n = fromHex(\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\");\n    var h = BigInteger.ONE;\n    var curve = new ECCurveFp(p, a, b);\n    var G = curve.decodePointHex(\"04\"\n                + \"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\"\n\t\t+ \"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\");\n    return new X9ECParameters(curve, G, n, h);\n}\n\n// TODO: make this into a proper hashtable\nfunction getSECCurveByName(name) {\n    if(name == \"secp128r1\") return secp128r1();\n    if(name == \"secp160k1\") return secp160k1();\n    if(name == \"secp160r1\") return secp160r1();\n    if(name == \"secp192k1\") return secp192k1();\n    if(name == \"secp192r1\") return secp192r1();\n    if(name == \"secp224r1\") return secp224r1();\n    if(name == \"secp256r1\") return secp256r1();\n    return null;\n}\n\nmodule.exports = {\n  \"secp128r1\":secp128r1,\n  \"secp160k1\":secp160k1,\n  \"secp160r1\":secp160r1,\n  \"secp192k1\":secp192k1,\n  \"secp192r1\":secp192r1,\n  \"secp224r1\":secp224r1,\n  \"secp256r1\":secp256r1\n}\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n","'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.6+9869a4bc\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","/*\n * extsprintf.js: extended POSIX-style sprintf\n */\n\nvar mod_assert = require('assert');\nvar mod_util = require('util');\n\n/*\n * Public interface\n */\nexports.sprintf = jsSprintf;\nexports.printf = jsPrintf;\nexports.fprintf = jsFprintf;\n\n/*\n * Stripped down version of s[n]printf(3c).  We make a best effort to throw an\n * exception when given a format string we don't understand, rather than\n * ignoring it, so that we won't break existing programs if/when we go implement\n * the rest of this.\n *\n * This implementation currently supports specifying\n *\t- field alignment ('-' flag),\n * \t- zero-pad ('0' flag)\n *\t- always show numeric sign ('+' flag),\n *\t- field width\n *\t- conversions for strings, decimal integers, and floats (numbers).\n *\t- argument size specifiers.  These are all accepted but ignored, since\n *\t  Javascript has no notion of the physical size of an argument.\n *\n * Everything else is currently unsupported, most notably precision, unsigned\n * numbers, non-decimal numbers, and characters.\n */\nfunction jsSprintf(fmt)\n{\n\tvar regex = [\n\t    '([^%]*)',\t\t\t\t/* normal text */\n\t    '%',\t\t\t\t/* start of format */\n\t    '([\\'\\\\-+ #0]*?)',\t\t\t/* flags (optional) */\n\t    '([1-9]\\\\d*)?',\t\t\t/* width (optional) */\n\t    '(\\\\.([1-9]\\\\d*))?',\t\t/* precision (optional) */\n\t    '[lhjztL]*?',\t\t\t/* length mods (ignored) */\n\t    '([diouxXfFeEgGaAcCsSp%jr])'\t/* conversion */\n\t].join('');\n\n\tvar re = new RegExp(regex);\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\tvar flags, width, precision, conversion;\n\tvar left, pad, sign, arg, match;\n\tvar ret = '';\n\tvar argn = 1;\n\n\tmod_assert.equal('string', typeof (fmt));\n\n\twhile ((match = re.exec(fmt)) !== null) {\n\t\tret += match[1];\n\t\tfmt = fmt.substring(match[0].length);\n\n\t\tflags = match[2] || '';\n\t\twidth = match[3] || 0;\n\t\tprecision = match[4] || '';\n\t\tconversion = match[6];\n\t\tleft = false;\n\t\tsign = false;\n\t\tpad = ' ';\n\n\t\tif (conversion == '%') {\n\t\t\tret += '%';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (args.length === 0)\n\t\t\tthrow (new Error('too few args to sprintf'));\n\n\t\targ = args.shift();\n\t\targn++;\n\n\t\tif (flags.match(/[\\' #]/))\n\t\t\tthrow (new Error(\n\t\t\t    'unsupported flags: ' + flags));\n\n\t\tif (precision.length > 0)\n\t\t\tthrow (new Error(\n\t\t\t    'non-zero precision not supported'));\n\n\t\tif (flags.match(/-/))\n\t\t\tleft = true;\n\n\t\tif (flags.match(/0/))\n\t\t\tpad = '0';\n\n\t\tif (flags.match(/\\+/))\n\t\t\tsign = true;\n\n\t\tswitch (conversion) {\n\t\tcase 's':\n\t\t\tif (arg === undefined || arg === null)\n\t\t\t\tthrow (new Error('argument ' + argn +\n\t\t\t\t    ': attempted to print undefined or null ' +\n\t\t\t\t    'as a string'));\n\t\t\tret += doPad(pad, width, left, arg.toString());\n\t\t\tbreak;\n\n\t\tcase 'd':\n\t\t\targ = Math.floor(arg);\n\t\t\t/*jsl:fallthru*/\n\t\tcase 'f':\n\t\t\tsign = sign && arg > 0 ? '+' : '';\n\t\t\tret += sign + doPad(pad, width, left,\n\t\t\t    arg.toString());\n\t\t\tbreak;\n\n\t\tcase 'x':\n\t\t\tret += doPad(pad, width, left, arg.toString(16));\n\t\t\tbreak;\n\n\t\tcase 'j': /* non-standard */\n\t\t\tif (width === 0)\n\t\t\t\twidth = 10;\n\t\t\tret += mod_util.inspect(arg, false, width);\n\t\t\tbreak;\n\n\t\tcase 'r': /* non-standard */\n\t\t\tret += dumpException(arg);\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow (new Error('unsupported conversion: ' +\n\t\t\t    conversion));\n\t\t}\n\t}\n\n\tret += fmt;\n\treturn (ret);\n}\n\nfunction jsPrintf() {\n\tvar args = Array.prototype.slice.call(arguments);\n\targs.unshift(process.stdout);\n\tjsFprintf.apply(null, args);\n}\n\nfunction jsFprintf(stream) {\n\tvar args = Array.prototype.slice.call(arguments, 1);\n\treturn (stream.write(jsSprintf.apply(this, args)));\n}\n\nfunction doPad(chr, width, left, str)\n{\n\tvar ret = str;\n\n\twhile (ret.length < width) {\n\t\tif (left)\n\t\t\tret += chr;\n\t\telse\n\t\t\tret = chr + ret;\n\t}\n\n\treturn (ret);\n}\n\n/*\n * This function dumps long stack traces for exceptions having a cause() method.\n * See node-verror for an example.\n */\nfunction dumpException(ex)\n{\n\tvar ret;\n\n\tif (!(ex instanceof Error))\n\t\tthrow (new Error(jsSprintf('invalid type for %%r: %j', ex)));\n\n\t/* Note that V8 prepends \"ex.stack\" with ex.toString(). */\n\tret = 'EXCEPTION: ' + ex.constructor.name + ': ' + ex.stack;\n\n\tif (ex.cause && typeof (ex.cause) === 'function') {\n\t\tvar cex = ex.cause();\n\t\tif (cex) {\n\t\t\tret += '\\nCaused by: ' + dumpException(cex);\n\t\t}\n\t}\n\n\treturn (ret);\n}\n","// Copyright 2015 Joyent, Inc.\n\nvar parser = require('./parser');\nvar signer = require('./signer');\nvar verify = require('./verify');\nvar utils = require('./utils');\n\n\n\n///--- API\n\nmodule.exports = {\n\n  parse: parser.parseRequest,\n  parseRequest: parser.parseRequest,\n\n  sign: signer.signRequest,\n  signRequest: signer.signRequest,\n  createSigner: signer.createSigner,\n  isSigner: signer.isSigner,\n\n  sshKeyToPEM: utils.sshKeyToPEM,\n  sshKeyFingerprint: utils.fingerprint,\n  pemToRsaSSHKey: utils.pemToRsaSSHKey,\n\n  verify: verify.verifySignature,\n  verifySignature: verify.verifySignature,\n  verifyHMAC: verify.verifyHMAC\n};\n","// Copyright 2012 Joyent, Inc.  All rights reserved.\n\nvar assert = require('assert-plus');\nvar util = require('util');\nvar utils = require('./utils');\n\n\n\n///--- Globals\n\nvar HASH_ALGOS = utils.HASH_ALGOS;\nvar PK_ALGOS = utils.PK_ALGOS;\nvar HttpSignatureError = utils.HttpSignatureError;\nvar InvalidAlgorithmError = utils.InvalidAlgorithmError;\nvar validateAlgorithm = utils.validateAlgorithm;\n\nvar State = {\n  New: 0,\n  Params: 1\n};\n\nvar ParamsState = {\n  Name: 0,\n  Quote: 1,\n  Value: 2,\n  Comma: 3\n};\n\n///--- Specific Errors\n\n\nfunction ExpiredRequestError(message) {\n  HttpSignatureError.call(this, message, ExpiredRequestError);\n}\nutil.inherits(ExpiredRequestError, HttpSignatureError);\n\n\nfunction InvalidHeaderError(message) {\n  HttpSignatureError.call(this, message, InvalidHeaderError);\n}\nutil.inherits(InvalidHeaderError, HttpSignatureError);\n\n\nfunction InvalidParamsError(message) {\n  HttpSignatureError.call(this, message, InvalidParamsError);\n}\nutil.inherits(InvalidParamsError, HttpSignatureError);\n\n\nfunction MissingHeaderError(message) {\n  HttpSignatureError.call(this, message, MissingHeaderError);\n}\nutil.inherits(MissingHeaderError, HttpSignatureError);\n\nfunction StrictParsingError(message) {\n  HttpSignatureError.call(this, message, StrictParsingError);\n}\nutil.inherits(StrictParsingError, HttpSignatureError);\n\n///--- Exported API\n\nmodule.exports = {\n\n  /**\n   * Parses the 'Authorization' header out of an http.ServerRequest object.\n   *\n   * Note that this API will fully validate the Authorization header, and throw\n   * on any error.  It will not however check the signature, or the keyId format\n   * as those are specific to your environment.  You can use the options object\n   * to pass in extra constraints.\n   *\n   * As a response object you can expect this:\n   *\n   *     {\n   *       \"scheme\": \"Signature\",\n   *       \"params\": {\n   *         \"keyId\": \"foo\",\n   *         \"algorithm\": \"rsa-sha256\",\n   *         \"headers\": [\n   *           \"date\" or \"x-date\",\n   *           \"digest\"\n   *         ],\n   *         \"signature\": \"base64\"\n   *       },\n   *       \"signingString\": \"ready to be passed to crypto.verify()\"\n   *     }\n   *\n   * @param {Object} request an http.ServerRequest.\n   * @param {Object} options an optional options object with:\n   *                   - clockSkew: allowed clock skew in seconds (default 300).\n   *                   - headers: required header names (def: date or x-date)\n   *                   - algorithms: algorithms to support (default: all).\n   *                   - strict: should enforce latest spec parsing\n   *                             (default: false).\n   * @return {Object} parsed out object (see above).\n   * @throws {TypeError} on invalid input.\n   * @throws {InvalidHeaderError} on an invalid Authorization header error.\n   * @throws {InvalidParamsError} if the params in the scheme are invalid.\n   * @throws {MissingHeaderError} if the params indicate a header not present,\n   *                              either in the request headers from the params,\n   *                              or not in the params from a required header\n   *                              in options.\n   * @throws {StrictParsingError} if old attributes are used in strict parsing\n   *                              mode.\n   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.\n   */\n  parseRequest: function parseRequest(request, options) {\n    assert.object(request, 'request');\n    assert.object(request.headers, 'request.headers');\n    if (options === undefined) {\n      options = {};\n    }\n    if (options.headers === undefined) {\n      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];\n    }\n    assert.object(options, 'options');\n    assert.arrayOfString(options.headers, 'options.headers');\n    assert.optionalFinite(options.clockSkew, 'options.clockSkew');\n\n    var headers = request.headers;\n    var authzHeaderName = options.authorizationHeaderName;\n    var authz = headers[authzHeaderName] || headers[utils.HEADER.AUTH] ||\n      headers[utils.HEADER.SIG];\n\n    if (!authz) {\n      var errHeader = authzHeaderName ? authzHeaderName :\n        utils.HEADER.AUTH + ' or ' + utils.HEADER.SIG;\n\n      throw new MissingHeaderError('no ' + errHeader + ' header ' +\n        'present in the request');\n    }\n\n    options.clockSkew = options.clockSkew || 300;\n\n\n    var i = 0;\n    var state = authz === headers[utils.HEADER.SIG] ? State.Params : State.New;\n    var substate = ParamsState.Name;\n    var tmpName = '';\n    var tmpValue = '';\n\n    var parsed = {\n      scheme: authz === headers[utils.HEADER.SIG] ? 'Signature' : '',\n      params: {},\n      signingString: ''\n    };\n\n    for (i = 0; i < authz.length; i++) {\n      var c = authz.charAt(i);\n\n      switch (Number(state)) {\n\n        case State.New:\n          if (c !== ' ') parsed.scheme += c;\n          else state = State.Params;\n          break;\n\n        case State.Params:\n          switch (Number(substate)) {\n\n            case ParamsState.Name:\n              var code = c.charCodeAt(0);\n              // restricted name of A-Z / a-z\n              if ((code >= 0x41 && code <= 0x5a) || // A-Z\n                (code >= 0x61 && code <= 0x7a)) { // a-z\n                tmpName += c;\n              } else if (c === '=') {\n                if (tmpName.length === 0)\n                  throw new InvalidHeaderError('bad param format');\n                substate = ParamsState.Quote;\n              } else {\n                throw new InvalidHeaderError('bad param format');\n              }\n              break;\n\n            case ParamsState.Quote:\n              if (c === '\"') {\n                tmpValue = '';\n                substate = ParamsState.Value;\n              } else {\n                throw new InvalidHeaderError('bad param format');\n              }\n              break;\n\n            case ParamsState.Value:\n              if (c === '\"') {\n                parsed.params[tmpName] = tmpValue;\n                substate = ParamsState.Comma;\n              } else {\n                tmpValue += c;\n              }\n              break;\n\n            case ParamsState.Comma:\n              if (c === ',') {\n                tmpName = '';\n                substate = ParamsState.Name;\n              } else {\n                throw new InvalidHeaderError('bad param format');\n              }\n              break;\n\n            default:\n              throw new Error('Invalid substate');\n          }\n          break;\n\n        default:\n          throw new Error('Invalid substate');\n      }\n\n    }\n\n    if (!parsed.params.headers || parsed.params.headers === '') {\n      if (request.headers['x-date']) {\n        parsed.params.headers = ['x-date'];\n      } else {\n        parsed.params.headers = ['date'];\n      }\n    } else {\n      parsed.params.headers = parsed.params.headers.split(' ');\n    }\n\n    // Minimally validate the parsed object\n    if (!parsed.scheme || parsed.scheme !== 'Signature')\n      throw new InvalidHeaderError('scheme was not \"Signature\"');\n\n    if (!parsed.params.keyId)\n      throw new InvalidHeaderError('keyId was not specified');\n\n    if (!parsed.params.algorithm)\n      throw new InvalidHeaderError('algorithm was not specified');\n\n    if (!parsed.params.signature)\n      throw new InvalidHeaderError('signature was not specified');\n\n    // Check the algorithm against the official list\n    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();\n    try {\n      validateAlgorithm(parsed.params.algorithm);\n    } catch (e) {\n      if (e instanceof InvalidAlgorithmError)\n        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +\n          'supported'));\n      else\n        throw (e);\n    }\n\n    // Build the signingString\n    for (i = 0; i < parsed.params.headers.length; i++) {\n      var h = parsed.params.headers[i].toLowerCase();\n      parsed.params.headers[i] = h;\n\n      if (h === 'request-line') {\n        if (!options.strict) {\n          /*\n           * We allow headers from the older spec drafts if strict parsing isn't\n           * specified in options.\n           */\n          parsed.signingString +=\n            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;\n        } else {\n          /* Strict parsing doesn't allow older draft headers. */\n          throw (new StrictParsingError('request-line is not a valid header ' +\n            'with strict parsing enabled.'));\n        }\n      } else if (h === '(request-target)') {\n        parsed.signingString +=\n          '(request-target): ' + request.method.toLowerCase() + ' ' +\n          request.url;\n      } else {\n        var value = request.headers[h];\n        if (value === undefined)\n          throw new MissingHeaderError(h + ' was not in the request');\n        parsed.signingString += h + ': ' + value;\n      }\n\n      if ((i + 1) < parsed.params.headers.length)\n        parsed.signingString += '\\n';\n    }\n\n    // Check against the constraints\n    var date;\n    if (request.headers.date || request.headers['x-date']) {\n      if (request.headers['x-date']) {\n        date = new Date(request.headers['x-date']);\n      } else {\n        date = new Date(request.headers.date);\n      }\n      var now = new Date();\n      var skew = Math.abs(now.getTime() - date.getTime());\n\n      if (skew > options.clockSkew * 1000) {\n        throw new ExpiredRequestError('clock skew of ' +\n          (skew / 1000) +\n          's was greater than ' +\n          options.clockSkew + 's');\n      }\n    }\n\n    options.headers.forEach(function (hdr) {\n      // Remember that we already checked any headers in the params\n      // were in the request, so if this passes we're good.\n      if (parsed.params.headers.indexOf(hdr.toLowerCase()) < 0)\n        throw new MissingHeaderError(hdr + ' was not a signed header');\n    });\n\n    if (options.algorithms) {\n      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)\n        throw new InvalidParamsError(parsed.params.algorithm +\n          ' is not a supported algorithm');\n    }\n\n    parsed.algorithm = parsed.params.algorithm.toUpperCase();\n    parsed.keyId = parsed.params.keyId;\n    return parsed;\n  }\n\n};\n","// Copyright 2012 Joyent, Inc.  All rights reserved.\n\nvar assert = require('assert-plus');\nvar crypto = require('crypto');\nvar util = require('util');\nvar sshpk = require('sshpk');\nvar jsprim = require('jsprim');\nvar utils = require('./utils');\n\nvar sprintf = require('util').format;\n\nvar HASH_ALGOS = utils.HASH_ALGOS;\nvar PK_ALGOS = utils.PK_ALGOS;\nvar InvalidAlgorithmError = utils.InvalidAlgorithmError;\nvar HttpSignatureError = utils.HttpSignatureError;\nvar validateAlgorithm = utils.validateAlgorithm;\n\n///--- Globals\n\nvar AUTHZ_FMT =\n  'Signature keyId=\"%s\",algorithm=\"%s\",headers=\"%s\",signature=\"%s\"';\n\nvar SIGNATURE_FMT = 'keyId=\"%s\",algorithm=\"%s\",headers=\"%s\",signature=\"%s\"';\n\n///--- Specific Errors\n\nfunction MissingHeaderError(message) {\n  HttpSignatureError.call(this, message, MissingHeaderError);\n}\nutil.inherits(MissingHeaderError, HttpSignatureError);\n\nfunction StrictParsingError(message) {\n  HttpSignatureError.call(this, message, StrictParsingError);\n}\nutil.inherits(StrictParsingError, HttpSignatureError);\n\n/* See createSigner() */\nfunction RequestSigner(options) {\n  assert.object(options, 'options');\n\n  var alg = [];\n  if (options.algorithm !== undefined) {\n    assert.string(options.algorithm, 'options.algorithm');\n    alg = validateAlgorithm(options.algorithm);\n  }\n  this.rs_alg = alg;\n\n  /*\n   * RequestSigners come in two varieties: ones with an rs_signFunc, and ones\n   * with an rs_signer.\n   *\n   * rs_signFunc-based RequestSigners have to build up their entire signing\n   * string within the rs_lines array and give it to rs_signFunc as a single\n   * concat'd blob. rs_signer-based RequestSigners can add a line at a time to\n   * their signing state by using rs_signer.update(), thus only needing to\n   * buffer the hash function state and one line at a time.\n   */\n  if (options.sign !== undefined) {\n    assert.func(options.sign, 'options.sign');\n    this.rs_signFunc = options.sign;\n\n  } else if (alg[0] === 'hmac' && options.key !== undefined) {\n    assert.string(options.keyId, 'options.keyId');\n    this.rs_keyId = options.keyId;\n\n    if (typeof (options.key) !== 'string' && !Buffer.isBuffer(options.key))\n      throw (new TypeError('options.key for HMAC must be a string or Buffer'));\n\n    /*\n     * Make an rs_signer for HMACs, not a rs_signFunc -- HMACs digest their\n     * data in chunks rather than requiring it all to be given in one go\n     * at the end, so they are more similar to signers than signFuncs.\n     */\n    this.rs_signer = crypto.createHmac(alg[1].toUpperCase(), options.key);\n    this.rs_signer.sign = function () {\n      var digest = this.digest('base64');\n      return ({\n        hashAlgorithm: alg[1],\n        toString: function () { return (digest); }\n      });\n    };\n\n  } else if (options.key !== undefined) {\n    var key = options.key;\n    if (typeof (key) === 'string' || Buffer.isBuffer(key))\n      key = sshpk.parsePrivateKey(key);\n\n    assert.ok(sshpk.PrivateKey.isPrivateKey(key, [1, 2]),\n      'options.key must be a sshpk.PrivateKey');\n    this.rs_key = key;\n\n    assert.string(options.keyId, 'options.keyId');\n    this.rs_keyId = options.keyId;\n\n    if (!PK_ALGOS[key.type]) {\n      throw (new InvalidAlgorithmError(key.type.toUpperCase() + ' type ' +\n        'keys are not supported'));\n    }\n\n    if (alg[0] !== undefined && key.type !== alg[0]) {\n      throw (new InvalidAlgorithmError('options.key must be a ' +\n        alg[0].toUpperCase() + ' key, was given a ' +\n        key.type.toUpperCase() + ' key instead'));\n    }\n\n    this.rs_signer = key.createSign(alg[1]);\n\n  } else {\n    throw (new TypeError('options.sign (func) or options.key is required'));\n  }\n\n  this.rs_headers = [];\n  this.rs_lines = [];\n}\n\n/**\n * Adds a header to be signed, with its value, into this signer.\n *\n * @param {String} header\n * @param {String} value\n * @return {String} value written\n */\nRequestSigner.prototype.writeHeader = function (header, value) {\n  assert.string(header, 'header');\n  header = header.toLowerCase();\n  assert.string(value, 'value');\n\n  this.rs_headers.push(header);\n\n  if (this.rs_signFunc) {\n    this.rs_lines.push(header + ': ' + value);\n\n  } else {\n    var line = header + ': ' + value;\n    if (this.rs_headers.length > 0)\n      line = '\\n' + line;\n    this.rs_signer.update(line);\n  }\n\n  return (value);\n};\n\n/**\n * Adds a default Date header, returning its value.\n *\n * @return {String}\n */\nRequestSigner.prototype.writeDateHeader = function () {\n  return (this.writeHeader('date', jsprim.rfc1123(new Date())));\n};\n\n/**\n * Adds the request target line to be signed.\n *\n * @param {String} method, HTTP method (e.g. 'get', 'post', 'put')\n * @param {String} path\n */\nRequestSigner.prototype.writeTarget = function (method, path) {\n  assert.string(method, 'method');\n  assert.string(path, 'path');\n  method = method.toLowerCase();\n  this.writeHeader('(request-target)', method + ' ' + path);\n};\n\n/**\n * Calculate the value for the Authorization header on this request\n * asynchronously.\n *\n * @param {Func} callback (err, authz)\n */\nRequestSigner.prototype.sign = function (cb) {\n  assert.func(cb, 'callback');\n\n  if (this.rs_headers.length < 1)\n    throw (new Error('At least one header must be signed'));\n\n  var alg, authz;\n  if (this.rs_signFunc) {\n    var data = this.rs_lines.join('\\n');\n    var self = this;\n    this.rs_signFunc(data, function (err, sig) {\n      if (err) {\n        cb(err);\n        return;\n      }\n      try {\n        assert.object(sig, 'signature');\n        assert.string(sig.keyId, 'signature.keyId');\n        assert.string(sig.algorithm, 'signature.algorithm');\n        assert.string(sig.signature, 'signature.signature');\n        alg = validateAlgorithm(sig.algorithm);\n\n        authz = sprintf(AUTHZ_FMT,\n          sig.keyId,\n          sig.algorithm,\n          self.rs_headers.join(' '),\n          sig.signature);\n      } catch (e) {\n        cb(e);\n        return;\n      }\n      cb(null, authz);\n    });\n\n  } else {\n    try {\n      var sigObj = this.rs_signer.sign();\n    } catch (e) {\n      cb(e);\n      return;\n    }\n    alg = (this.rs_alg[0] || this.rs_key.type) + '-' + sigObj.hashAlgorithm;\n    var signature = sigObj.toString();\n    authz = sprintf(AUTHZ_FMT,\n      this.rs_keyId,\n      alg,\n      this.rs_headers.join(' '),\n      signature);\n    cb(null, authz);\n  }\n};\n\n///--- Exported API\n\nmodule.exports = {\n  /**\n   * Identifies whether a given object is a request signer or not.\n   *\n   * @param {Object} object, the object to identify\n   * @returns {Boolean}\n   */\n  isSigner: function (obj) {\n    if (typeof (obj) === 'object' && obj instanceof RequestSigner)\n      return (true);\n    return (false);\n  },\n\n  /**\n   * Creates a request signer, used to asynchronously build a signature\n   * for a request (does not have to be an http.ClientRequest).\n   *\n   * @param {Object} options, either:\n   *                   - {String} keyId\n   *                   - {String|Buffer} key\n   *                   - {String} algorithm (optional, required for HMAC)\n   *                 or:\n   *                   - {Func} sign (data, cb)\n   * @return {RequestSigner}\n   */\n  createSigner: function createSigner(options) {\n    return (new RequestSigner(options));\n  },\n\n  /**\n   * Adds an 'Authorization' header to an http.ClientRequest object.\n   *\n   * Note that this API will add a Date header if it's not already set. Any\n   * other headers in the options.headers array MUST be present, or this\n   * will throw.\n   *\n   * You shouldn't need to check the return type; it's just there if you want\n   * to be pedantic.\n   *\n   * The optional flag indicates whether parsing should use strict enforcement\n   * of the version draft-cavage-http-signatures-04 of the spec or beyond.\n   * The default is to be loose and support\n   * older versions for compatibility.\n   *\n   * @param {Object} request an instance of http.ClientRequest.\n   * @param {Object} options signing parameters object:\n   *                   - {String} keyId required.\n   *                   - {String} key required (either a PEM or HMAC key).\n   *                   - {Array} headers optional; defaults to ['date'].\n   *                   - {String} algorithm optional (unless key is HMAC);\n   *                              default is the same as the sshpk default\n   *                              signing algorithm for the type of key given\n   *                   - {String} httpVersion optional; defaults to '1.1'.\n   *                   - {Boolean} strict optional; defaults to 'false'.\n   * @return {Boolean} true if Authorization (and optionally Date) were added.\n   * @throws {TypeError} on bad parameter types (input).\n   * @throws {InvalidAlgorithmError} if algorithm was bad or incompatible with\n   *                                 the given key.\n   * @throws {sshpk.KeyParseError} if key was bad.\n   * @throws {MissingHeaderError} if a header to be signed was specified but\n   *                              was not present.\n   */\n  signRequest: function signRequest(request, options) {\n    assert.object(request, 'request');\n    assert.object(options, 'options');\n    assert.optionalString(options.algorithm, 'options.algorithm');\n    assert.string(options.keyId, 'options.keyId');\n    assert.optionalArrayOfString(options.headers, 'options.headers');\n    assert.optionalString(options.httpVersion, 'options.httpVersion');\n\n    if (!request.getHeader('Date'))\n      request.setHeader('Date', jsprim.rfc1123(new Date()));\n    if (!options.headers)\n      options.headers = ['date'];\n    if (!options.httpVersion)\n      options.httpVersion = '1.1';\n\n    var alg = [];\n    if (options.algorithm) {\n      options.algorithm = options.algorithm.toLowerCase();\n      alg = validateAlgorithm(options.algorithm);\n    }\n\n    var i;\n    var stringToSign = '';\n    for (i = 0; i < options.headers.length; i++) {\n      if (typeof (options.headers[i]) !== 'string')\n        throw new TypeError('options.headers must be an array of Strings');\n\n      var h = options.headers[i].toLowerCase();\n\n      if (h === 'request-line') {\n        if (!options.strict) {\n          /**\n           * We allow headers from the older spec drafts if strict parsing isn't\n           * specified in options.\n           */\n          stringToSign +=\n            request.method + ' ' + request.path + ' HTTP/' +\n            options.httpVersion;\n        } else {\n          /* Strict parsing doesn't allow older draft headers. */\n          throw (new StrictParsingError('request-line is not a valid header ' +\n            'with strict parsing enabled.'));\n        }\n      } else if (h === '(request-target)') {\n        stringToSign +=\n          '(request-target): ' + request.method.toLowerCase() + ' ' +\n          request.path;\n      } else {\n        var value = request.getHeader(h);\n        if (value === undefined || value === '') {\n          throw new MissingHeaderError(h + ' was not in the request');\n        }\n        stringToSign += h + ': ' + value;\n      }\n\n      if ((i + 1) < options.headers.length)\n        stringToSign += '\\n';\n    }\n\n    /* This is just for unit tests. */\n    if (request.hasOwnProperty('_stringToSign')) {\n      request._stringToSign = stringToSign;\n    }\n\n    var signature;\n    if (alg[0] === 'hmac') {\n      if (typeof (options.key) !== 'string' && !Buffer.isBuffer(options.key))\n        throw (new TypeError('options.key must be a string or Buffer'));\n\n      var hmac = crypto.createHmac(alg[1].toUpperCase(), options.key);\n      hmac.update(stringToSign);\n      signature = hmac.digest('base64');\n\n    } else {\n      var key = options.key;\n      if (typeof (key) === 'string' || Buffer.isBuffer(key))\n        key = sshpk.parsePrivateKey(options.key);\n\n      assert.ok(sshpk.PrivateKey.isPrivateKey(key, [1, 2]),\n        'options.key must be a sshpk.PrivateKey');\n\n      if (!PK_ALGOS[key.type]) {\n        throw (new InvalidAlgorithmError(key.type.toUpperCase() + ' type ' +\n          'keys are not supported'));\n      }\n\n      if (alg[0] !== undefined && key.type !== alg[0]) {\n        throw (new InvalidAlgorithmError('options.key must be a ' +\n          alg[0].toUpperCase() + ' key, was given a ' +\n          key.type.toUpperCase() + ' key instead'));\n      }\n\n      var signer = key.createSign(alg[1]);\n      signer.update(stringToSign);\n      var sigObj = signer.sign();\n      if (!HASH_ALGOS[sigObj.hashAlgorithm]) {\n        throw (new InvalidAlgorithmError(sigObj.hashAlgorithm.toUpperCase() +\n          ' is not a supported hash algorithm'));\n      }\n      options.algorithm = key.type + '-' + sigObj.hashAlgorithm;\n      signature = sigObj.toString();\n      assert.notStrictEqual(signature, '', 'empty signature produced');\n    }\n\n    var authzHeaderName = options.authorizationHeaderName || 'Authorization';\n\n    var FMT = authzHeaderName.toLowerCase() === utils.HEADER.SIG ?\n      SIGNATURE_FMT : AUTHZ_FMT;\n\n    request.setHeader(authzHeaderName, sprintf(FMT,\n      options.keyId,\n      options.algorithm,\n      options.headers.join(' '),\n      signature));\n\n    return true;\n  }\n\n};\n","// Copyright 2012 Joyent, Inc.  All rights reserved.\n\nvar assert = require('assert-plus');\nvar sshpk = require('sshpk');\nvar util = require('util');\n\nvar HASH_ALGOS = {\n  'sha1': true,\n  'sha256': true,\n  'sha512': true\n};\n\nvar PK_ALGOS = {\n  'rsa': true,\n  'dsa': true,\n  'ecdsa': true\n};\n\nvar HEADER = {\n  AUTH: 'authorization',\n  SIG: 'signature'\n};\n\nfunction HttpSignatureError(message, caller) {\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, caller || HttpSignatureError);\n\n  this.message = message;\n  this.name = caller.name;\n}\nutil.inherits(HttpSignatureError, Error);\n\nfunction InvalidAlgorithmError(message) {\n  HttpSignatureError.call(this, message, InvalidAlgorithmError);\n}\nutil.inherits(InvalidAlgorithmError, HttpSignatureError);\n\nfunction validateAlgorithm(algorithm) {\n  var alg = algorithm.toLowerCase().split('-');\n\n  if (alg.length !== 2) {\n    throw (new InvalidAlgorithmError(alg[0].toUpperCase() + ' is not a ' +\n      'valid algorithm'));\n  }\n\n  if (alg[0] !== 'hmac' && !PK_ALGOS[alg[0]]) {\n    throw (new InvalidAlgorithmError(alg[0].toUpperCase() + ' type keys ' +\n      'are not supported'));\n  }\n\n  if (!HASH_ALGOS[alg[1]]) {\n    throw (new InvalidAlgorithmError(alg[1].toUpperCase() + ' is not a ' +\n      'supported hash algorithm'));\n  }\n\n  return (alg);\n}\n\n///--- API\n\nmodule.exports = {\n  HEADER: HEADER,\n\n  HASH_ALGOS: HASH_ALGOS,\n  PK_ALGOS: PK_ALGOS,\n\n  HttpSignatureError: HttpSignatureError,\n  InvalidAlgorithmError: InvalidAlgorithmError,\n\n  validateAlgorithm: validateAlgorithm,\n\n  /**\n   * Converts an OpenSSH public key (rsa only) to a PKCS#8 PEM file.\n   *\n   * The intent of this module is to interoperate with OpenSSL only,\n   * specifically the node crypto module's `verify` method.\n   *\n   * @param {String} key an OpenSSH public key.\n   * @return {String} PEM encoded form of the RSA public key.\n   * @throws {TypeError} on bad input.\n   * @throws {Error} on invalid ssh key formatted data.\n   */\n  sshKeyToPEM: function sshKeyToPEM(key) {\n    assert.string(key, 'ssh_key');\n\n    var k = sshpk.parseKey(key, 'ssh');\n    return (k.toString('pem'));\n  },\n\n\n  /**\n   * Generates an OpenSSH fingerprint from an ssh public key.\n   *\n   * @param {String} key an OpenSSH public key.\n   * @return {String} key fingerprint.\n   * @throws {TypeError} on bad input.\n   * @throws {Error} if what you passed doesn't look like an ssh public key.\n   */\n  fingerprint: function fingerprint(key) {\n    assert.string(key, 'ssh_key');\n\n    var k = sshpk.parseKey(key, 'ssh');\n    return (k.fingerprint('md5').toString('hex'));\n  },\n\n  /**\n   * Converts a PKGCS#8 PEM file to an OpenSSH public key (rsa)\n   *\n   * The reverse of the above function.\n   */\n  pemToRsaSSHKey: function pemToRsaSSHKey(pem, comment) {\n    assert.equal('string', typeof (pem), 'typeof pem');\n\n    var k = sshpk.parseKey(pem, 'pem');\n    k.comment = comment;\n    return (k.toString('ssh'));\n  }\n};\n","// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert-plus');\nvar crypto = require('crypto');\nvar sshpk = require('sshpk');\nvar utils = require('./utils');\n\nvar HASH_ALGOS = utils.HASH_ALGOS;\nvar PK_ALGOS = utils.PK_ALGOS;\nvar InvalidAlgorithmError = utils.InvalidAlgorithmError;\nvar HttpSignatureError = utils.HttpSignatureError;\nvar validateAlgorithm = utils.validateAlgorithm;\n\n///--- Exported API\n\nmodule.exports = {\n  /**\n   * Verify RSA/DSA signature against public key.  You are expected to pass in\n   * an object that was returned from `parse()`.\n   *\n   * @param {Object} parsedSignature the object you got from `parse`.\n   * @param {String} pubkey RSA/DSA private key PEM.\n   * @return {Boolean} true if valid, false otherwise.\n   * @throws {TypeError} if you pass in bad arguments.\n   * @throws {InvalidAlgorithmError}\n   */\n  verifySignature: function verifySignature(parsedSignature, pubkey) {\n    assert.object(parsedSignature, 'parsedSignature');\n    if (typeof (pubkey) === 'string' || Buffer.isBuffer(pubkey))\n      pubkey = sshpk.parseKey(pubkey);\n    assert.ok(sshpk.Key.isKey(pubkey, [1, 1]), 'pubkey must be a sshpk.Key');\n\n    var alg = validateAlgorithm(parsedSignature.algorithm);\n    if (alg[0] === 'hmac' || alg[0] !== pubkey.type)\n      return (false);\n\n    var v = pubkey.createVerify(alg[1]);\n    v.update(parsedSignature.signingString);\n    return (v.verify(parsedSignature.params.signature, 'base64'));\n  },\n\n  /**\n   * Verify HMAC against shared secret.  You are expected to pass in an object\n   * that was returned from `parse()`.\n   *\n   * @param {Object} parsedSignature the object you got from `parse`.\n   * @param {String} secret HMAC shared secret.\n   * @return {Boolean} true if valid, false otherwise.\n   * @throws {TypeError} if you pass in bad arguments.\n   * @throws {InvalidAlgorithmError}\n   */\n  verifyHMAC: function verifyHMAC(parsedSignature, secret) {\n    assert.object(parsedSignature, 'parsedHMAC');\n    assert.string(secret, 'secret');\n\n    var alg = validateAlgorithm(parsedSignature.algorithm);\n    if (alg[0] !== 'hmac')\n      return (false);\n\n    var hashAlg = alg[1].toUpperCase();\n\n    var hmac = crypto.createHmac(hashAlg, secret);\n    hmac.update(parsedSignature.signingString);\n\n    /*\n     * Now double-hash to avoid leaking timing information - there's\n     * no easy constant-time compare in JS, so we use this approach\n     * instead. See for more info:\n     * https://www.isecpartners.com/blog/2011/february/double-hmac-\n     * verification.aspx\n     */\n    var h1 = crypto.createHmac(hashAlg, secret);\n    h1.update(hmac.digest());\n    h1 = h1.digest();\n    var h2 = crypto.createHmac(hashAlg, secret);\n    h2.update(new Buffer(parsedSignature.params.signature, 'base64'));\n    h2 = h2.digest();\n\n    /* Node 0.8 returns strings from .digest(). */\n    if (typeof (h1) === 'string')\n      return (h1 === h2);\n    /* And node 0.10 lacks the .equals() method on Buffers. */\n    if (Buffer.isBuffer(h1) && !h1.equals)\n      return (h1.toString('binary') === h2.toString('binary'));\n\n    return (h1.equals(h2));\n  }\n};\n","\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n","(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if(\"number\" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== \"undefined\";\n    if(inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = \"0\".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = \"a\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = \"A\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return \"-\"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:\"0\";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in \"this\"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // \"negative\" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using \"classic\" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = \"x^2/R mod m\"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = \"xy/R mod m\"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // \"constants\"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if(\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))\t// force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A \"null\" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {\t// ret == 1, don't bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n\t// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n\t// For best results, put code like\n\t// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n\t// in your main HTML document.\n\n\tvar rng_state;\n\tvar rng_pool;\n\tvar rng_pptr;\n\n\t// Mix in a 32-bit integer into the pool\n\tfunction rng_seed_int(x) {\n\t  rng_pool[rng_pptr++] ^= x & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n\t  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n\t}\n\n\t// Mix in the current time (w/milliseconds) into the pool\n\tfunction rng_seed_time() {\n\t  rng_seed_int(new Date().getTime());\n\t}\n\n\t// Initialize the pool with junk if needed.\n\tif(rng_pool == null) {\n\t  rng_pool = new Array();\n\t  rng_pptr = 0;\n\t  var t;\n\t  if(typeof window !== \"undefined\" && window.crypto) {\n\t\tif (window.crypto.getRandomValues) {\n\t\t  // Use webcrypto if available\n\t\t  var ua = new Uint8Array(32);\n\t\t  window.crypto.getRandomValues(ua);\n\t\t  for(t = 0; t < 32; ++t)\n\t\t\trng_pool[rng_pptr++] = ua[t];\n\t\t}\n\t\telse if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\") {\n\t\t  // Extract entropy (256 bits) from NS4 RNG if available\n\t\t  var z = window.crypto.random(32);\n\t\t  for(t = 0; t < z.length; ++t)\n\t\t\trng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n\t\t}\n\t  }\n\t  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n\t\tt = Math.floor(65536 * Math.random());\n\t\trng_pool[rng_pptr++] = t >>> 8;\n\t\trng_pool[rng_pptr++] = t & 255;\n\t  }\n\t  rng_pptr = 0;\n\t  rng_seed_time();\n\t  //rng_seed_int(window.screenX);\n\t  //rng_seed_int(window.screenY);\n\t}\n\n\tfunction rng_get_byte() {\n\t  if(rng_state == null) {\n\t\trng_seed_time();\n\t\trng_state = prng_newstate();\n\t\trng_state.init(rng_pool);\n\t\tfor(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n\t\t  rng_pool[rng_pptr] = 0;\n\t\trng_pptr = 0;\n\t\t//rng_pool = null;\n\t  }\n\t  // TODO: allow reseeding after first request\n\t  return rng_state.next();\n\t}\n\n\tfunction rng_get_bytes(ba) {\n\t  var i;\n\t  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n\t}\n\n\tfunction SecureRandom() {}\n\n\tSecureRandom.prototype.nextBytes = rng_get_bytes;\n\n\t// prng4.js - uses Arcfour as a PRNG\n\n\tfunction Arcfour() {\n\t  this.i = 0;\n\t  this.j = 0;\n\t  this.S = new Array();\n\t}\n\n\t// Initialize arcfour context from key, an array of ints, each from [0..255]\n\tfunction ARC4init(key) {\n\t  var i, j, t;\n\t  for(i = 0; i < 256; ++i)\n\t\tthis.S[i] = i;\n\t  j = 0;\n\t  for(i = 0; i < 256; ++i) {\n\t\tj = (j + this.S[i] + key[i % key.length]) & 255;\n\t\tt = this.S[i];\n\t\tthis.S[i] = this.S[j];\n\t\tthis.S[j] = t;\n\t  }\n\t  this.i = 0;\n\t  this.j = 0;\n\t}\n\n\tfunction ARC4next() {\n\t  var t;\n\t  this.i = (this.i + 1) & 255;\n\t  this.j = (this.j + this.S[this.i]) & 255;\n\t  t = this.S[this.i];\n\t  this.S[this.i] = this.S[this.j];\n\t  this.S[this.j] = t;\n\t  return this.S[(t + this.S[this.i]) & 255];\n\t}\n\n\tArcfour.prototype.init = ARC4init;\n\tArcfour.prototype.next = ARC4next;\n\n\t// Plug in your RNG constructor here\n\tfunction prng_newstate() {\n\t  return new Arcfour();\n\t}\n\n\t// Pool size must be a multiple of 4 and greater than 32.\n\t// An array of bytes the size of the pool will be passed to init()\n\tvar rng_psize = 256;\n\n  BigInteger.SecureRandom = SecureRandom;\n  BigInteger.BigInteger = BigInteger;\n  if (typeof exports !== 'undefined') {\n    exports = module.exports = BigInteger;\n  } else {\n    this.BigInteger = BigInteger;\n    this.SecureRandom = SecureRandom;\n  }\n\n}).call(this);\n","/**\r\n * JSONSchema Validator - Validates JavaScript objects using JSON Schemas\r\n *\t(http://www.json.com/json-schema-proposal/)\r\n *\r\n * Copyright (c) 2007 Kris Zyp SitePen (www.sitepen.com)\r\n * Licensed under the MIT (MIT-LICENSE.txt) license.\r\nTo use the validator call the validate function with an instance object and an optional schema object.\r\nIf a schema is provided, it will be used to validate. If the instance object refers to a schema (self-validating),\r\nthat schema will be used to validate and the schema parameter is not necessary (if both exist,\r\nboth validations will occur).\r\nThe validate method will return an array of validation errors. If there are no errors, then an\r\nempty list will be returned. A validation error will have two properties:\r\n\"property\" which indicates which property had the error\r\n\"message\" which indicates what the error was\r\n */\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], function () {\r\n            return factory();\r\n        });\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals\r\n        root.jsonSchema = factory();\r\n    }\r\n}(this, function () {// setup primitive classes to be JSON Schema types\r\nvar exports = validate\r\nexports.Integer = {type:\"integer\"};\r\nvar primitiveConstructors = {\r\n\tString: String,\r\n\tBoolean: Boolean,\r\n\tNumber: Number,\r\n\tObject: Object,\r\n\tArray: Array,\r\n\tDate: Date\r\n}\r\nexports.validate = validate;\r\nfunction validate(/*Any*/instance,/*Object*/schema) {\r\n\t\t// Summary:\r\n\t\t//  \tTo use the validator call JSONSchema.validate with an instance object and an optional schema object.\r\n\t\t// \t\tIf a schema is provided, it will be used to validate. If the instance object refers to a schema (self-validating),\r\n\t\t// \t\tthat schema will be used to validate and the schema parameter is not necessary (if both exist,\r\n\t\t// \t\tboth validations will occur).\r\n\t\t// \t\tThe validate method will return an object with two properties:\r\n\t\t// \t\t\tvalid: A boolean indicating if the instance is valid by the schema\r\n\t\t// \t\t\terrors: An array of validation errors. If there are no errors, then an\r\n\t\t// \t\t\t\t\tempty list will be returned. A validation error will have two properties:\r\n\t\t// \t\t\t\t\t\tproperty: which indicates which property had the error\r\n\t\t// \t\t\t\t\t\tmessage: which indicates what the error was\r\n\t\t//\r\n\t\treturn validate(instance, schema, {changing: false});//, coerce: false, existingOnly: false});\r\n\t};\r\nexports.checkPropertyChange = function(/*Any*/value,/*Object*/schema, /*String*/property) {\r\n\t\t// Summary:\r\n\t\t// \t\tThe checkPropertyChange method will check to see if an value can legally be in property with the given schema\r\n\t\t// \t\tThis is slightly different than the validate method in that it will fail if the schema is readonly and it will\r\n\t\t// \t\tnot check for self-validation, it is assumed that the passed in value is already internally valid.\r\n\t\t// \t\tThe checkPropertyChange method will return the same object type as validate, see JSONSchema.validate for\r\n\t\t// \t\tinformation.\r\n\t\t//\r\n\t\treturn validate(value, schema, {changing: property || \"property\"});\r\n\t};\r\nvar validate = exports._validate = function(/*Any*/instance,/*Object*/schema,/*Object*/options) {\r\n\r\n\tif (!options) options = {};\r\n\tvar _changing = options.changing;\r\n\r\n\tfunction getType(schema){\r\n\t\treturn schema.type || (primitiveConstructors[schema.name] == schema && schema.name.toLowerCase());\r\n\t}\r\n\tvar errors = [];\r\n\t// validate a value against a property definition\r\n\tfunction checkProp(value, schema, path,i){\r\n\r\n\t\tvar l;\r\n\t\tpath += path ? typeof i == 'number' ? '[' + i + ']' : typeof i == 'undefined' ? '' : '.' + i : i;\r\n\t\tfunction addError(message){\r\n\t\t\terrors.push({property:path,message:message});\r\n\t\t}\r\n\r\n\t\tif((typeof schema != 'object' || schema instanceof Array) && (path || typeof schema != 'function') && !(schema && getType(schema))){\r\n\t\t\tif(typeof schema == 'function'){\r\n\t\t\t\tif(!(value instanceof schema)){\r\n\t\t\t\t\taddError(\"is not an instance of the class/constructor \" + schema.name);\r\n\t\t\t\t}\r\n\t\t\t}else if(schema){\r\n\t\t\t\taddError(\"Invalid schema/property definition \" + schema);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif(_changing && schema.readonly){\r\n\t\t\taddError(\"is a readonly field, it can not be changed\");\r\n\t\t}\r\n\t\tif(schema['extends']){ // if it extends another schema, it must pass that schema as well\r\n\t\t\tcheckProp(value,schema['extends'],path,i);\r\n\t\t}\r\n\t\t// validate a value against a type definition\r\n\t\tfunction checkType(type,value){\r\n\t\t\tif(type){\r\n\t\t\t\tif(typeof type == 'string' && type != 'any' &&\r\n\t\t\t\t\t\t(type == 'null' ? value !== null : typeof value != type) &&\r\n\t\t\t\t\t\t!(value instanceof Array && type == 'array') &&\r\n\t\t\t\t\t\t!(value instanceof Date && type == 'date') &&\r\n\t\t\t\t\t\t!(type == 'integer' && value%1===0)){\r\n\t\t\t\t\treturn [{property:path,message:(typeof value) + \" value found, but a \" + type + \" is required\"}];\r\n\t\t\t\t}\r\n\t\t\t\tif(type instanceof Array){\r\n\t\t\t\t\tvar unionErrors=[];\r\n\t\t\t\t\tfor(var j = 0; j < type.length; j++){ // a union type\r\n\t\t\t\t\t\tif(!(unionErrors=checkType(type[j],value)).length){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(unionErrors.length){\r\n\t\t\t\t\t\treturn unionErrors;\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(typeof type == 'object'){\r\n\t\t\t\t\tvar priorErrors = errors;\r\n\t\t\t\t\terrors = [];\r\n\t\t\t\t\tcheckProp(value,type,path);\r\n\t\t\t\t\tvar theseErrors = errors;\r\n\t\t\t\t\terrors = priorErrors;\r\n\t\t\t\t\treturn theseErrors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\tif(value === undefined){\r\n\t\t\tif(schema.required){\r\n\t\t\t\taddError(\"is missing and it is required\");\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\terrors = errors.concat(checkType(getType(schema),value));\r\n\t\t\tif(schema.disallow && !checkType(schema.disallow,value).length){\r\n\t\t\t\taddError(\" disallowed value was matched\");\r\n\t\t\t}\r\n\t\t\tif(value !== null){\r\n\t\t\t\tif(value instanceof Array){\r\n\t\t\t\t\tif(schema.items){\r\n\t\t\t\t\t\tvar itemsIsArray = schema.items instanceof Array;\r\n\t\t\t\t\t\tvar propDef = schema.items;\r\n\t\t\t\t\t\tfor (i = 0, l = value.length; i < l; i += 1) {\r\n\t\t\t\t\t\t\tif (itemsIsArray)\r\n\t\t\t\t\t\t\t\tpropDef = schema.items[i];\r\n\t\t\t\t\t\t\tif (options.coerce)\r\n\t\t\t\t\t\t\t\tvalue[i] = options.coerce(value[i], propDef);\r\n\t\t\t\t\t\t\terrors.concat(checkProp(value[i],propDef,path,i));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(schema.minItems && value.length < schema.minItems){\r\n\t\t\t\t\t\taddError(\"There must be a minimum of \" + schema.minItems + \" in the array\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(schema.maxItems && value.length > schema.maxItems){\r\n\t\t\t\t\t\taddError(\"There must be a maximum of \" + schema.maxItems + \" in the array\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(schema.properties || schema.additionalProperties){\r\n\t\t\t\t\terrors.concat(checkObj(value, schema.properties, path, schema.additionalProperties));\r\n\t\t\t\t}\r\n\t\t\t\tif(schema.pattern && typeof value == 'string' && !value.match(schema.pattern)){\r\n\t\t\t\t\taddError(\"does not match the regex pattern \" + schema.pattern);\r\n\t\t\t\t}\r\n\t\t\t\tif(schema.maxLength && typeof value == 'string' && value.length > schema.maxLength){\r\n\t\t\t\t\taddError(\"may only be \" + schema.maxLength + \" characters long\");\r\n\t\t\t\t}\r\n\t\t\t\tif(schema.minLength && typeof value == 'string' && value.length < schema.minLength){\r\n\t\t\t\t\taddError(\"must be at least \" + schema.minLength + \" characters long\");\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof schema.minimum !== undefined && typeof value == typeof schema.minimum &&\r\n\t\t\t\t\t\tschema.minimum > value){\r\n\t\t\t\t\taddError(\"must have a minimum value of \" + schema.minimum);\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof schema.maximum !== undefined && typeof value == typeof schema.maximum &&\r\n\t\t\t\t\t\tschema.maximum < value){\r\n\t\t\t\t\taddError(\"must have a maximum value of \" + schema.maximum);\r\n\t\t\t\t}\r\n\t\t\t\tif(schema['enum']){\r\n\t\t\t\t\tvar enumer = schema['enum'];\r\n\t\t\t\t\tl = enumer.length;\r\n\t\t\t\t\tvar found;\r\n\t\t\t\t\tfor(var j = 0; j < l; j++){\r\n\t\t\t\t\t\tif(enumer[j]===value){\r\n\t\t\t\t\t\t\tfound=1;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!found){\r\n\t\t\t\t\t\taddError(\"does not have a value in the enumeration \" + enumer.join(\", \"));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(typeof schema.maxDecimal == 'number' &&\r\n\t\t\t\t\t(value.toString().match(new RegExp(\"\\\\.[0-9]{\" + (schema.maxDecimal + 1) + \",}\")))){\r\n\t\t\t\t\taddError(\"may only have \" + schema.maxDecimal + \" digits of decimal places\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\t// validate an object against a schema\r\n\tfunction checkObj(instance,objTypeDef,path,additionalProp){\r\n\r\n\t\tif(typeof objTypeDef =='object'){\r\n\t\t\tif(typeof instance != 'object' || instance instanceof Array){\r\n\t\t\t\terrors.push({property:path,message:\"an object is required\"});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(var i in objTypeDef){ \r\n\t\t\t\tif(objTypeDef.hasOwnProperty(i)){\r\n\t\t\t\t\tvar value = instance[i];\r\n\t\t\t\t\t// skip _not_ specified properties\r\n\t\t\t\t\tif (value === undefined && options.existingOnly) continue;\r\n\t\t\t\t\tvar propDef = objTypeDef[i];\r\n\t\t\t\t\t// set default\r\n\t\t\t\t\tif(value === undefined && propDef[\"default\"]){\r\n\t\t\t\t\t\tvalue = instance[i] = propDef[\"default\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(options.coerce && i in instance){\r\n\t\t\t\t\t\tvalue = instance[i] = options.coerce(value, propDef);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheckProp(value,propDef,path,i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i in instance){\r\n\t\t\tif(instance.hasOwnProperty(i) && !(i.charAt(0) == '_' && i.charAt(1) == '_') && objTypeDef && !objTypeDef[i] && additionalProp===false){\r\n\t\t\t\tif (options.filter) {\r\n\t\t\t\t\tdelete instance[i];\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrors.push({property:path,message:(typeof value) + \"The property \" + i +\r\n\t\t\t\t\t\t\" is not defined in the schema and the schema does not allow additional properties\"});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar requires = objTypeDef && objTypeDef[i] && objTypeDef[i].requires;\r\n\t\t\tif(requires && !(requires in instance)){\r\n\t\t\t\terrors.push({property:path,message:\"the presence of the property \" + i + \" requires that \" + requires + \" also be present\"});\r\n\t\t\t}\r\n\t\t\tvalue = instance[i];\r\n\t\t\tif(additionalProp && (!(objTypeDef && typeof objTypeDef == 'object') || !(i in objTypeDef))){\r\n\t\t\t\tif(options.coerce){\r\n\t\t\t\t\tvalue = instance[i] = options.coerce(value, additionalProp);\r\n\t\t\t\t}\r\n\t\t\t\tcheckProp(value,additionalProp,path,i);\r\n\t\t\t}\r\n\t\t\tif(!_changing && value && value.$schema){\r\n\t\t\t\terrors = errors.concat(checkProp(value,value.$schema,path,i));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\tif(schema){\r\n\t\tcheckProp(instance,schema,'',_changing || '');\r\n\t}\r\n\tif(!_changing && instance && instance.$schema){\r\n\t\tcheckProp(instance,instance.$schema,'','');\r\n\t}\r\n\treturn {valid:!errors.length,errors:errors};\r\n};\r\nexports.mustBeValid = function(result){\r\n\t//\tsummary:\r\n\t//\t\tThis checks to ensure that the result is valid and will throw an appropriate error message if it is not\r\n\t// result: the result returned from checkPropertyChange or validate\r\n\tif(!result.valid){\r\n\t\tthrow new TypeError(result.errors.map(function(error){return \"for property \" + error.property + ': ' + error.message;}).join(\", \\n\"));\r\n\t}\r\n}\r\n\r\nreturn exports;\r\n}));\r\n","var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n","module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n","var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;","var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n","var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};","var timespan = require('./lib/timespan');\nvar PS_SUPPORTED = require('./lib/psSupported');\nvar jws = require('jws');\nvar includes = require('lodash.includes');\nvar isBoolean = require('lodash.isboolean');\nvar isInteger = require('lodash.isinteger');\nvar isNumber = require('lodash.isnumber');\nvar isPlainObject = require('lodash.isplainobject');\nvar isString = require('lodash.isstring');\nvar once = require('lodash.once');\n\nvar SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none']\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nvar sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' }\n};\n\nvar registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      var validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nvar options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nvar options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  var isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  var header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    var invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  var timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    var claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  var encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        callback(null, signature);\n      });\n  } else {\n    return jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n  }\n};\n","var JsonWebTokenError = require('./lib/JsonWebTokenError');\nvar NotBeforeError    = require('./lib/NotBeforeError');\nvar TokenExpiredError = require('./lib/TokenExpiredError');\nvar decode            = require('./decode');\nvar timespan          = require('./lib/timespan');\nvar PS_SUPPORTED      = require('./lib/psSupported');\nvar jws               = require('jws');\n\nvar PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512'];\nvar RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nvar HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  var done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  var clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  var parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  var decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  var header = decodedToken.header;\n  var getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    var hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      options.algorithms = ['none'];\n    }\n\n    if (!options.algorithms) {\n      options.algorithms = ~secretOrPublicKey.toString().indexOf('BEGIN CERTIFICATE') ||\n        ~secretOrPublicKey.toString().indexOf('BEGIN PUBLIC KEY') ? PUB_KEY_ALGS :\n        ~secretOrPublicKey.toString().indexOf('BEGIN RSA PUBLIC KEY') ? RSA_KEY_ALGS : HS_ALGS;\n\n    }\n\n    if (!~options.algorithms.indexOf(decodedToken.header.alg)) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    var valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    var payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      var audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      var target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      var match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      var invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      var maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      var signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n","/*\n * lib/jsprim.js: utilities for primitive JavaScript types\n */\n\nvar mod_assert = require('assert-plus');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\nvar mod_verror = require('verror');\nvar mod_jsonschema = require('json-schema');\n\n/*\n * Public interface\n */\nexports.deepCopy = deepCopy;\nexports.deepEqual = deepEqual;\nexports.isEmpty = isEmpty;\nexports.hasKey = hasKey;\nexports.forEachKey = forEachKey;\nexports.pluck = pluck;\nexports.flattenObject = flattenObject;\nexports.flattenIter = flattenIter;\nexports.validateJsonObject = validateJsonObjectJS;\nexports.validateJsonObjectJS = validateJsonObjectJS;\nexports.randElt = randElt;\nexports.extraProperties = extraProperties;\nexports.mergeObjects = mergeObjects;\n\nexports.startsWith = startsWith;\nexports.endsWith = endsWith;\n\nexports.parseInteger = parseInteger;\n\nexports.iso8601 = iso8601;\nexports.rfc1123 = rfc1123;\nexports.parseDateTime = parseDateTime;\n\nexports.hrtimediff = hrtimeDiff;\nexports.hrtimeDiff = hrtimeDiff;\nexports.hrtimeAccum = hrtimeAccum;\nexports.hrtimeAdd = hrtimeAdd;\nexports.hrtimeNanosec = hrtimeNanosec;\nexports.hrtimeMicrosec = hrtimeMicrosec;\nexports.hrtimeMillisec = hrtimeMillisec;\n\n\n/*\n * Deep copy an acyclic *basic* Javascript object.  This only handles basic\n * scalars (strings, numbers, booleans) and arbitrarily deep arrays and objects\n * containing these.  This does *not* handle instances of other classes.\n */\nfunction deepCopy(obj)\n{\n\tvar ret, key;\n\tvar marker = '__deepCopy';\n\n\tif (obj && obj[marker])\n\t\tthrow (new Error('attempted deep copy of cyclic object'));\n\n\tif (obj && obj.constructor == Object) {\n\t\tret = {};\n\t\tobj[marker] = true;\n\n\t\tfor (key in obj) {\n\t\t\tif (key == marker)\n\t\t\t\tcontinue;\n\n\t\t\tret[key] = deepCopy(obj[key]);\n\t\t}\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\tif (obj && obj.constructor == Array) {\n\t\tret = [];\n\t\tobj[marker] = true;\n\n\t\tfor (key = 0; key < obj.length; key++)\n\t\t\tret.push(deepCopy(obj[key]));\n\n\t\tdelete (obj[marker]);\n\t\treturn (ret);\n\t}\n\n\t/*\n\t * It must be a primitive type -- just return it.\n\t */\n\treturn (obj);\n}\n\nfunction deepEqual(obj1, obj2)\n{\n\tif (typeof (obj1) != typeof (obj2))\n\t\treturn (false);\n\n\tif (obj1 === null || obj2 === null || typeof (obj1) != 'object')\n\t\treturn (obj1 === obj2);\n\n\tif (obj1.constructor != obj2.constructor)\n\t\treturn (false);\n\n\tvar k;\n\tfor (k in obj1) {\n\t\tif (!obj2.hasOwnProperty(k))\n\t\t\treturn (false);\n\n\t\tif (!deepEqual(obj1[k], obj2[k]))\n\t\t\treturn (false);\n\t}\n\n\tfor (k in obj2) {\n\t\tif (!obj1.hasOwnProperty(k))\n\t\t\treturn (false);\n\t}\n\n\treturn (true);\n}\n\nfunction isEmpty(obj)\n{\n\tvar key;\n\tfor (key in obj)\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction hasKey(obj, key)\n{\n\tmod_assert.equal(typeof (key), 'string');\n\treturn (Object.prototype.hasOwnProperty.call(obj, key));\n}\n\nfunction forEachKey(obj, callback)\n{\n\tfor (var key in obj) {\n\t\tif (hasKey(obj, key)) {\n\t\t\tcallback(key, obj[key]);\n\t\t}\n\t}\n}\n\nfunction pluck(obj, key)\n{\n\tmod_assert.equal(typeof (key), 'string');\n\treturn (pluckv(obj, key));\n}\n\nfunction pluckv(obj, key)\n{\n\tif (obj === null || typeof (obj) !== 'object')\n\t\treturn (undefined);\n\n\tif (obj.hasOwnProperty(key))\n\t\treturn (obj[key]);\n\n\tvar i = key.indexOf('.');\n\tif (i == -1)\n\t\treturn (undefined);\n\n\tvar key1 = key.substr(0, i);\n\tif (!obj.hasOwnProperty(key1))\n\t\treturn (undefined);\n\n\treturn (pluckv(obj[key1], key.substr(i + 1)));\n}\n\n/*\n * Invoke callback(row) for each entry in the array that would be returned by\n * flattenObject(data, depth).  This is just like flattenObject(data,\n * depth).forEach(callback), except that the intermediate array is never\n * created.\n */\nfunction flattenIter(data, depth, callback)\n{\n\tdoFlattenIter(data, depth, [], callback);\n}\n\nfunction doFlattenIter(data, depth, accum, callback)\n{\n\tvar each;\n\tvar key;\n\n\tif (depth === 0) {\n\t\teach = accum.slice(0);\n\t\teach.push(data);\n\t\tcallback(each);\n\t\treturn;\n\t}\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tfor (key in data) {\n\t\teach = accum.slice(0);\n\t\teach.push(key);\n\t\tdoFlattenIter(data[key], depth - 1, each, callback);\n\t}\n}\n\nfunction flattenObject(data, depth)\n{\n\tif (depth === 0)\n\t\treturn ([ data ]);\n\n\tmod_assert.ok(data !== null);\n\tmod_assert.equal(typeof (data), 'object');\n\tmod_assert.equal(typeof (depth), 'number');\n\tmod_assert.ok(depth >= 0);\n\n\tvar rv = [];\n\tvar key;\n\n\tfor (key in data) {\n\t\tflattenObject(data[key], depth - 1).forEach(function (p) {\n\t\t\trv.push([ key ].concat(p));\n\t\t});\n\t}\n\n\treturn (rv);\n}\n\nfunction startsWith(str, prefix)\n{\n\treturn (str.substr(0, prefix.length) == prefix);\n}\n\nfunction endsWith(str, suffix)\n{\n\treturn (str.substr(\n\t    str.length - suffix.length, suffix.length) == suffix);\n}\n\nfunction iso8601(d)\n{\n\tif (typeof (d) == 'number')\n\t\td = new Date(d);\n\tmod_assert.ok(d.constructor === Date);\n\treturn (mod_extsprintf.sprintf('%4d-%02d-%02dT%02d:%02d:%02d.%03dZ',\n\t    d.getUTCFullYear(), d.getUTCMonth() + 1, d.getUTCDate(),\n\t    d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(),\n\t    d.getUTCMilliseconds()));\n}\n\nvar RFC1123_MONTHS = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nvar RFC1123_DAYS = [\n    'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nfunction rfc1123(date) {\n\treturn (mod_extsprintf.sprintf('%s, %02d %s %04d %02d:%02d:%02d GMT',\n\t    RFC1123_DAYS[date.getUTCDay()], date.getUTCDate(),\n\t    RFC1123_MONTHS[date.getUTCMonth()], date.getUTCFullYear(),\n\t    date.getUTCHours(), date.getUTCMinutes(),\n\t    date.getUTCSeconds()));\n}\n\n/*\n * Parses a date expressed as a string, as either a number of milliseconds since\n * the epoch or any string format that Date accepts, giving preference to the\n * former where these two sets overlap (e.g., small numbers).\n */\nfunction parseDateTime(str)\n{\n\t/*\n\t * This is irritatingly implicit, but significantly more concise than\n\t * alternatives.  The \"+str\" will convert a string containing only a\n\t * number directly to a Number, or NaN for other strings.  Thus, if the\n\t * conversion succeeds, we use it (this is the milliseconds-since-epoch\n\t * case).  Otherwise, we pass the string directly to the Date\n\t * constructor to parse.\n\t */\n\tvar numeric = +str;\n\tif (!isNaN(numeric)) {\n\t\treturn (new Date(numeric));\n\t} else {\n\t\treturn (new Date(str));\n\t}\n}\n\n\n/*\n * Number.*_SAFE_INTEGER isn't present before node v0.12, so we hardcode\n * the ES6 definitions here, while allowing for them to someday be higher.\n */\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n\n\n/*\n * Default options for parseInteger().\n */\nvar PI_DEFAULTS = {\n\tbase: 10,\n\tallowSign: true,\n\tallowPrefix: false,\n\tallowTrailing: false,\n\tallowImprecise: false,\n\ttrimWhitespace: false,\n\tleadingZeroIsOctal: false\n};\n\nvar CP_0 = 0x30;\nvar CP_9 = 0x39;\n\nvar CP_A = 0x41;\nvar CP_B = 0x42;\nvar CP_O = 0x4f;\nvar CP_T = 0x54;\nvar CP_X = 0x58;\nvar CP_Z = 0x5a;\n\nvar CP_a = 0x61;\nvar CP_b = 0x62;\nvar CP_o = 0x6f;\nvar CP_t = 0x74;\nvar CP_x = 0x78;\nvar CP_z = 0x7a;\n\nvar PI_CONV_DEC = 0x30;\nvar PI_CONV_UC = 0x37;\nvar PI_CONV_LC = 0x57;\n\n\n/*\n * A stricter version of parseInt() that provides options for changing what\n * is an acceptable string (for example, disallowing trailing characters).\n */\nfunction parseInteger(str, uopts)\n{\n\tmod_assert.string(str, 'str');\n\tmod_assert.optionalObject(uopts, 'options');\n\n\tvar baseOverride = false;\n\tvar options = PI_DEFAULTS;\n\n\tif (uopts) {\n\t\tbaseOverride = hasKey(uopts, 'base');\n\t\toptions = mergeObjects(options, uopts);\n\t\tmod_assert.number(options.base, 'options.base');\n\t\tmod_assert.ok(options.base >= 2, 'options.base >= 2');\n\t\tmod_assert.ok(options.base <= 36, 'options.base <= 36');\n\t\tmod_assert.bool(options.allowSign, 'options.allowSign');\n\t\tmod_assert.bool(options.allowPrefix, 'options.allowPrefix');\n\t\tmod_assert.bool(options.allowTrailing,\n\t\t    'options.allowTrailing');\n\t\tmod_assert.bool(options.allowImprecise,\n\t\t    'options.allowImprecise');\n\t\tmod_assert.bool(options.trimWhitespace,\n\t\t    'options.trimWhitespace');\n\t\tmod_assert.bool(options.leadingZeroIsOctal,\n\t\t    'options.leadingZeroIsOctal');\n\n\t\tif (options.leadingZeroIsOctal) {\n\t\t\tmod_assert.ok(!baseOverride,\n\t\t\t    '\"base\" and \"leadingZeroIsOctal\" are ' +\n\t\t\t    'mutually exclusive');\n\t\t}\n\t}\n\n\tvar c;\n\tvar pbase = -1;\n\tvar base = options.base;\n\tvar start;\n\tvar mult = 1;\n\tvar value = 0;\n\tvar idx = 0;\n\tvar len = str.length;\n\n\t/* Trim any whitespace on the left side. */\n\tif (options.trimWhitespace) {\n\t\twhile (idx < len && isSpace(str.charCodeAt(idx))) {\n\t\t\t++idx;\n\t\t}\n\t}\n\n\t/* Check the number for a leading sign. */\n\tif (options.allowSign) {\n\t\tif (str[idx] === '-') {\n\t\t\tidx += 1;\n\t\t\tmult = -1;\n\t\t} else if (str[idx] === '+') {\n\t\t\tidx += 1;\n\t\t}\n\t}\n\n\t/* Parse the base-indicating prefix if there is one. */\n\tif (str[idx] === '0') {\n\t\tif (options.allowPrefix) {\n\t\t\tpbase = prefixToBase(str.charCodeAt(idx + 1));\n\t\t\tif (pbase !== -1 && (!baseOverride || pbase === base)) {\n\t\t\t\tbase = pbase;\n\t\t\t\tidx += 2;\n\t\t\t}\n\t\t}\n\n\t\tif (pbase === -1 && options.leadingZeroIsOctal) {\n\t\t\tbase = 8;\n\t\t}\n\t}\n\n\t/* Parse the actual digits. */\n\tfor (start = idx; idx < len; ++idx) {\n\t\tc = translateDigit(str.charCodeAt(idx));\n\t\tif (c !== -1 && c < base) {\n\t\t\tvalue *= base;\n\t\t\tvalue += c;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* If we didn't parse any digits, we have an invalid number. */\n\tif (start === idx) {\n\t\treturn (new Error('invalid number: ' + JSON.stringify(str)));\n\t}\n\n\t/* Trim any whitespace on the right side. */\n\tif (options.trimWhitespace) {\n\t\twhile (idx < len && isSpace(str.charCodeAt(idx))) {\n\t\t\t++idx;\n\t\t}\n\t}\n\n\t/* Check for trailing characters. */\n\tif (idx < len && !options.allowTrailing) {\n\t\treturn (new Error('trailing characters after number: ' +\n\t\t    JSON.stringify(str.slice(idx))));\n\t}\n\n\t/* If our value is 0, we return now, to avoid returning -0. */\n\tif (value === 0) {\n\t\treturn (0);\n\t}\n\n\t/* Calculate our final value. */\n\tvar result = value * mult;\n\n\t/*\n\t * If the string represents a value that cannot be precisely represented\n\t * by JavaScript, then we want to check that:\n\t *\n\t * - We never increased the value past MAX_SAFE_INTEGER\n\t * - We don't make the result negative and below MIN_SAFE_INTEGER\n\t *\n\t * Because we only ever increment the value during parsing, there's no\n\t * chance of moving past MAX_SAFE_INTEGER and then dropping below it\n\t * again, losing precision in the process. This means that we only need\n\t * to do our checks here, at the end.\n\t */\n\tif (!options.allowImprecise &&\n\t    (value > MAX_SAFE_INTEGER || result < MIN_SAFE_INTEGER)) {\n\t\treturn (new Error('number is outside of the supported range: ' +\n\t\t    JSON.stringify(str.slice(start, idx))));\n\t}\n\n\treturn (result);\n}\n\n\n/*\n * Interpret a character code as a base-36 digit.\n */\nfunction translateDigit(d)\n{\n\tif (d >= CP_0 && d <= CP_9) {\n\t\t/* '0' to '9' -> 0 to 9 */\n\t\treturn (d - PI_CONV_DEC);\n\t} else if (d >= CP_A && d <= CP_Z) {\n\t\t/* 'A' - 'Z' -> 10 to 35 */\n\t\treturn (d - PI_CONV_UC);\n\t} else if (d >= CP_a && d <= CP_z) {\n\t\t/* 'a' - 'z' -> 10 to 35 */\n\t\treturn (d - PI_CONV_LC);\n\t} else {\n\t\t/* Invalid character code */\n\t\treturn (-1);\n\t}\n}\n\n\n/*\n * Test if a value matches the ECMAScript definition of trimmable whitespace.\n */\nfunction isSpace(c)\n{\n\treturn (c === 0x20) ||\n\t    (c >= 0x0009 && c <= 0x000d) ||\n\t    (c === 0x00a0) ||\n\t    (c === 0x1680) ||\n\t    (c === 0x180e) ||\n\t    (c >= 0x2000 && c <= 0x200a) ||\n\t    (c === 0x2028) ||\n\t    (c === 0x2029) ||\n\t    (c === 0x202f) ||\n\t    (c === 0x205f) ||\n\t    (c === 0x3000) ||\n\t    (c === 0xfeff);\n}\n\n\n/*\n * Determine which base a character indicates (e.g., 'x' indicates hex).\n */\nfunction prefixToBase(c)\n{\n\tif (c === CP_b || c === CP_B) {\n\t\t/* 0b/0B (binary) */\n\t\treturn (2);\n\t} else if (c === CP_o || c === CP_O) {\n\t\t/* 0o/0O (octal) */\n\t\treturn (8);\n\t} else if (c === CP_t || c === CP_T) {\n\t\t/* 0t/0T (decimal) */\n\t\treturn (10);\n\t} else if (c === CP_x || c === CP_X) {\n\t\t/* 0x/0X (hexadecimal) */\n\t\treturn (16);\n\t} else {\n\t\t/* Not a meaningful character */\n\t\treturn (-1);\n\t}\n}\n\n\nfunction validateJsonObjectJS(schema, input)\n{\n\tvar report = mod_jsonschema.validate(input, schema);\n\n\tif (report.errors.length === 0)\n\t\treturn (null);\n\n\t/* Currently, we only do anything useful with the first error. */\n\tvar error = report.errors[0];\n\n\t/* The failed property is given by a URI with an irrelevant prefix. */\n\tvar propname = error['property'];\n\tvar reason = error['message'].toLowerCase();\n\tvar i, j;\n\n\t/*\n\t * There's at least one case where the property error message is\n\t * confusing at best.  We work around this here.\n\t */\n\tif ((i = reason.indexOf('the property ')) != -1 &&\n\t    (j = reason.indexOf(' is not defined in the schema and the ' +\n\t    'schema does not allow additional properties')) != -1) {\n\t\ti += 'the property '.length;\n\t\tif (propname === '')\n\t\t\tpropname = reason.substr(i, j - i);\n\t\telse\n\t\t\tpropname = propname + '.' + reason.substr(i, j - i);\n\n\t\treason = 'unsupported property';\n\t}\n\n\tvar rv = new mod_verror.VError('property \"%s\": %s', propname, reason);\n\trv.jsv_details = error;\n\treturn (rv);\n}\n\nfunction randElt(arr)\n{\n\tmod_assert.ok(Array.isArray(arr) && arr.length > 0,\n\t    'randElt argument must be a non-empty array');\n\n\treturn (arr[Math.floor(Math.random() * arr.length)]);\n}\n\nfunction assertHrtime(a)\n{\n\tmod_assert.ok(a[0] >= 0 && a[1] >= 0,\n\t    'negative numbers not allowed in hrtimes');\n\tmod_assert.ok(a[1] < 1e9, 'nanoseconds column overflow');\n}\n\n/*\n * Compute the time elapsed between hrtime readings A and B, where A is later\n * than B.  hrtime readings come from Node's process.hrtime().  There is no\n * defined way to represent negative deltas, so it's illegal to diff B from A\n * where the time denoted by B is later than the time denoted by A.  If this\n * becomes valuable, we can define a representation and extend the\n * implementation to support it.\n */\nfunction hrtimeDiff(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\tmod_assert.ok(a[0] > b[0] || (a[0] == b[0] && a[1] >= b[1]),\n\t    'negative differences not allowed');\n\n\tvar rv = [ a[0] - b[0], 0 ];\n\n\tif (a[1] >= b[1]) {\n\t\trv[1] = a[1] - b[1];\n\t} else {\n\t\trv[0]--;\n\t\trv[1] = 1e9 - (b[1] - a[1]);\n\t}\n\n\treturn (rv);\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of nanoseconds.\n */\nfunction hrtimeNanosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e9 + a[1]));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of microseconds.\n */\nfunction hrtimeMicrosec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e6 + a[1] / 1e3));\n}\n\n/*\n * Convert a hrtime reading from the array format returned by Node's\n * process.hrtime() into a scalar number of milliseconds.\n */\nfunction hrtimeMillisec(a)\n{\n\tassertHrtime(a);\n\n\treturn (Math.floor(a[0] * 1e3 + a[1] / 1e6));\n}\n\n/*\n * Add two hrtime readings A and B, overwriting A with the result of the\n * addition.  This function is useful for accumulating several hrtime intervals\n * into a counter.  Returns A.\n */\nfunction hrtimeAccum(a, b)\n{\n\tassertHrtime(a);\n\tassertHrtime(b);\n\n\t/*\n\t * Accumulate the nanosecond component.\n\t */\n\ta[1] += b[1];\n\tif (a[1] >= 1e9) {\n\t\t/*\n\t\t * The nanosecond component overflowed, so carry to the seconds\n\t\t * field.\n\t\t */\n\t\ta[0]++;\n\t\ta[1] -= 1e9;\n\t}\n\n\t/*\n\t * Accumulate the seconds component.\n\t */\n\ta[0] += b[0];\n\n\treturn (a);\n}\n\n/*\n * Add two hrtime readings A and B, returning the result as a new hrtime array.\n * Does not modify either input argument.\n */\nfunction hrtimeAdd(a, b)\n{\n\tassertHrtime(a);\n\n\tvar rv = [ a[0], a[1] ];\n\n\treturn (hrtimeAccum(rv, b));\n}\n\n\n/*\n * Check an object for unexpected properties.  Accepts the object to check, and\n * an array of allowed property names (strings).  Returns an array of key names\n * that were found on the object, but did not appear in the list of allowed\n * properties.  If no properties were found, the returned array will be of\n * zero length.\n */\nfunction extraProperties(obj, allowed)\n{\n\tmod_assert.ok(typeof (obj) === 'object' && obj !== null,\n\t    'obj argument must be a non-null object');\n\tmod_assert.ok(Array.isArray(allowed),\n\t    'allowed argument must be an array of strings');\n\tfor (var i = 0; i < allowed.length; i++) {\n\t\tmod_assert.ok(typeof (allowed[i]) === 'string',\n\t\t    'allowed argument must be an array of strings');\n\t}\n\n\treturn (Object.keys(obj).filter(function (key) {\n\t\treturn (allowed.indexOf(key) === -1);\n\t}));\n}\n\n/*\n * Given three sets of properties \"provided\" (may be undefined), \"overrides\"\n * (required), and \"defaults\" (may be undefined), construct an object containing\n * the union of these sets with \"overrides\" overriding \"provided\", and\n * \"provided\" overriding \"defaults\".  None of the input objects are modified.\n */\nfunction mergeObjects(provided, overrides, defaults)\n{\n\tvar rv, k;\n\n\trv = {};\n\tif (defaults) {\n\t\tfor (k in defaults)\n\t\t\trv[k] = defaults[k];\n\t}\n\n\tif (provided) {\n\t\tfor (k in provided)\n\t\t\trv[k] = provided[k];\n\t}\n\n\tif (overrides) {\n\t\tfor (k in overrides)\n\t\t\trv[k] = overrides[k];\n\t}\n\n\treturn (rv);\n}\n","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright 2008-2020 Brian Turek, 1998-2009 Paul Johnston & Contributors\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n*/\n'use strict';(function(aa){function C(d,b,a){var h=0,k=[],l=0,g,m,c,f,n,q,u,r,I=!1,v=[],x=[],t,y=!1,z=!1,w=-1;a=a||{};g=a.encoding||\"UTF8\";t=a.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===d)n=512,q=K,u=ba,f=160,r=function(b){return b.slice()};else if(0===d.lastIndexOf(\"SHA-\",0))if(q=function(b,h){return L(b,h,d)},u=function(b,h,k,a){var e,f;if(\"SHA-224\"===d||\"SHA-256\"===d)e=(h+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===d||\"SHA-512\"===d)e=(h+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;b.length<=e;)b.push(0);b[h>>>5]|=128<<24-h%32;h=h+k;b[e]=h&4294967295;b[e-1]=h/4294967296|0;k=b.length;for(h=0;h<k;h+=f)a=L(b.slice(h,h+f),a,d);if(\"SHA-224\"===d)b=[a[0],a[1],a[2],a[3],a[4],a[5],a[6]];else if(\"SHA-256\"===d)b=a;else if(\"SHA-384\"===d)b=[a[0].a,a[0].b,a[1].a,a[1].b,a[2].a,a[2].b,a[3].a,a[3].b,a[4].a,a[4].b,a[5].a,a[5].b];else if(\"SHA-512\"===d)b=[a[0].a,a[0].b,a[1].a,a[1].b,a[2].a,a[2].b,a[3].a,a[3].b,a[4].a,\na[4].b,a[5].a,a[5].b,a[6].a,a[6].b,a[7].a,a[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return b},r=function(b){return b.slice()},\"SHA-224\"===d)n=512,f=224;else if(\"SHA-256\"===d)n=512,f=256;else if(\"SHA-384\"===d)n=1024,f=384;else if(\"SHA-512\"===d)n=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===d.lastIndexOf(\"SHA3-\",0)||0===d.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(b){var d=[],a;for(a=0;5>a;a+=1)d[a]=b[a].slice();return d};w=1;if(\"SHA3-224\"===\nd)n=1152,f=224;else if(\"SHA3-256\"===d)n=1088,f=256;else if(\"SHA3-384\"===d)n=832,f=384;else if(\"SHA3-512\"===d)n=576,f=512;else if(\"SHAKE128\"===d)n=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===d)n=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(b,d,a,h,k){a=n;var e=F,f,g=[],l=a>>>5,m=0,c=d>>>5;for(f=0;f<c&&d>=a;f+=l)h=D(b.slice(f,f+l),h),d-=a;b=b.slice(f);for(d%=a;b.length<l;)b.push(0);f=d>>>3;b[f>>2]^=e<<f%4*8;b[l-1]^=2147483648;for(h=D(b,h);32*g.length<k;){b=h[m%\n5][m/5|0];g.push(b.b);if(32*g.length>=k)break;g.push(b.a);m+=1;0===64*m%a&&D(null,h)}return g}}else throw Error(\"Chosen SHA variant is not supported\");c=M(b,g,w);m=A(d);this.setHMACKey=function(b,a,k){var e;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(k||{}).encoding||\"UTF8\";a=M(a,g,w)(b);b=a.binLen;a=a.value;e=n>>>3;k=e/4-1;for(e<b/8&&(a=u(a,b,0,A(d),f));a.length<=k;)a.push(0);\nfor(b=0;b<=k;b+=1)v[b]=a[b]^909522486,x[b]=a[b]^1549556828;m=q(v,m);h=n;I=!0};this.update=function(b){var d,a,e,f=0,g=n>>>5;d=c(b,k,l);b=d.binLen;a=d.value;d=b>>>5;for(e=0;e<d;e+=g)f+n<=b&&(m=q(a.slice(e,e+g),m),f+=n);h+=f;k=a.slice(f>>>5);l=b%n;y=!0};this.getHash=function(b,a){var e,g,c,n;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");c=N(a);if(!0===z){if(-1===c.shakeLen)throw Error(\"shakeLen must be specified in options\");f=c.shakeLen}switch(b){case \"HEX\":e=function(b){return O(b,\nf,w,c)};break;case \"B64\":e=function(b){return P(b,f,w,c)};break;case \"BYTES\":e=function(b){return Q(b,f,w)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}e=function(b){return R(b,f,w)};break;case \"UINT8ARRAY\":try{g=new Uint8Array(0)}catch(p){throw Error(\"UINT8ARRAY not supported by this environment\");}e=function(b){return S(b,f,w)};break;default:throw Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");}n=u(k.slice(),\nl,h,r(m),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(n[n.length-1]&=16777215>>>24-f%32),n=u(n,f,0,A(d),f);return e(n)};this.getHMAC=function(b,a){var e,g,c,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");c=N(a);switch(b){case \"HEX\":e=function(b){return O(b,f,w,c)};break;case \"B64\":e=function(b){return P(b,f,w,c)};break;case \"BYTES\":e=function(b){return Q(b,f,w)};break;case \"ARRAYBUFFER\":try{e=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");\n}e=function(b){return R(b,f,w)};break;case \"UINT8ARRAY\":try{e=new Uint8Array(0)}catch(v){throw Error(\"UINT8ARRAY not supported by this environment\");}e=function(b){return S(b,f,w)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");}g=u(k.slice(),l,h,r(m),f);p=q(x,A(d));p=u(g,f,n,p,f);return e(p)}}function a(d,b){this.a=d;this.b=b}function T(d,b,a,h){var k,l,g,c,p;b=b||[0];a=a||0;l=a>>>3;p=-1===h?3:0;for(k=0;k<d.length;k+=1)c=k+l,g=c>>>2,b.length<=g&&b.push(0),\nb[g]|=d[k]<<8*(p+c%4*h);return{value:b,binLen:8*d.length+a}}function O(a,b,e,h){var k=\"\";b/=8;var l,g,c;c=-1===e?3:0;for(l=0;l<b;l+=1)g=a[l>>>2]>>>8*(c+l%4*e),k+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return h.outputUpper?k.toUpperCase():k}function P(a,b,e,h){var k=\"\",l=b/8,g,c,p,f;f=-1===e?3:0;for(g=0;g<l;g+=3)for(c=g+1<l?a[g+1>>>2]:0,p=g+2<l?a[g+2>>>2]:0,p=(a[g>>>2]>>>8*(f+g%4*e)&255)<<16|(c>>>8*(f+(g+1)%4*e)&255)<<8|p>>>8*(f+(g+2)%4*e)&255,c=0;4>c;c+=1)8*g+6*c<=b?k+=\n\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-c)&63):k+=h.b64Pad;return k}function Q(a,b,e){var h=\"\";b/=8;var k,c,g;g=-1===e?3:0;for(k=0;k<b;k+=1)c=a[k>>>2]>>>8*(g+k%4*e)&255,h+=String.fromCharCode(c);return h}function R(a,b,e){b/=8;var h,k=new ArrayBuffer(b),c,g;g=new Uint8Array(k);c=-1===e?3:0;for(h=0;h<b;h+=1)g[h]=a[h>>>2]>>>8*(c+h%4*e)&255;return k}function S(a,b,e){b/=8;var h,k=new Uint8Array(b),c;c=-1===e?3:0;for(h=0;h<b;h+=1)k[h]=a[h>>>2]>>>8*(c+h%4*e)&\n255;return k}function N(a){var b={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};a=a||{};b.outputUpper=a.outputUpper||!1;!0===a.hasOwnProperty(\"b64Pad\")&&(b.b64Pad=a.b64Pad);if(!0===a.hasOwnProperty(\"shakeLen\")){if(0!==a.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");b.shakeLen=a.shakeLen}if(\"boolean\"!==typeof b.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof b.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return b}function M(a,b,e){switch(b){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;\ndefault:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");}switch(a){case \"HEX\":a=function(b,a,d){var g=b.length,c,p,f,n,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");a=a||[0];d=d||0;q=d>>>3;u=-1===e?3:0;for(c=0;c<g;c+=2){p=parseInt(b.substr(c,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");n=(c>>>1)+q;for(f=n>>>2;a.length<=f;)a.push(0);a[f]|=p<<8*(u+n%4*e)}return{value:a,binLen:4*g+d}};break;case \"TEXT\":a=function(a,d,c){var g,\nm,p=0,f,n,q,u,r,t;d=d||[0];c=c||0;q=c>>>3;if(\"UTF8\"===b)for(t=-1===e?3:0,f=0;f<a.length;f+=1)for(g=a.charCodeAt(f),m=[],128>g?m.push(g):2048>g?(m.push(192|g>>>6),m.push(128|g&63)):55296>g||57344<=g?m.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|a.charCodeAt(f)&1023),m.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),n=0;n<m.length;n+=1){r=p+q;for(u=r>>>2;d.length<=u;)d.push(0);d[u]|=m[n]<<8*(t+r%4*e);p+=1}else if(\"UTF16BE\"===b||\"UTF16LE\"===b)for(t=-1===e?2:0,m=\"UTF16LE\"===\nb&&1!==e||\"UTF16LE\"!==b&&1===e,f=0;f<a.length;f+=1){g=a.charCodeAt(f);!0===m&&(n=g&255,g=n<<8|g>>>8);r=p+q;for(u=r>>>2;d.length<=u;)d.push(0);d[u]|=g<<8*(t+r%4*e);p+=2}return{value:d,binLen:8*p+c}};break;case \"B64\":a=function(b,a,d){var c=0,m,p,f,n,q,u,r,t;if(-1===b.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=b.indexOf(\"=\");b=b.replace(/\\=/g,\"\");if(-1!==p&&p<b.length)throw Error(\"Invalid '=' found in base-64 string\");a=a||[0];d=d||0;u=d>>>3;t=-1===e?3:0;for(p=\n0;p<b.length;p+=4){q=b.substr(p,4);for(f=n=0;f<q.length;f+=1)m=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q.charAt(f)),n|=m<<18-6*f;for(f=0;f<q.length-1;f+=1){r=c+u;for(m=r>>>2;a.length<=m;)a.push(0);a[m]|=(n>>>16-8*f&255)<<8*(t+r%4*e);c+=1}}return{value:a,binLen:8*c+d}};break;case \"BYTES\":a=function(b,a,d){var c,m,p,f,n,q;a=a||[0];d=d||0;p=d>>>3;q=-1===e?3:0;for(m=0;m<b.length;m+=1)c=b.charCodeAt(m),n=m+p,f=n>>>2,a.length<=f&&a.push(0),a[f]|=c<<8*(q+n%4*e);return{value:a,\nbinLen:8*b.length+d}};break;case \"ARRAYBUFFER\":try{a=new ArrayBuffer(0)}catch(h){throw Error(\"ARRAYBUFFER not supported by this environment\");}a=function(b,a,d){return T(new Uint8Array(b),a,d,e)};break;case \"UINT8ARRAY\":try{a=new Uint8Array(0)}catch(h){throw Error(\"UINT8ARRAY not supported by this environment\");}a=function(b,a,d){return T(b,a,d,e)};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\");}return a}function y(a,b){return a<<b|a>>>32-b}function U(d,\nb){return 32<b?(b-=32,new a(d.b<<b|d.a>>>32-b,d.a<<b|d.b>>>32-b)):0!==b?new a(d.a<<b|d.b>>>32-b,d.b<<b|d.a>>>32-b):d}function x(a,b){return a>>>b|a<<32-b}function t(d,b){var e=null,e=new a(d.a,d.b);return e=32>=b?new a(e.a>>>b|e.b<<32-b&4294967295,e.b>>>b|e.a<<32-b&4294967295):new a(e.b>>>b-32|e.a<<64-b&4294967295,e.a>>>b-32|e.b<<64-b&4294967295)}function V(d,b){var e=null;return e=32>=b?new a(d.a>>>b,d.b>>>b|d.a<<32-b&4294967295):new a(0,d.a>>>b-32)}function ca(a,b,e){return a&b^~a&e}function da(d,\nb,e){return new a(d.a&b.a^~d.a&e.a,d.b&b.b^~d.b&e.b)}function W(a,b,e){return a&b^a&e^b&e}function ea(d,b,e){return new a(d.a&b.a^d.a&e.a^b.a&e.a,d.b&b.b^d.b&e.b^b.b&e.b)}function fa(a){return x(a,2)^x(a,13)^x(a,22)}function ga(d){var b=t(d,28),e=t(d,34);d=t(d,39);return new a(b.a^e.a^d.a,b.b^e.b^d.b)}function ha(a){return x(a,6)^x(a,11)^x(a,25)}function ia(d){var b=t(d,14),e=t(d,18);d=t(d,41);return new a(b.a^e.a^d.a,b.b^e.b^d.b)}function ja(a){return x(a,7)^x(a,18)^a>>>3}function ka(d){var b=t(d,\n1),e=t(d,8);d=V(d,7);return new a(b.a^e.a^d.a,b.b^e.b^d.b)}function la(a){return x(a,17)^x(a,19)^a>>>10}function ma(d){var b=t(d,19),e=t(d,61);d=V(d,6);return new a(b.a^e.a^d.a,b.b^e.b^d.b)}function G(a,b){var e=(a&65535)+(b&65535);return((a>>>16)+(b>>>16)+(e>>>16)&65535)<<16|e&65535}function na(a,b,e,h){var c=(a&65535)+(b&65535)+(e&65535)+(h&65535);return((a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(c>>>16)&65535)<<16|c&65535}function H(a,b,e,h,c){var l=(a&65535)+(b&65535)+(e&65535)+(h&65535)+(c&65535);\nreturn((a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(c>>>16)+(l>>>16)&65535)<<16|l&65535}function oa(d,b){var e,h,c;e=(d.b&65535)+(b.b&65535);h=(d.b>>>16)+(b.b>>>16)+(e>>>16);c=(h&65535)<<16|e&65535;e=(d.a&65535)+(b.a&65535)+(h>>>16);h=(d.a>>>16)+(b.a>>>16)+(e>>>16);return new a((h&65535)<<16|e&65535,c)}function pa(d,b,e,h){var c,l,g;c=(d.b&65535)+(b.b&65535)+(e.b&65535)+(h.b&65535);l=(d.b>>>16)+(b.b>>>16)+(e.b>>>16)+(h.b>>>16)+(c>>>16);g=(l&65535)<<16|c&65535;c=(d.a&65535)+(b.a&65535)+(e.a&65535)+(h.a&65535)+\n(l>>>16);l=(d.a>>>16)+(b.a>>>16)+(e.a>>>16)+(h.a>>>16)+(c>>>16);return new a((l&65535)<<16|c&65535,g)}function qa(d,b,e,h,c){var l,g,m;l=(d.b&65535)+(b.b&65535)+(e.b&65535)+(h.b&65535)+(c.b&65535);g=(d.b>>>16)+(b.b>>>16)+(e.b>>>16)+(h.b>>>16)+(c.b>>>16)+(l>>>16);m=(g&65535)<<16|l&65535;l=(d.a&65535)+(b.a&65535)+(e.a&65535)+(h.a&65535)+(c.a&65535)+(g>>>16);g=(d.a>>>16)+(b.a>>>16)+(e.a>>>16)+(h.a>>>16)+(c.a>>>16)+(l>>>16);return new a((g&65535)<<16|l&65535,m)}function B(d,b){return new a(d.a^b.a,d.b^\nb.b)}function A(d){var b=[],e;if(\"SHA-1\"===d)b=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===d.lastIndexOf(\"SHA-\",0))switch(b=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],e=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],d){case \"SHA-224\":break;case \"SHA-256\":b=e;break;case \"SHA-384\":b=[new a(3418070365,b[0]),new a(1654270250,b[1]),new a(2438529370,b[2]),new a(355462360,b[3]),new a(1731405415,\nb[4]),new a(41048885895,b[5]),new a(3675008525,b[6]),new a(1203062813,b[7])];break;case \"SHA-512\":b=[new a(e[0],4089235720),new a(e[1],2227873595),new a(e[2],4271175723),new a(e[3],1595750129),new a(e[4],2917565137),new a(e[5],725511199),new a(e[6],4215389547),new a(e[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===d.lastIndexOf(\"SHA3-\",0)||0===d.lastIndexOf(\"SHAKE\",0))for(d=0;5>d;d+=1)b[d]=[new a(0,0),new a(0,0),new a(0,0),new a(0,0),new a(0,0)];else throw Error(\"No SHA variants supported\");\nreturn b}function K(a,b){var e=[],h,c,l,g,m,p,f;h=b[0];c=b[1];l=b[2];g=b[3];m=b[4];for(f=0;80>f;f+=1)e[f]=16>f?a[f]:y(e[f-3]^e[f-8]^e[f-14]^e[f-16],1),p=20>f?H(y(h,5),c&l^~c&g,m,1518500249,e[f]):40>f?H(y(h,5),c^l^g,m,1859775393,e[f]):60>f?H(y(h,5),W(c,l,g),m,2400959708,e[f]):H(y(h,5),c^l^g,m,3395469782,e[f]),m=g,g=l,l=y(c,30),c=h,h=p;b[0]=G(h,b[0]);b[1]=G(c,b[1]);b[2]=G(l,b[2]);b[3]=G(g,b[3]);b[4]=G(m,b[4]);return b}function ba(a,b,e,c){var k;for(k=(b+65>>>9<<4)+15;a.length<=k;)a.push(0);a[b>>>5]|=\n128<<24-b%32;b+=e;a[k]=b&4294967295;a[k-1]=b/4294967296|0;b=a.length;for(k=0;k<b;k+=16)c=K(a.slice(k,k+16),c);return c}function L(d,b,e){var h,k,l,g,m,p,f,n,q,u,r,t,v,x,y,A,z,w,F,B,C,D,E=[],J;if(\"SHA-224\"===e||\"SHA-256\"===e)u=64,t=1,D=Number,v=G,x=na,y=H,A=ja,z=la,w=fa,F=ha,C=W,B=ca,J=c;else if(\"SHA-384\"===e||\"SHA-512\"===e)u=80,t=2,D=a,v=oa,x=pa,y=qa,A=ka,z=ma,w=ga,F=ia,C=ea,B=da,J=X;else throw Error(\"Unexpected error in SHA-2 implementation\");e=b[0];h=b[1];k=b[2];l=b[3];g=b[4];m=b[5];p=b[6];f=b[7];\nfor(r=0;r<u;r+=1)16>r?(q=r*t,n=d.length<=q?0:d[q],q=d.length<=q+1?0:d[q+1],E[r]=new D(n,q)):E[r]=x(z(E[r-2]),E[r-7],A(E[r-15]),E[r-16]),n=y(f,F(g),B(g,m,p),J[r],E[r]),q=v(w(e),C(e,h,k)),f=p,p=m,m=g,g=v(l,n),l=k,k=h,h=e,e=v(n,q);b[0]=v(e,b[0]);b[1]=v(h,b[1]);b[2]=v(k,b[2]);b[3]=v(l,b[3]);b[4]=v(g,b[4]);b[5]=v(m,b[5]);b[6]=v(p,b[6]);b[7]=v(f,b[7]);return b}function D(d,b){var e,c,k,l,g=[],m=[];if(null!==d)for(c=0;c<d.length;c+=2)b[(c>>>1)%5][(c>>>1)/5|0]=B(b[(c>>>1)%5][(c>>>1)/5|0],new a(d[c+1],d[c]));\nfor(e=0;24>e;e+=1){l=A(\"SHA3-\");for(c=0;5>c;c+=1){k=b[c][0];var p=b[c][1],f=b[c][2],n=b[c][3],q=b[c][4];g[c]=new a(k.a^p.a^f.a^n.a^q.a,k.b^p.b^f.b^n.b^q.b)}for(c=0;5>c;c+=1)m[c]=B(g[(c+4)%5],U(g[(c+1)%5],1));for(c=0;5>c;c+=1)for(k=0;5>k;k+=1)b[c][k]=B(b[c][k],m[c]);for(c=0;5>c;c+=1)for(k=0;5>k;k+=1)l[k][(2*c+3*k)%5]=U(b[c][k],Y[c][k]);for(c=0;5>c;c+=1)for(k=0;5>k;k+=1)b[c][k]=B(l[c][k],new a(~l[(c+1)%5][k].a&l[(c+2)%5][k].a,~l[(c+1)%5][k].b&l[(c+2)%5][k].b));b[0][0]=B(b[0][0],Z[e])}return b}var c,\nX,Y,Z;c=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,\n4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];X=[new a(c[0],3609767458),new a(c[1],602891725),new a(c[2],3964484399),new a(c[3],2173295548),new a(c[4],4081628472),new a(c[5],3053834265),new a(c[6],2937671579),new a(c[7],3664609560),new a(c[8],2734883394),new a(c[9],1164996542),new a(c[10],1323610764),new a(c[11],3590304994),new a(c[12],4068182383),new a(c[13],\n991336113),new a(c[14],633803317),new a(c[15],3479774868),new a(c[16],2666613458),new a(c[17],944711139),new a(c[18],2341262773),new a(c[19],2007800933),new a(c[20],1495990901),new a(c[21],1856431235),new a(c[22],3175218132),new a(c[23],2198950837),new a(c[24],3999719339),new a(c[25],766784016),new a(c[26],2566594879),new a(c[27],3203337956),new a(c[28],1034457026),new a(c[29],2466948901),new a(c[30],3758326383),new a(c[31],168717936),new a(c[32],1188179964),new a(c[33],1546045734),new a(c[34],1522805485),\nnew a(c[35],2643833823),new a(c[36],2343527390),new a(c[37],1014477480),new a(c[38],1206759142),new a(c[39],344077627),new a(c[40],1290863460),new a(c[41],3158454273),new a(c[42],3505952657),new a(c[43],106217008),new a(c[44],3606008344),new a(c[45],1432725776),new a(c[46],1467031594),new a(c[47],851169720),new a(c[48],3100823752),new a(c[49],1363258195),new a(c[50],3750685593),new a(c[51],3785050280),new a(c[52],3318307427),new a(c[53],3812723403),new a(c[54],2003034995),new a(c[55],3602036899),\nnew a(c[56],1575990012),new a(c[57],1125592928),new a(c[58],2716904306),new a(c[59],442776044),new a(c[60],593698344),new a(c[61],3733110249),new a(c[62],2999351573),new a(c[63],3815920427),new a(3391569614,3928383900),new a(3515267271,566280711),new a(3940187606,3454069534),new a(4118630271,4000239992),new a(116418474,1914138554),new a(174292421,2731055270),new a(289380356,3203993006),new a(460393269,320620315),new a(685471733,587496836),new a(852142971,1086792851),new a(1017036298,365543100),new a(1126000580,\n2618297676),new a(1288033470,3409855158),new a(1501505948,4234509866),new a(1607167915,987167468),new a(1816402316,1246189591)];Z=[new a(0,1),new a(0,32898),new a(2147483648,32906),new a(2147483648,2147516416),new a(0,32907),new a(0,2147483649),new a(2147483648,2147516545),new a(2147483648,32777),new a(0,138),new a(0,136),new a(0,2147516425),new a(0,2147483658),new a(0,2147516555),new a(2147483648,139),new a(2147483648,32905),new a(2147483648,32771),new a(2147483648,32770),new a(2147483648,128),new a(0,\n32778),new a(2147483648,2147483658),new a(2147483648,2147516545),new a(2147483648,32896),new a(0,2147483649),new a(2147483648,2147516424)];Y=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];\"function\"===typeof define&&define.amd?define(function(){return C}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=C),exports=C):aa.jsSHA=C})(this);\n","var bufferEqual = require('buffer-equal-constant-time');\nvar Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n","/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n","/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n","/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArtifactsWaiter = exports.ArtifactsClient = exports.responses = exports.requests = exports.models = void 0;\nconst requests = __importStar(require(\"./lib/request\"));\nexports.requests = requests;\nconst models = __importStar(require(\"./lib/model\"));\nexports.models = models;\nconst responses = __importStar(require(\"./lib/response\"));\nexports.responses = responses;\nconst client = __importStar(require(\"./lib/client\"));\nconst artifacts_waiter = __importStar(require(\"./lib/artifacts-waiter\"));\nexports.ArtifactsClient = client.ArtifactsClient;\nexports.ArtifactsWaiter = artifacts_waiter.ArtifactsWaiter;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArtifactsWaiter = void 0;\nconst models = __importStar(require(\"./model\"));\nconst oci_common_1 = require(\"oci-common\");\nclass ArtifactsWaiter {\n    constructor(client, config) {\n        this.client = client;\n        this.config = config;\n    }\n    /**\n     * Waits forContainerImage till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetContainerImageResponse | null (null in case of 404 response)\n     */\n    forContainerImage(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getContainerImage(request), response => targetStates.includes(response.containerImage.lifecycleState), targetStates.includes(models.ContainerImage.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forContainerRepository till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetContainerRepositoryResponse | null (null in case of 404 response)\n     */\n    forContainerRepository(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getContainerRepository(request), response => targetStates.includes(response.containerRepository.lifecycleState), targetStates.includes(models.ContainerRepository.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forGenericArtifact till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetGenericArtifactResponse | null (null in case of 404 response)\n     */\n    forGenericArtifact(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getGenericArtifact(request), response => targetStates.includes(response.genericArtifact.lifecycleState), targetStates.includes(models.GenericArtifact.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forRepository till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetRepositoryResponse | null (null in case of 404 response)\n     */\n    forRepository(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getRepository(request), response => targetStates.includes(response.repository.lifecycleState), targetStates.includes(models.Repository.LifecycleState.Deleted));\n        });\n    }\n}\nexports.ArtifactsWaiter = ArtifactsWaiter;\n//# sourceMappingURL=artifacts-waiter.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArtifactsClient = exports.ArtifactsApiKeys = void 0;\nconst common = require(\"oci-common\");\nconst model = __importStar(require(\"./model\"));\nconst artifacts_waiter_1 = require(\"./artifacts-waiter\");\nconst oci_common_1 = require(\"oci-common\");\n// ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\nvar ArtifactsApiKeys;\n(function (ArtifactsApiKeys) {\n})(ArtifactsApiKeys = exports.ArtifactsApiKeys || (exports.ArtifactsApiKeys = {}));\nclass ArtifactsClient {\n    constructor(params, clientConfiguration) {\n        this[\"_endpoint\"] = \"\";\n        this[\"_defaultHeaders\"] = {};\n        this._circuitBreaker = null;\n        const requestSigner = params.authenticationDetailsProvider\n            ? new common.DefaultRequestSigner(params.authenticationDetailsProvider)\n            : null;\n        if (clientConfiguration) {\n            this._clientConfiguration = clientConfiguration;\n            this._circuitBreaker = clientConfiguration.circuitBreaker\n                ? clientConfiguration.circuitBreaker.circuit\n                : null;\n        }\n        this._httpClient =\n            params.httpClient || new common.FetchHttpClient(requestSigner, this._circuitBreaker);\n        if (params.authenticationDetailsProvider &&\n            common.isRegionProvider(params.authenticationDetailsProvider)) {\n            const provider = params.authenticationDetailsProvider;\n            if (provider.getRegion()) {\n                this.region = provider.getRegion();\n            }\n        }\n    }\n    /**\n     * Get the endpoint that is being used to call (ex, https://www.example.com).\n     */\n    get endpoint() {\n        return this._endpoint;\n    }\n    /**\n     * Sets the endpoint to call (ex, https://www.example.com).\n     * @param endpoint The endpoint of the service.\n     */\n    set endpoint(endpoint) {\n        this._endpoint = endpoint;\n        this._endpoint = this._endpoint + \"/20160918\";\n        if (this.logger)\n            this.logger.info(`ArtifactsClient endpoint set to ${this._endpoint}`);\n    }\n    get logger() {\n        return common.LOG.logger;\n    }\n    /**\n     * Sets the region to call (ex, Region.US_PHOENIX_1).\n     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.\n     * @param region The region of the service.\n     */\n    set region(region) {\n        this.endpoint = common.EndpointBuilder.createEndpointFromRegion(ArtifactsClient.serviceEndpointTemplate, region);\n    }\n    /**\n     * Sets the regionId to call (ex, 'us-phoenix-1').\n     *\n     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.\n     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1\n     * and then call {@link #endpoint(String) endpoint}.\n     * @param regionId The public region ID.\n     */\n    set regionId(regionId) {\n        this.endpoint = common.EndpointBuilder.createEndpointFromRegionId(ArtifactsClient.serviceEndpointTemplate, regionId);\n    }\n    /**\n     * Creates a new ArtifactsWaiter for resources for this service.\n     *\n     * @param config The waiter configuration for termination and delay strategy\n     * @return The service waiters.\n     */\n    createWaiters(config) {\n        this._waiters = new artifacts_waiter_1.ArtifactsWaiter(this, config);\n        return this._waiters;\n    }\n    /**\n     * Gets the waiters available for resources for this service.\n     *\n     * @return The service waiters.\n     */\n    getWaiters() {\n        if (this._waiters) {\n            return this._waiters;\n        }\n        throw Error(\"Waiters do not exist. Please create waiters.\");\n    }\n    /**\n     * Moves a container repository into a different compartment within the same tenancy. For information about moving\n     * resources between compartments, see\n     * [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).\n     *\n     * @param ChangeContainerRepositoryCompartmentRequest\n     * @return ChangeContainerRepositoryCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ChangeContainerRepositoryCompartment.ts.html |here} to see how to use ChangeContainerRepositoryCompartment API.\n     */\n    changeContainerRepositoryCompartment(changeContainerRepositoryCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#changeContainerRepositoryCompartment.\");\n            const pathParams = {\n                \"{repositoryId}\": changeContainerRepositoryCompartmentRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": changeContainerRepositoryCompartmentRequest.ifMatch,\n                \"opc-request-id\": changeContainerRepositoryCompartmentRequest.opcRequestId,\n                \"opc-retry-token\": changeContainerRepositoryCompartmentRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, changeContainerRepositoryCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories/{repositoryId}/actions/changeCompartment\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(changeContainerRepositoryCompartmentRequest.changeContainerRepositoryCompartmentDetails, \"ChangeContainerRepositoryCompartmentDetails\", model.ChangeContainerRepositoryCompartmentDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Moves a repository into a different compartment within the same tenancy. For information about moving\n     * resources between compartments, see\n     * [Moving Resources to a Different Compartment](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcompartments.htm#moveRes).\n     *\n     * @param ChangeRepositoryCompartmentRequest\n     * @return ChangeRepositoryCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ChangeRepositoryCompartment.ts.html |here} to see how to use ChangeRepositoryCompartment API.\n     */\n    changeRepositoryCompartment(changeRepositoryCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#changeRepositoryCompartment.\");\n            const pathParams = {\n                \"{repositoryId}\": changeRepositoryCompartmentRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": changeRepositoryCompartmentRequest.ifMatch,\n                \"opc-request-id\": changeRepositoryCompartmentRequest.opcRequestId,\n                \"opc-retry-token\": changeRepositoryCompartmentRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, changeRepositoryCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories/{repositoryId}/actions/changeCompartment\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(changeRepositoryCompartmentRequest.changeRepositoryCompartmentDetails, \"ChangeRepositoryCompartmentDetails\", model.ChangeRepositoryCompartmentDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Upload a signature to an image.\n     * @param CreateContainerImageSignatureRequest\n     * @return CreateContainerImageSignatureResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/CreateContainerImageSignature.ts.html |here} to see how to use CreateContainerImageSignature API.\n     */\n    createContainerImageSignature(createContainerImageSignatureRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#createContainerImageSignature.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": createContainerImageSignatureRequest.opcRequestId,\n                \"opc-retry-token\": createContainerImageSignatureRequest.opcRetryToken,\n                \"if-match\": createContainerImageSignatureRequest.ifMatch\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createContainerImageSignatureRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/imageSignatures\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createContainerImageSignatureRequest.createContainerImageSignatureDetails, \"CreateContainerImageSignatureDetails\", model.CreateContainerImageSignatureDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImageSignature\",\n                    bodyModel: model.ContainerImageSignature,\n                    type: \"model.ContainerImageSignature\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Create a new empty container repository. Avoid entering confidential information.\n     * @param CreateContainerRepositoryRequest\n     * @return CreateContainerRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/CreateContainerRepository.ts.html |here} to see how to use CreateContainerRepository API.\n     */\n    createContainerRepository(createContainerRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#createContainerRepository.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": createContainerRepositoryRequest.opcRequestId,\n                \"opc-retry-token\": createContainerRepositoryRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createContainerRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createContainerRepositoryRequest.createContainerRepositoryDetails, \"CreateContainerRepositoryDetails\", model.CreateContainerRepositoryDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerRepository\",\n                    bodyModel: model.ContainerRepository,\n                    type: \"model.ContainerRepository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates a new repository for storing artifacts.\n     * @param CreateRepositoryRequest\n     * @return CreateRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/CreateRepository.ts.html |here} to see how to use CreateRepository API.\n     */\n    createRepository(createRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#createRepository.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": createRepositoryRequest.opcRequestId,\n                \"opc-retry-token\": createRepositoryRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createRepositoryRequest.createRepositoryDetails, \"CreateRepositoryDetails\", model.CreateRepositoryDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"repository\",\n                    bodyModel: model.Repository,\n                    type: \"model.Repository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Delete a container image.\n     * @param DeleteContainerImageRequest\n     * @return DeleteContainerImageResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteContainerImage.ts.html |here} to see how to use DeleteContainerImage API.\n     */\n    deleteContainerImage(deleteContainerImageRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteContainerImage.\");\n            const pathParams = {\n                \"{imageId}\": deleteContainerImageRequest.imageId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteContainerImageRequest.ifMatch,\n                \"opc-request-id\": deleteContainerImageRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteContainerImageRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/images/{imageId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Delete a container image signature.\n     * @param DeleteContainerImageSignatureRequest\n     * @return DeleteContainerImageSignatureResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteContainerImageSignature.ts.html |here} to see how to use DeleteContainerImageSignature API.\n     */\n    deleteContainerImageSignature(deleteContainerImageSignatureRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteContainerImageSignature.\");\n            const pathParams = {\n                \"{imageSignatureId}\": deleteContainerImageSignatureRequest.imageSignatureId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": deleteContainerImageSignatureRequest.opcRequestId,\n                \"if-match\": deleteContainerImageSignatureRequest.ifMatch\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteContainerImageSignatureRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/imageSignatures/{imageSignatureId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Delete container repository.\n     * @param DeleteContainerRepositoryRequest\n     * @return DeleteContainerRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteContainerRepository.ts.html |here} to see how to use DeleteContainerRepository API.\n     */\n    deleteContainerRepository(deleteContainerRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteContainerRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": deleteContainerRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteContainerRepositoryRequest.ifMatch,\n                \"opc-request-id\": deleteContainerRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteContainerRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories/{repositoryId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes an artifact with a specified [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).\n     * @param DeleteGenericArtifactRequest\n     * @return DeleteGenericArtifactResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteGenericArtifact.ts.html |here} to see how to use DeleteGenericArtifact API.\n     */\n    deleteGenericArtifact(deleteGenericArtifactRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteGenericArtifact.\");\n            const pathParams = {\n                \"{artifactId}\": deleteGenericArtifactRequest.artifactId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteGenericArtifactRequest.ifMatch,\n                \"opc-request-id\": deleteGenericArtifactRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteGenericArtifactRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/artifacts/{artifactId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes an artifact with a specified `artifactPath` and `version`.\n     * @param DeleteGenericArtifactByPathRequest\n     * @return DeleteGenericArtifactByPathResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteGenericArtifactByPath.ts.html |here} to see how to use DeleteGenericArtifactByPath API.\n     */\n    deleteGenericArtifactByPath(deleteGenericArtifactByPathRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteGenericArtifactByPath.\");\n            const pathParams = {\n                \"{repositoryId}\": deleteGenericArtifactByPathRequest.repositoryId,\n                \"{artifactPath}\": deleteGenericArtifactByPathRequest.artifactPath,\n                \"{version}\": deleteGenericArtifactByPathRequest.version\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteGenericArtifactByPathRequest.ifMatch,\n                \"opc-request-id\": deleteGenericArtifactByPathRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteGenericArtifactByPathRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/repositories/{repositoryId}/artifactPaths/{artifactPath}/versions/{version}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified repository. This operation fails unless all associated artifacts are in a DELETED state. You must delete all associated artifacts before deleting a repository.\n     * @param DeleteRepositoryRequest\n     * @return DeleteRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/DeleteRepository.ts.html |here} to see how to use DeleteRepository API.\n     */\n    deleteRepository(deleteRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#deleteRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": deleteRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteRepositoryRequest.ifMatch,\n                \"opc-request-id\": deleteRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories/{repositoryId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get container configuration.\n     * @param GetContainerConfigurationRequest\n     * @return GetContainerConfigurationResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetContainerConfiguration.ts.html |here} to see how to use GetContainerConfiguration API.\n     */\n    getContainerConfiguration(getContainerConfigurationRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getContainerConfiguration.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": getContainerConfigurationRequest.compartmentId\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getContainerConfigurationRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getContainerConfigurationRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/configuration\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerConfiguration\",\n                    bodyModel: model.ContainerConfiguration,\n                    type: \"model.ContainerConfiguration\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get container image metadata.\n     * @param GetContainerImageRequest\n     * @return GetContainerImageResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetContainerImage.ts.html |here} to see how to use GetContainerImage API.\n     */\n    getContainerImage(getContainerImageRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getContainerImage.\");\n            const pathParams = {\n                \"{imageId}\": getContainerImageRequest.imageId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getContainerImageRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getContainerImageRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/images/{imageId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImage\",\n                    bodyModel: model.ContainerImage,\n                    type: \"model.ContainerImage\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get container image signature metadata.\n     * @param GetContainerImageSignatureRequest\n     * @return GetContainerImageSignatureResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetContainerImageSignature.ts.html |here} to see how to use GetContainerImageSignature API.\n     */\n    getContainerImageSignature(getContainerImageSignatureRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getContainerImageSignature.\");\n            const pathParams = {\n                \"{imageSignatureId}\": getContainerImageSignatureRequest.imageSignatureId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getContainerImageSignatureRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getContainerImageSignatureRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/imageSignatures/{imageSignatureId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImageSignature\",\n                    bodyModel: model.ContainerImageSignature,\n                    type: \"model.ContainerImageSignature\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get container repository.\n     * @param GetContainerRepositoryRequest\n     * @return GetContainerRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetContainerRepository.ts.html |here} to see how to use GetContainerRepository API.\n     */\n    getContainerRepository(getContainerRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getContainerRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": getContainerRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getContainerRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getContainerRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories/{repositoryId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerRepository\",\n                    bodyModel: model.ContainerRepository,\n                    type: \"model.ContainerRepository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets information about an artifact with a specified [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).\n     * @param GetGenericArtifactRequest\n     * @return GetGenericArtifactResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetGenericArtifact.ts.html |here} to see how to use GetGenericArtifact API.\n     */\n    getGenericArtifact(getGenericArtifactRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getGenericArtifact.\");\n            const pathParams = {\n                \"{artifactId}\": getGenericArtifactRequest.artifactId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getGenericArtifactRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getGenericArtifactRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/artifacts/{artifactId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"genericArtifact\",\n                    bodyModel: model.GenericArtifact,\n                    type: \"model.GenericArtifact\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets information about an artifact with a specified `artifactPath` and `version`.\n     * @param GetGenericArtifactByPathRequest\n     * @return GetGenericArtifactByPathResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetGenericArtifactByPath.ts.html |here} to see how to use GetGenericArtifactByPath API.\n     */\n    getGenericArtifactByPath(getGenericArtifactByPathRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getGenericArtifactByPath.\");\n            const pathParams = {\n                \"{repositoryId}\": getGenericArtifactByPathRequest.repositoryId,\n                \"{artifactPath}\": getGenericArtifactByPathRequest.artifactPath,\n                \"{version}\": getGenericArtifactByPathRequest.version\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getGenericArtifactByPathRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getGenericArtifactByPathRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/repositories/{repositoryId}/artifactPaths/{artifactPath}/versions/{version}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"genericArtifact\",\n                    bodyModel: model.GenericArtifact,\n                    type: \"model.GenericArtifact\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified repository's information.\n     * @param GetRepositoryRequest\n     * @return GetRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/GetRepository.ts.html |here} to see how to use GetRepository API.\n     */\n    getRepository(getRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#getRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": getRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": getRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories/{repositoryId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"repository\",\n                    bodyModel: model.Repository,\n                    type: \"model.Repository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * List container image signatures in an image.\n     * @param ListContainerImageSignaturesRequest\n     * @return ListContainerImageSignaturesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ListContainerImageSignatures.ts.html |here} to see how to use ListContainerImageSignatures API.\n     */\n    listContainerImageSignatures(listContainerImageSignaturesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#listContainerImageSignatures.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentIdInSubtree\": listContainerImageSignaturesRequest.compartmentIdInSubtree,\n                \"compartmentId\": listContainerImageSignaturesRequest.compartmentId,\n                \"imageId\": listContainerImageSignaturesRequest.imageId,\n                \"repositoryId\": listContainerImageSignaturesRequest.repositoryId,\n                \"repositoryName\": listContainerImageSignaturesRequest.repositoryName,\n                \"imageDigest\": listContainerImageSignaturesRequest.imageDigest,\n                \"displayName\": listContainerImageSignaturesRequest.displayName,\n                \"kmsKeyId\": listContainerImageSignaturesRequest.kmsKeyId,\n                \"kmsKeyVersionId\": listContainerImageSignaturesRequest.kmsKeyVersionId,\n                \"signingAlgorithm\": listContainerImageSignaturesRequest.signingAlgorithm,\n                \"limit\": listContainerImageSignaturesRequest.limit,\n                \"page\": listContainerImageSignaturesRequest.page,\n                \"sortBy\": listContainerImageSignaturesRequest.sortBy,\n                \"sortOrder\": listContainerImageSignaturesRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": listContainerImageSignaturesRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listContainerImageSignaturesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/imageSignatures\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImageSignatureCollection\",\n                    bodyModel: model.ContainerImageSignatureCollection,\n                    type: \"model.ContainerImageSignatureCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * List container images in a compartment.\n     * @param ListContainerImagesRequest\n     * @return ListContainerImagesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ListContainerImages.ts.html |here} to see how to use ListContainerImages API.\n     */\n    listContainerImages(listContainerImagesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#listContainerImages.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentIdInSubtree\": listContainerImagesRequest.compartmentIdInSubtree,\n                \"compartmentId\": listContainerImagesRequest.compartmentId,\n                \"displayName\": listContainerImagesRequest.displayName,\n                \"imageId\": listContainerImagesRequest.imageId,\n                \"isVersioned\": listContainerImagesRequest.isVersioned,\n                \"repositoryId\": listContainerImagesRequest.repositoryId,\n                \"repositoryName\": listContainerImagesRequest.repositoryName,\n                \"version\": listContainerImagesRequest.version,\n                \"lifecycleState\": listContainerImagesRequest.lifecycleState,\n                \"limit\": listContainerImagesRequest.limit,\n                \"page\": listContainerImagesRequest.page,\n                \"sortBy\": listContainerImagesRequest.sortBy,\n                \"sortOrder\": listContainerImagesRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": listContainerImagesRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listContainerImagesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/images\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImageCollection\",\n                    bodyModel: model.ContainerImageCollection,\n                    type: \"model.ContainerImageCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * List container repositories in a compartment.\n     * @param ListContainerRepositoriesRequest\n     * @return ListContainerRepositoriesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ListContainerRepositories.ts.html |here} to see how to use ListContainerRepositories API.\n     */\n    listContainerRepositories(listContainerRepositoriesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#listContainerRepositories.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentIdInSubtree\": listContainerRepositoriesRequest.compartmentIdInSubtree,\n                \"compartmentId\": listContainerRepositoriesRequest.compartmentId,\n                \"repositoryId\": listContainerRepositoriesRequest.repositoryId,\n                \"displayName\": listContainerRepositoriesRequest.displayName,\n                \"isPublic\": listContainerRepositoriesRequest.isPublic,\n                \"lifecycleState\": listContainerRepositoriesRequest.lifecycleState,\n                \"limit\": listContainerRepositoriesRequest.limit,\n                \"page\": listContainerRepositoriesRequest.page,\n                \"sortBy\": listContainerRepositoriesRequest.sortBy,\n                \"sortOrder\": listContainerRepositoriesRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": listContainerRepositoriesRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listContainerRepositoriesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerRepositoryCollection\",\n                    bodyModel: model.ContainerRepositoryCollection,\n                    type: \"model.ContainerRepositoryCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists artifacts in the specified repository.\n     * @param ListGenericArtifactsRequest\n     * @return ListGenericArtifactsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ListGenericArtifacts.ts.html |here} to see how to use ListGenericArtifacts API.\n     */\n    listGenericArtifacts(listGenericArtifactsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#listGenericArtifacts.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listGenericArtifactsRequest.compartmentId,\n                \"repositoryId\": listGenericArtifactsRequest.repositoryId,\n                \"id\": listGenericArtifactsRequest.id,\n                \"displayName\": listGenericArtifactsRequest.displayName,\n                \"artifactPath\": listGenericArtifactsRequest.artifactPath,\n                \"version\": listGenericArtifactsRequest.version,\n                \"sha256\": listGenericArtifactsRequest.sha256,\n                \"lifecycleState\": listGenericArtifactsRequest.lifecycleState,\n                \"limit\": listGenericArtifactsRequest.limit,\n                \"page\": listGenericArtifactsRequest.page,\n                \"sortBy\": listGenericArtifactsRequest.sortBy,\n                \"sortOrder\": listGenericArtifactsRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": listGenericArtifactsRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listGenericArtifactsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/artifacts\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"genericArtifactCollection\",\n                    bodyModel: model.GenericArtifactCollection,\n                    type: \"model.GenericArtifactCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists repositories in the specified compartment.\n     * @param ListRepositoriesRequest\n     * @return ListRepositoriesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/ListRepositories.ts.html |here} to see how to use ListRepositories API.\n     */\n    listRepositories(listRepositoriesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#listRepositories.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listRepositoriesRequest.compartmentId,\n                \"id\": listRepositoriesRequest.id,\n                \"displayName\": listRepositoriesRequest.displayName,\n                \"isImmutable\": listRepositoriesRequest.isImmutable,\n                \"lifecycleState\": listRepositoriesRequest.lifecycleState,\n                \"limit\": listRepositoriesRequest.limit,\n                \"page\": listRepositoriesRequest.page,\n                \"sortBy\": listRepositoriesRequest.sortBy,\n                \"sortOrder\": listRepositoriesRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": listRepositoriesRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listRepositoriesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"repositoryCollection\",\n                    bodyModel: model.RepositoryCollection,\n                    type: \"model.RepositoryCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Remove version from container image.\n     * @param RemoveContainerVersionRequest\n     * @return RemoveContainerVersionResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/RemoveContainerVersion.ts.html |here} to see how to use RemoveContainerVersion API.\n     */\n    removeContainerVersion(removeContainerVersionRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#removeContainerVersion.\");\n            const pathParams = {\n                \"{imageId}\": removeContainerVersionRequest.imageId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": removeContainerVersionRequest.ifMatch,\n                \"opc-request-id\": removeContainerVersionRequest.opcRequestId,\n                \"opc-retry-token\": removeContainerVersionRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, removeContainerVersionRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/images/{imageId}/actions/removeVersion\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(removeContainerVersionRequest.removeContainerVersionDetails, \"RemoveContainerVersionDetails\", model.RemoveContainerVersionDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImage\",\n                    bodyModel: model.ContainerImage,\n                    type: \"model.ContainerImage\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Restore a container image.\n     * @param RestoreContainerImageRequest\n     * @return RestoreContainerImageResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/RestoreContainerImage.ts.html |here} to see how to use RestoreContainerImage API.\n     */\n    restoreContainerImage(restoreContainerImageRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#restoreContainerImage.\");\n            const pathParams = {\n                \"{imageId}\": restoreContainerImageRequest.imageId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": restoreContainerImageRequest.ifMatch,\n                \"opc-request-id\": restoreContainerImageRequest.opcRequestId,\n                \"opc-retry-token\": restoreContainerImageRequest.opcRetryToken\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, restoreContainerImageRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/images/{imageId}/actions/restore\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(restoreContainerImageRequest.restoreContainerImageDetails, \"RestoreContainerImageDetails\", model.RestoreContainerImageDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerImage\",\n                    bodyModel: model.ContainerImage,\n                    type: \"model.ContainerImage\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Update container configuration.\n     * @param UpdateContainerConfigurationRequest\n     * @return UpdateContainerConfigurationResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/UpdateContainerConfiguration.ts.html |here} to see how to use UpdateContainerConfiguration API.\n     */\n    updateContainerConfiguration(updateContainerConfigurationRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#updateContainerConfiguration.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": updateContainerConfigurationRequest.compartmentId\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateContainerConfigurationRequest.ifMatch,\n                \"opc-request-id\": updateContainerConfigurationRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateContainerConfigurationRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/configuration\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateContainerConfigurationRequest.updateContainerConfigurationDetails, \"UpdateContainerConfigurationDetails\", model.UpdateContainerConfigurationDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerConfiguration\",\n                    bodyModel: model.ContainerConfiguration,\n                    type: \"model.ContainerConfiguration\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Modify the properties of a container repository. Avoid entering confidential information.\n     * @param UpdateContainerRepositoryRequest\n     * @return UpdateContainerRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/UpdateContainerRepository.ts.html |here} to see how to use UpdateContainerRepository API.\n     */\n    updateContainerRepository(updateContainerRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#updateContainerRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": updateContainerRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateContainerRepositoryRequest.ifMatch,\n                \"opc-request-id\": updateContainerRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateContainerRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/container/repositories/{repositoryId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateContainerRepositoryRequest.updateContainerRepositoryDetails, \"UpdateContainerRepositoryDetails\", model.UpdateContainerRepositoryDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"containerRepository\",\n                    bodyModel: model.ContainerRepository,\n                    type: \"model.ContainerRepository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the artifact with the specified [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). You can only update the tags of an artifact.\n     * @param UpdateGenericArtifactRequest\n     * @return UpdateGenericArtifactResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/UpdateGenericArtifact.ts.html |here} to see how to use UpdateGenericArtifact API.\n     */\n    updateGenericArtifact(updateGenericArtifactRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#updateGenericArtifact.\");\n            const pathParams = {\n                \"{artifactId}\": updateGenericArtifactRequest.artifactId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateGenericArtifactRequest.ifMatch,\n                \"opc-request-id\": updateGenericArtifactRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateGenericArtifactRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/artifacts/{artifactId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateGenericArtifactRequest.updateGenericArtifactDetails, \"UpdateGenericArtifactDetails\", model.UpdateGenericArtifactDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"genericArtifact\",\n                    bodyModel: model.GenericArtifact,\n                    type: \"model.GenericArtifact\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates an artifact with a specified `artifactPath` and `version`. You can only update the tags of an artifact.\n     * @param UpdateGenericArtifactByPathRequest\n     * @return UpdateGenericArtifactByPathResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/UpdateGenericArtifactByPath.ts.html |here} to see how to use UpdateGenericArtifactByPath API.\n     */\n    updateGenericArtifactByPath(updateGenericArtifactByPathRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#updateGenericArtifactByPath.\");\n            const pathParams = {\n                \"{repositoryId}\": updateGenericArtifactByPathRequest.repositoryId,\n                \"{artifactPath}\": updateGenericArtifactByPathRequest.artifactPath,\n                \"{version}\": updateGenericArtifactByPathRequest.version\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateGenericArtifactByPathRequest.ifMatch,\n                \"opc-request-id\": updateGenericArtifactByPathRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateGenericArtifactByPathRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/generic/repositories/{repositoryId}/artifactPaths/{artifactPath}/versions/{version}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateGenericArtifactByPathRequest.updateGenericArtifactByPathDetails, \"UpdateGenericArtifactByPathDetails\", model.UpdateGenericArtifactByPathDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"genericArtifact\",\n                    bodyModel: model.GenericArtifact,\n                    type: \"model.GenericArtifact\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the properties of a repository. You can update the `displayName` and  `description` properties.\n     * @param UpdateRepositoryRequest\n     * @return UpdateRepositoryResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/artifacts/UpdateRepository.ts.html |here} to see how to use UpdateRepository API.\n     */\n    updateRepository(updateRepositoryRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation ArtifactsClient#updateRepository.\");\n            const pathParams = {\n                \"{repositoryId}\": updateRepositoryRequest.repositoryId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateRepositoryRequest.ifMatch,\n                \"opc-request-id\": updateRepositoryRequest.opcRequestId\n            };\n            const retrier = oci_common_1.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateRepositoryRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_1.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/repositories/{repositoryId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateRepositoryRequest.updateRepositoryDetails, \"UpdateRepositoryDetails\", model.UpdateRepositoryDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_1.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"repository\",\n                    bodyModel: model.Repository,\n                    type: \"model.Repository\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n}\nexports.ArtifactsClient = ArtifactsClient;\nArtifactsClient.serviceEndpointTemplate = \"https://artifacts.{region}.oci.{secondLevelDomain}\";\n//# sourceMappingURL=client.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeContainerRepositoryCompartmentDetails = void 0;\nvar ChangeContainerRepositoryCompartmentDetails;\n(function (ChangeContainerRepositoryCompartmentDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeContainerRepositoryCompartmentDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeContainerRepositoryCompartmentDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ChangeContainerRepositoryCompartmentDetails = exports.ChangeContainerRepositoryCompartmentDetails || (exports.ChangeContainerRepositoryCompartmentDetails = {}));\n//# sourceMappingURL=change-container-repository-compartment-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeRepositoryCompartmentDetails = void 0;\nvar ChangeRepositoryCompartmentDetails;\n(function (ChangeRepositoryCompartmentDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeRepositoryCompartmentDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeRepositoryCompartmentDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ChangeRepositoryCompartmentDetails = exports.ChangeRepositoryCompartmentDetails || (exports.ChangeRepositoryCompartmentDetails = {}));\n//# sourceMappingURL=change-repository-compartment-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerConfiguration = void 0;\nvar ContainerConfiguration;\n(function (ContainerConfiguration) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerConfiguration.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerConfiguration.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerConfiguration = exports.ContainerConfiguration || (exports.ContainerConfiguration = {}));\n//# sourceMappingURL=container-configuration.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar ContainerImageCollection;\n(function (ContainerImageCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerImageSummary.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImageCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerImageSummary.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImageCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageCollection = exports.ContainerImageCollection || (exports.ContainerImageCollection = {}));\n//# sourceMappingURL=container-image-collection.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageLayer = void 0;\nvar ContainerImageLayer;\n(function (ContainerImageLayer) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageLayer.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageLayer.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageLayer = exports.ContainerImageLayer || (exports.ContainerImageLayer = {}));\n//# sourceMappingURL=container-image-layer.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageSignatureCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar ContainerImageSignatureCollection;\n(function (ContainerImageSignatureCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerImageSignatureSummary.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImageSignatureCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerImageSignatureSummary.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImageSignatureCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageSignatureCollection = exports.ContainerImageSignatureCollection || (exports.ContainerImageSignatureCollection = {}));\n//# sourceMappingURL=container-image-signature-collection.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageSignatureSummary = void 0;\nvar ContainerImageSignatureSummary;\n(function (ContainerImageSignatureSummary) {\n    let SigningAlgorithm;\n    (function (SigningAlgorithm) {\n        SigningAlgorithm[\"Sha224RsaPkcsPss\"] = \"SHA_224_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha256RsaPkcsPss\"] = \"SHA_256_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha384RsaPkcsPss\"] = \"SHA_384_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha512RsaPkcsPss\"] = \"SHA_512_RSA_PKCS_PSS\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        SigningAlgorithm[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(SigningAlgorithm = ContainerImageSignatureSummary.SigningAlgorithm || (ContainerImageSignatureSummary.SigningAlgorithm = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSignatureSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSignatureSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageSignatureSummary = exports.ContainerImageSignatureSummary || (exports.ContainerImageSignatureSummary = {}));\n//# sourceMappingURL=container-image-signature-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageSignature = void 0;\nvar ContainerImageSignature;\n(function (ContainerImageSignature) {\n    let SigningAlgorithm;\n    (function (SigningAlgorithm) {\n        SigningAlgorithm[\"Sha224RsaPkcsPss\"] = \"SHA_224_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha256RsaPkcsPss\"] = \"SHA_256_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha384RsaPkcsPss\"] = \"SHA_384_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha512RsaPkcsPss\"] = \"SHA_512_RSA_PKCS_PSS\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        SigningAlgorithm[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(SigningAlgorithm = ContainerImageSignature.SigningAlgorithm || (ContainerImageSignature.SigningAlgorithm = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSignature.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSignature.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageSignature = exports.ContainerImageSignature || (exports.ContainerImageSignature = {}));\n//# sourceMappingURL=container-image-signature.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImageSummary = void 0;\nvar ContainerImageSummary;\n(function (ContainerImageSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerImageSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImageSummary = exports.ContainerImageSummary || (exports.ContainerImageSummary = {}));\n//# sourceMappingURL=container-image-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerImage = void 0;\nconst model = __importStar(require(\"../model\"));\nvar ContainerImage;\n(function (ContainerImage) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Available\"] = \"AVAILABLE\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = ContainerImage.LifecycleState || (ContainerImage.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"layers\": obj.layers\n                ? obj.layers.map(item => {\n                    return model.ContainerImageLayer.getJsonObj(item);\n                })\n                : undefined,\n            \"versions\": obj.versions\n                ? obj.versions.map(item => {\n                    return model.ContainerVersion.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImage.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"layers\": obj.layers\n                ? obj.layers.map(item => {\n                    return model.ContainerImageLayer.getDeserializedJsonObj(item);\n                })\n                : undefined,\n            \"versions\": obj.versions\n                ? obj.versions.map(item => {\n                    return model.ContainerVersion.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerImage.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerImage = exports.ContainerImage || (exports.ContainerImage = {}));\n//# sourceMappingURL=container-image.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerRepositoryCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar ContainerRepositoryCollection;\n(function (ContainerRepositoryCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerRepositorySummary.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerRepositoryCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.ContainerRepositorySummary.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerRepositoryCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerRepositoryCollection = exports.ContainerRepositoryCollection || (exports.ContainerRepositoryCollection = {}));\n//# sourceMappingURL=container-repository-collection.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerRepositoryReadme = void 0;\nvar ContainerRepositoryReadme;\n(function (ContainerRepositoryReadme) {\n    let Format;\n    (function (Format) {\n        Format[\"TextMarkdown\"] = \"TEXT_MARKDOWN\";\n        Format[\"TextPlain\"] = \"TEXT_PLAIN\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Format[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Format = ContainerRepositoryReadme.Format || (ContainerRepositoryReadme.Format = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerRepositoryReadme.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerRepositoryReadme.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerRepositoryReadme = exports.ContainerRepositoryReadme || (exports.ContainerRepositoryReadme = {}));\n//# sourceMappingURL=container-repository-readme.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerRepositorySummary = void 0;\nvar ContainerRepositorySummary;\n(function (ContainerRepositorySummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerRepositorySummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerRepositorySummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerRepositorySummary = exports.ContainerRepositorySummary || (exports.ContainerRepositorySummary = {}));\n//# sourceMappingURL=container-repository-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerRepository = void 0;\nconst model = __importStar(require(\"../model\"));\nvar ContainerRepository;\n(function (ContainerRepository) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Available\"] = \"AVAILABLE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = ContainerRepository.LifecycleState || (ContainerRepository.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme ? model.ContainerRepositoryReadme.getJsonObj(obj.readme) : undefined\n        });\n        return jsonObj;\n    }\n    ContainerRepository.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme\n                ? model.ContainerRepositoryReadme.getDeserializedJsonObj(obj.readme)\n                : undefined\n        });\n        return jsonObj;\n    }\n    ContainerRepository.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerRepository = exports.ContainerRepository || (exports.ContainerRepository = {}));\n//# sourceMappingURL=container-repository.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContainerVersion = void 0;\nvar ContainerVersion;\n(function (ContainerVersion) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerVersion.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ContainerVersion.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ContainerVersion = exports.ContainerVersion || (exports.ContainerVersion = {}));\n//# sourceMappingURL=container-version.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateContainerImageSignatureDetails = void 0;\nvar CreateContainerImageSignatureDetails;\n(function (CreateContainerImageSignatureDetails) {\n    let SigningAlgorithm;\n    (function (SigningAlgorithm) {\n        SigningAlgorithm[\"Sha224RsaPkcsPss\"] = \"SHA_224_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha256RsaPkcsPss\"] = \"SHA_256_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha384RsaPkcsPss\"] = \"SHA_384_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha512RsaPkcsPss\"] = \"SHA_512_RSA_PKCS_PSS\";\n    })(SigningAlgorithm = CreateContainerImageSignatureDetails.SigningAlgorithm || (CreateContainerImageSignatureDetails.SigningAlgorithm = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateContainerImageSignatureDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateContainerImageSignatureDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateContainerImageSignatureDetails = exports.CreateContainerImageSignatureDetails || (exports.CreateContainerImageSignatureDetails = {}));\n//# sourceMappingURL=create-container-image-signature-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateContainerRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateContainerRepositoryDetails;\n(function (CreateContainerRepositoryDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme ? model.ContainerRepositoryReadme.getJsonObj(obj.readme) : undefined\n        });\n        return jsonObj;\n    }\n    CreateContainerRepositoryDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme\n                ? model.ContainerRepositoryReadme.getDeserializedJsonObj(obj.readme)\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateContainerRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateContainerRepositoryDetails = exports.CreateContainerRepositoryDetails || (exports.CreateContainerRepositoryDetails = {}));\n//# sourceMappingURL=create-container-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateGenericRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateGenericRepositoryDetails;\n(function (CreateGenericRepositoryDetails) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.CreateRepositoryDetails.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    CreateGenericRepositoryDetails.getJsonObj = getJsonObj;\n    CreateGenericRepositoryDetails.repositoryType = \"GENERIC\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.CreateRepositoryDetails.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    CreateGenericRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateGenericRepositoryDetails = exports.CreateGenericRepositoryDetails || (exports.CreateGenericRepositoryDetails = {}));\n//# sourceMappingURL=create-generic-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateRepositoryDetails;\n(function (CreateRepositoryDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.CreateGenericRepositoryDetails.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    CreateRepositoryDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.CreateGenericRepositoryDetails.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    CreateRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateRepositoryDetails = exports.CreateRepositoryDetails || (exports.CreateRepositoryDetails = {}));\n//# sourceMappingURL=create-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericArtifactCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar GenericArtifactCollection;\n(function (GenericArtifactCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.GenericArtifactSummary.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    GenericArtifactCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.GenericArtifactSummary.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    GenericArtifactCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(GenericArtifactCollection = exports.GenericArtifactCollection || (exports.GenericArtifactCollection = {}));\n//# sourceMappingURL=generic-artifact-collection.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericArtifactSummary = void 0;\nvar GenericArtifactSummary;\n(function (GenericArtifactSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    GenericArtifactSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    GenericArtifactSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(GenericArtifactSummary = exports.GenericArtifactSummary || (exports.GenericArtifactSummary = {}));\n//# sourceMappingURL=generic-artifact-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericArtifact = void 0;\nvar GenericArtifact;\n(function (GenericArtifact) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Available\"] = \"AVAILABLE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = GenericArtifact.LifecycleState || (GenericArtifact.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    GenericArtifact.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    GenericArtifact.getDeserializedJsonObj = getDeserializedJsonObj;\n})(GenericArtifact = exports.GenericArtifact || (exports.GenericArtifact = {}));\n//# sourceMappingURL=generic-artifact.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericRepositorySummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar GenericRepositorySummary;\n(function (GenericRepositorySummary) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.RepositorySummary.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    GenericRepositorySummary.getJsonObj = getJsonObj;\n    GenericRepositorySummary.repositoryType = \"GENERIC\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.RepositorySummary.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    GenericRepositorySummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(GenericRepositorySummary = exports.GenericRepositorySummary || (exports.GenericRepositorySummary = {}));\n//# sourceMappingURL=generic-repository-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericRepository = void 0;\nconst model = __importStar(require(\"../model\"));\nvar GenericRepository;\n(function (GenericRepository) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj ? obj : model.Repository.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    GenericRepository.getJsonObj = getJsonObj;\n    GenericRepository.repositoryType = \"GENERIC\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.Repository.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    GenericRepository.getDeserializedJsonObj = getDeserializedJsonObj;\n})(GenericRepository = exports.GenericRepository || (exports.GenericRepository = {}));\n//# sourceMappingURL=generic-repository.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGenericRepositoryDetails = exports.GenericRepositorySummary = exports.GenericRepository = exports.CreateGenericRepositoryDetails = exports.UpdateRepositoryDetails = exports.UpdateGenericArtifactDetails = exports.UpdateGenericArtifactByPathDetails = exports.UpdateContainerRepositoryDetails = exports.UpdateContainerConfigurationDetails = exports.RestoreContainerImageDetails = exports.RepositorySummary = exports.RepositoryCollection = exports.Repository = exports.RemoveContainerVersionDetails = exports.GenericArtifactSummary = exports.GenericArtifactCollection = exports.GenericArtifact = exports.CreateRepositoryDetails = exports.CreateContainerRepositoryDetails = exports.CreateContainerImageSignatureDetails = exports.ContainerVersion = exports.ContainerRepositorySummary = exports.ContainerRepositoryReadme = exports.ContainerRepositoryCollection = exports.ContainerRepository = exports.ContainerImageSummary = exports.ContainerImageSignatureSummary = exports.ContainerImageSignatureCollection = exports.ContainerImageSignature = exports.ContainerImageLayer = exports.ContainerImageCollection = exports.ContainerImage = exports.ContainerConfiguration = exports.ChangeRepositoryCompartmentDetails = exports.ChangeContainerRepositoryCompartmentDetails = void 0;\nconst ChangeContainerRepositoryCompartmentDetails = __importStar(require(\"./change-container-repository-compartment-details\"));\nexports.ChangeContainerRepositoryCompartmentDetails = ChangeContainerRepositoryCompartmentDetails.ChangeContainerRepositoryCompartmentDetails;\nconst ChangeRepositoryCompartmentDetails = __importStar(require(\"./change-repository-compartment-details\"));\nexports.ChangeRepositoryCompartmentDetails = ChangeRepositoryCompartmentDetails.ChangeRepositoryCompartmentDetails;\nconst ContainerConfiguration = __importStar(require(\"./container-configuration\"));\nexports.ContainerConfiguration = ContainerConfiguration.ContainerConfiguration;\nconst ContainerImage = __importStar(require(\"./container-image\"));\nexports.ContainerImage = ContainerImage.ContainerImage;\nconst ContainerImageCollection = __importStar(require(\"./container-image-collection\"));\nexports.ContainerImageCollection = ContainerImageCollection.ContainerImageCollection;\nconst ContainerImageLayer = __importStar(require(\"./container-image-layer\"));\nexports.ContainerImageLayer = ContainerImageLayer.ContainerImageLayer;\nconst ContainerImageSignature = __importStar(require(\"./container-image-signature\"));\nexports.ContainerImageSignature = ContainerImageSignature.ContainerImageSignature;\nconst ContainerImageSignatureCollection = __importStar(require(\"./container-image-signature-collection\"));\nexports.ContainerImageSignatureCollection = ContainerImageSignatureCollection.ContainerImageSignatureCollection;\nconst ContainerImageSignatureSummary = __importStar(require(\"./container-image-signature-summary\"));\nexports.ContainerImageSignatureSummary = ContainerImageSignatureSummary.ContainerImageSignatureSummary;\nconst ContainerImageSummary = __importStar(require(\"./container-image-summary\"));\nexports.ContainerImageSummary = ContainerImageSummary.ContainerImageSummary;\nconst ContainerRepository = __importStar(require(\"./container-repository\"));\nexports.ContainerRepository = ContainerRepository.ContainerRepository;\nconst ContainerRepositoryCollection = __importStar(require(\"./container-repository-collection\"));\nexports.ContainerRepositoryCollection = ContainerRepositoryCollection.ContainerRepositoryCollection;\nconst ContainerRepositoryReadme = __importStar(require(\"./container-repository-readme\"));\nexports.ContainerRepositoryReadme = ContainerRepositoryReadme.ContainerRepositoryReadme;\nconst ContainerRepositorySummary = __importStar(require(\"./container-repository-summary\"));\nexports.ContainerRepositorySummary = ContainerRepositorySummary.ContainerRepositorySummary;\nconst ContainerVersion = __importStar(require(\"./container-version\"));\nexports.ContainerVersion = ContainerVersion.ContainerVersion;\nconst CreateContainerImageSignatureDetails = __importStar(require(\"./create-container-image-signature-details\"));\nexports.CreateContainerImageSignatureDetails = CreateContainerImageSignatureDetails.CreateContainerImageSignatureDetails;\nconst CreateContainerRepositoryDetails = __importStar(require(\"./create-container-repository-details\"));\nexports.CreateContainerRepositoryDetails = CreateContainerRepositoryDetails.CreateContainerRepositoryDetails;\nconst CreateRepositoryDetails = __importStar(require(\"./create-repository-details\"));\nexports.CreateRepositoryDetails = CreateRepositoryDetails.CreateRepositoryDetails;\nconst GenericArtifact = __importStar(require(\"./generic-artifact\"));\nexports.GenericArtifact = GenericArtifact.GenericArtifact;\nconst GenericArtifactCollection = __importStar(require(\"./generic-artifact-collection\"));\nexports.GenericArtifactCollection = GenericArtifactCollection.GenericArtifactCollection;\nconst GenericArtifactSummary = __importStar(require(\"./generic-artifact-summary\"));\nexports.GenericArtifactSummary = GenericArtifactSummary.GenericArtifactSummary;\nconst RemoveContainerVersionDetails = __importStar(require(\"./remove-container-version-details\"));\nexports.RemoveContainerVersionDetails = RemoveContainerVersionDetails.RemoveContainerVersionDetails;\nconst Repository = __importStar(require(\"./repository\"));\nexports.Repository = Repository.Repository;\nconst RepositoryCollection = __importStar(require(\"./repository-collection\"));\nexports.RepositoryCollection = RepositoryCollection.RepositoryCollection;\nconst RepositorySummary = __importStar(require(\"./repository-summary\"));\nexports.RepositorySummary = RepositorySummary.RepositorySummary;\nconst RestoreContainerImageDetails = __importStar(require(\"./restore-container-image-details\"));\nexports.RestoreContainerImageDetails = RestoreContainerImageDetails.RestoreContainerImageDetails;\nconst UpdateContainerConfigurationDetails = __importStar(require(\"./update-container-configuration-details\"));\nexports.UpdateContainerConfigurationDetails = UpdateContainerConfigurationDetails.UpdateContainerConfigurationDetails;\nconst UpdateContainerRepositoryDetails = __importStar(require(\"./update-container-repository-details\"));\nexports.UpdateContainerRepositoryDetails = UpdateContainerRepositoryDetails.UpdateContainerRepositoryDetails;\nconst UpdateGenericArtifactByPathDetails = __importStar(require(\"./update-generic-artifact-by-path-details\"));\nexports.UpdateGenericArtifactByPathDetails = UpdateGenericArtifactByPathDetails.UpdateGenericArtifactByPathDetails;\nconst UpdateGenericArtifactDetails = __importStar(require(\"./update-generic-artifact-details\"));\nexports.UpdateGenericArtifactDetails = UpdateGenericArtifactDetails.UpdateGenericArtifactDetails;\nconst UpdateRepositoryDetails = __importStar(require(\"./update-repository-details\"));\nexports.UpdateRepositoryDetails = UpdateRepositoryDetails.UpdateRepositoryDetails;\nconst CreateGenericRepositoryDetails = __importStar(require(\"./create-generic-repository-details\"));\nexports.CreateGenericRepositoryDetails = CreateGenericRepositoryDetails.CreateGenericRepositoryDetails;\nconst GenericRepository = __importStar(require(\"./generic-repository\"));\nexports.GenericRepository = GenericRepository.GenericRepository;\nconst GenericRepositorySummary = __importStar(require(\"./generic-repository-summary\"));\nexports.GenericRepositorySummary = GenericRepositorySummary.GenericRepositorySummary;\nconst UpdateGenericRepositoryDetails = __importStar(require(\"./update-generic-repository-details\"));\nexports.UpdateGenericRepositoryDetails = UpdateGenericRepositoryDetails.UpdateGenericRepositoryDetails;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoveContainerVersionDetails = void 0;\nvar RemoveContainerVersionDetails;\n(function (RemoveContainerVersionDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RemoveContainerVersionDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RemoveContainerVersionDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(RemoveContainerVersionDetails = exports.RemoveContainerVersionDetails || (exports.RemoveContainerVersionDetails = {}));\n//# sourceMappingURL=remove-container-version-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepositoryCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar RepositoryCollection;\n(function (RepositoryCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.RepositorySummary.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    RepositoryCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.RepositorySummary.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    RepositoryCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(RepositoryCollection = exports.RepositoryCollection || (exports.RepositoryCollection = {}));\n//# sourceMappingURL=repository-collection.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RepositorySummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar RepositorySummary;\n(function (RepositorySummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.GenericRepositorySummary.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    RepositorySummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.GenericRepositorySummary.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    RepositorySummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(RepositorySummary = exports.RepositorySummary || (exports.RepositorySummary = {}));\n//# sourceMappingURL=repository-summary.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repository = void 0;\nconst model = __importStar(require(\"../model\"));\nvar Repository;\n(function (Repository) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Available\"] = \"AVAILABLE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = Repository.LifecycleState || (Repository.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.GenericRepository.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    Repository.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.GenericRepository.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    Repository.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Repository = exports.Repository || (exports.Repository = {}));\n//# sourceMappingURL=repository.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RestoreContainerImageDetails = void 0;\nvar RestoreContainerImageDetails;\n(function (RestoreContainerImageDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RestoreContainerImageDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RestoreContainerImageDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(RestoreContainerImageDetails = exports.RestoreContainerImageDetails || (exports.RestoreContainerImageDetails = {}));\n//# sourceMappingURL=restore-container-image-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateContainerConfigurationDetails = void 0;\nvar UpdateContainerConfigurationDetails;\n(function (UpdateContainerConfigurationDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateContainerConfigurationDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateContainerConfigurationDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateContainerConfigurationDetails = exports.UpdateContainerConfigurationDetails || (exports.UpdateContainerConfigurationDetails = {}));\n//# sourceMappingURL=update-container-configuration-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateContainerRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateContainerRepositoryDetails;\n(function (UpdateContainerRepositoryDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme ? model.ContainerRepositoryReadme.getJsonObj(obj.readme) : undefined\n        });\n        return jsonObj;\n    }\n    UpdateContainerRepositoryDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"readme\": obj.readme\n                ? model.ContainerRepositoryReadme.getDeserializedJsonObj(obj.readme)\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateContainerRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateContainerRepositoryDetails = exports.UpdateContainerRepositoryDetails || (exports.UpdateContainerRepositoryDetails = {}));\n//# sourceMappingURL=update-container-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGenericArtifactByPathDetails = void 0;\nvar UpdateGenericArtifactByPathDetails;\n(function (UpdateGenericArtifactByPathDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGenericArtifactByPathDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGenericArtifactByPathDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateGenericArtifactByPathDetails = exports.UpdateGenericArtifactByPathDetails || (exports.UpdateGenericArtifactByPathDetails = {}));\n//# sourceMappingURL=update-generic-artifact-by-path-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGenericArtifactDetails = void 0;\nvar UpdateGenericArtifactDetails;\n(function (UpdateGenericArtifactDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGenericArtifactDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGenericArtifactDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateGenericArtifactDetails = exports.UpdateGenericArtifactDetails || (exports.UpdateGenericArtifactDetails = {}));\n//# sourceMappingURL=update-generic-artifact-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGenericRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateGenericRepositoryDetails;\n(function (UpdateGenericRepositoryDetails) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.UpdateRepositoryDetails.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    UpdateGenericRepositoryDetails.getJsonObj = getJsonObj;\n    UpdateGenericRepositoryDetails.repositoryType = \"GENERIC\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.UpdateRepositoryDetails.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    UpdateGenericRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateGenericRepositoryDetails = exports.UpdateGenericRepositoryDetails || (exports.UpdateGenericRepositoryDetails = {}));\n//# sourceMappingURL=update-generic-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateRepositoryDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateRepositoryDetails;\n(function (UpdateRepositoryDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.UpdateGenericRepositoryDetails.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    UpdateRepositoryDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"repositoryType\" in obj && obj.repositoryType) {\n            switch (obj.repositoryType) {\n                case \"GENERIC\":\n                    return model.UpdateGenericRepositoryDetails.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.repositoryType);\n            }\n        }\n        return jsonObj;\n    }\n    UpdateRepositoryDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateRepositoryDetails = exports.UpdateRepositoryDetails || (exports.UpdateRepositoryDetails = {}));\n//# sourceMappingURL=update-repository-details.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListRepositoriesRequest = exports.ListGenericArtifactsRequest = exports.ListContainerRepositoriesRequest = exports.ListContainerImagesRequest = exports.ListContainerImageSignaturesRequest = void 0;\nconst ListContainerImageSignaturesRequest = __importStar(require(\"./list-container-image-signatures-request\"));\nexports.ListContainerImageSignaturesRequest = ListContainerImageSignaturesRequest.ListContainerImageSignaturesRequest;\nconst ListContainerImagesRequest = __importStar(require(\"./list-container-images-request\"));\nexports.ListContainerImagesRequest = ListContainerImagesRequest.ListContainerImagesRequest;\nconst ListContainerRepositoriesRequest = __importStar(require(\"./list-container-repositories-request\"));\nexports.ListContainerRepositoriesRequest = ListContainerRepositoriesRequest.ListContainerRepositoriesRequest;\nconst ListGenericArtifactsRequest = __importStar(require(\"./list-generic-artifacts-request\"));\nexports.ListGenericArtifactsRequest = ListGenericArtifactsRequest.ListGenericArtifactsRequest;\nconst ListRepositoriesRequest = __importStar(require(\"./list-repositories-request\"));\nexports.ListRepositoriesRequest = ListRepositoriesRequest.ListRepositoriesRequest;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListContainerImageSignaturesRequest = void 0;\nvar ListContainerImageSignaturesRequest;\n(function (ListContainerImageSignaturesRequest) {\n    let SigningAlgorithm;\n    (function (SigningAlgorithm) {\n        SigningAlgorithm[\"Sha224RsaPkcsPss\"] = \"SHA_224_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha256RsaPkcsPss\"] = \"SHA_256_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha384RsaPkcsPss\"] = \"SHA_384_RSA_PKCS_PSS\";\n        SigningAlgorithm[\"Sha512RsaPkcsPss\"] = \"SHA_512_RSA_PKCS_PSS\";\n    })(SigningAlgorithm = ListContainerImageSignaturesRequest.SigningAlgorithm || (ListContainerImageSignaturesRequest.SigningAlgorithm = {}));\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Displayname\"] = \"DISPLAYNAME\";\n    })(SortBy = ListContainerImageSignaturesRequest.SortBy || (ListContainerImageSignaturesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListContainerImageSignaturesRequest.SortOrder || (ListContainerImageSignaturesRequest.SortOrder = {}));\n})(ListContainerImageSignaturesRequest = exports.ListContainerImageSignaturesRequest || (exports.ListContainerImageSignaturesRequest = {}));\n//# sourceMappingURL=list-container-image-signatures-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListContainerImagesRequest = void 0;\nvar ListContainerImagesRequest;\n(function (ListContainerImagesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Displayname\"] = \"DISPLAYNAME\";\n    })(SortBy = ListContainerImagesRequest.SortBy || (ListContainerImagesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListContainerImagesRequest.SortOrder || (ListContainerImagesRequest.SortOrder = {}));\n})(ListContainerImagesRequest = exports.ListContainerImagesRequest || (exports.ListContainerImagesRequest = {}));\n//# sourceMappingURL=list-container-images-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListContainerRepositoriesRequest = void 0;\nvar ListContainerRepositoriesRequest;\n(function (ListContainerRepositoriesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Displayname\"] = \"DISPLAYNAME\";\n    })(SortBy = ListContainerRepositoriesRequest.SortBy || (ListContainerRepositoriesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListContainerRepositoriesRequest.SortOrder || (ListContainerRepositoriesRequest.SortOrder = {}));\n})(ListContainerRepositoriesRequest = exports.ListContainerRepositoriesRequest || (exports.ListContainerRepositoriesRequest = {}));\n//# sourceMappingURL=list-container-repositories-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListGenericArtifactsRequest = void 0;\nvar ListGenericArtifactsRequest;\n(function (ListGenericArtifactsRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Displayname\"] = \"DISPLAYNAME\";\n    })(SortBy = ListGenericArtifactsRequest.SortBy || (ListGenericArtifactsRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListGenericArtifactsRequest.SortOrder || (ListGenericArtifactsRequest.SortOrder = {}));\n})(ListGenericArtifactsRequest = exports.ListGenericArtifactsRequest || (exports.ListGenericArtifactsRequest = {}));\n//# sourceMappingURL=list-generic-artifacts-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListRepositoriesRequest = void 0;\nvar ListRepositoriesRequest;\n(function (ListRepositoriesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Displayname\"] = \"DISPLAYNAME\";\n    })(SortBy = ListRepositoriesRequest.SortBy || (ListRepositoriesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListRepositoriesRequest.SortOrder || (ListRepositoriesRequest.SortOrder = {}));\n})(ListRepositoriesRequest = exports.ListRepositoriesRequest || (exports.ListRepositoriesRequest = {}));\n//# sourceMappingURL=list-repositories-request.js.map","\"use strict\";\n/**\n * Container Images API\n * API covering the [Registry](/iaas/Content/Registry/Concepts/registryoverview.htm) services.\nUse this API to manage resources such as container images and repositories.\n\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.getChunk = exports.CircuitBreaker = exports.Constants = exports.NoRetryConfigurationDetails = exports.MaxAttemptsTerminationStrategy = exports.FixedTimeDelayStrategy = exports.GenericRetrier = exports.LOG = exports.ResourcePrincipalAuthenticationDetailsProvider = exports.InstancePrincipalsAuthenticationDetailsProviderBuilder = exports.ConfigFileReader = exports.ConfigFileAuthenticationDetailsProvider = exports.composeResponse = exports.composeRequest = exports.genericPaginateResponses = exports.paginateResponses = exports.genericPaginateRecords = exports.paginatedRecordsWithLimit = exports.paginatedResponsesWithLimit = exports.paginateRecords = exports.genericTerminalConditionWaiter = exports.genericWaiter = exports.MaxTimeTerminationStrategy = exports.ExponentialBackoffDelayStrategy = exports.EndpointBuilder = exports.Realm = exports.Region = exports.Range = exports.byteLength = exports.ObjectSerializer = exports.convertStringToType = exports.handleErrorBody = exports.mapContainer = exports.handleErrorResponse = exports.getStringFromResponseBody = exports.DefaultRequestSigner = exports.OciError = exports.FetchHttpClient = exports.isRegionProvider = exports.SimpleAuthenticationDetailsProvider = void 0;\nconst auth = __importStar(require(\"./lib/auth/auth\"));\nconst error = __importStar(require(\"./lib/error\"));\nconst signer = __importStar(require(\"./lib/signer\"));\nconst helper = __importStar(require(\"./lib/helper\"));\nconst http = __importStar(require(\"./lib/http\"));\nconst serializer = __importStar(require(\"./lib/object-serializer\"));\nconst range = __importStar(require(\"./lib/range\"));\nconst utils = __importStar(require(\"./lib/utils\"));\nexports.utils = utils;\nconst region_1 = require(\"./lib/region\");\nObject.defineProperty(exports, \"Region\", { enumerable: true, get: function () { return region_1.Region; } });\nconst realm_1 = require(\"./lib/realm\");\nObject.defineProperty(exports, \"Realm\", { enumerable: true, get: function () { return realm_1.Realm; } });\nconst endpoint_builder_1 = require(\"./lib/endpoint-builder\");\nObject.defineProperty(exports, \"EndpointBuilder\", { enumerable: true, get: function () { return endpoint_builder_1.EndpointBuilder; } });\nconst log_1 = require(\"./lib/log\");\nObject.defineProperty(exports, \"LOG\", { enumerable: true, get: function () { return log_1.LOG; } });\nconst constants_1 = __importDefault(require(\"./lib/constants\"));\nexports.Constants = constants_1.default;\nconst circuit_breaker_1 = __importDefault(require(\"./lib/circuit-breaker\"));\nexports.CircuitBreaker = circuit_breaker_1.default;\nconst waiter_1 = require(\"./lib/waiter\");\nObject.defineProperty(exports, \"ExponentialBackoffDelayStrategy\", { enumerable: true, get: function () { return waiter_1.ExponentialBackoffDelayStrategy; } });\nObject.defineProperty(exports, \"MaxTimeTerminationStrategy\", { enumerable: true, get: function () { return waiter_1.MaxTimeTerminationStrategy; } });\nObject.defineProperty(exports, \"genericWaiter\", { enumerable: true, get: function () { return waiter_1.genericWaiter; } });\nObject.defineProperty(exports, \"genericTerminalConditionWaiter\", { enumerable: true, get: function () { return waiter_1.genericTerminalConditionWaiter; } });\nObject.defineProperty(exports, \"MaxAttemptsTerminationStrategy\", { enumerable: true, get: function () { return waiter_1.MaxAttemptsTerminationStrategy; } });\nObject.defineProperty(exports, \"FixedTimeDelayStrategy\", { enumerable: true, get: function () { return waiter_1.FixedTimeDelayStrategy; } });\nconst retrier_1 = require(\"./lib/retrier\");\nObject.defineProperty(exports, \"GenericRetrier\", { enumerable: true, get: function () { return retrier_1.GenericRetrier; } });\nObject.defineProperty(exports, \"NoRetryConfigurationDetails\", { enumerable: true, get: function () { return retrier_1.NoRetryConfigurationDetails; } });\nconst instance_principals_authentication_detail_provider_1 = __importDefault(require(\"./lib/auth/instance-principals-authentication-detail-provider\"));\nexports.InstancePrincipalsAuthenticationDetailsProviderBuilder = instance_principals_authentication_detail_provider_1.default;\nconst resource_principal_authentication_details_provider_1 = __importDefault(require(\"./lib/auth/resource-principal-authentication-details-provider\"));\nexports.ResourcePrincipalAuthenticationDetailsProvider = resource_principal_authentication_details_provider_1.default;\nconst paginators_1 = require(\"./lib/paginators\");\nObject.defineProperty(exports, \"paginateRecords\", { enumerable: true, get: function () { return paginators_1.paginateRecords; } });\nObject.defineProperty(exports, \"genericPaginateRecords\", { enumerable: true, get: function () { return paginators_1.genericPaginateRecords; } });\nObject.defineProperty(exports, \"paginatedRecordsWithLimit\", { enumerable: true, get: function () { return paginators_1.paginatedRecordsWithLimit; } });\nObject.defineProperty(exports, \"paginateResponses\", { enumerable: true, get: function () { return paginators_1.paginateResponses; } });\nObject.defineProperty(exports, \"genericPaginateResponses\", { enumerable: true, get: function () { return paginators_1.genericPaginateResponses; } });\nObject.defineProperty(exports, \"paginatedResponsesWithLimit\", { enumerable: true, get: function () { return paginators_1.paginatedResponsesWithLimit; } });\nconst config_file_auth_1 = require(\"./lib/auth/config-file-auth\");\nObject.defineProperty(exports, \"ConfigFileAuthenticationDetailsProvider\", { enumerable: true, get: function () { return config_file_auth_1.ConfigFileAuthenticationDetailsProvider; } });\nconst chunker_1 = __importDefault(require(\"./lib/chunker\"));\nexports.getChunk = chunker_1.default;\nconst config_file_reader_1 = require(\"./lib/config-file-reader\");\nObject.defineProperty(exports, \"ConfigFileReader\", { enumerable: true, get: function () { return config_file_reader_1.ConfigFileReader; } });\nconst request_generator_1 = require(\"./lib/request-generator\");\nObject.defineProperty(exports, \"composeRequest\", { enumerable: true, get: function () { return request_generator_1.composeRequest; } });\nconst response_generator_1 = require(\"./lib/response-generator\");\nObject.defineProperty(exports, \"composeResponse\", { enumerable: true, get: function () { return response_generator_1.composeResponse; } });\nexports.SimpleAuthenticationDetailsProvider = auth.SimpleAuthenticationDetailsProvider;\nexports.isRegionProvider = auth.isRegionProvider;\nexports.FetchHttpClient = http.FetchHttpClient;\nexports.OciError = error.OciError;\nexports.DefaultRequestSigner = signer.DefaultRequestSigner;\nexports.getStringFromResponseBody = helper.getStringFromResponseBody;\nexports.handleErrorResponse = helper.handleErrorResponse;\nexports.mapContainer = helper.mapContainer;\nexports.handleErrorBody = helper.handleErrorBody;\nexports.convertStringToType = helper.convertStringToType;\nexports.ObjectSerializer = serializer.ObjectSerializer;\nexports.byteLength = helper.byteLength;\nexports.Range = range.Range;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UrlParser = require(\"url\");\nconst httpSignature = require(\"http-signature\");\nconst jssha = require(\"jssha\");\nconst security_token_adapter_1 = __importDefault(require(\"./security-token-adapter\"));\nconst auth_utils_1 = __importDefault(require(\"./helpers/auth-utils\"));\nconst signer_1 = require(\"../signer\");\nconst http_1 = require(\"../http\");\nconst helper_1 = require(\"../helper\");\nconst circuit_breaker_1 = __importDefault(require(\"../circuit-breaker\"));\n/**\n * This class gets a security token from the auth service by signing the request with a PKI issued leaf certificate,\n * passing along a temporary public key that is bounded to the the security token, and the leaf certificate.\n */\nclass X509FederationClient {\n    constructor(federationEndpoint, _tenancyId, _leafCertificateSupplier, sessionKeySupplier, intermediateCertificateSuppliers, purpose) {\n        this.federationEndpoint = federationEndpoint;\n        this._tenancyId = _tenancyId;\n        this._leafCertificateSupplier = _leafCertificateSupplier;\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.intermediateCertificateSuppliers = intermediateCertificateSuppliers;\n        this.purpose = purpose;\n        this.retry = 0;\n        this.securityTokenAdapter = new security_token_adapter_1.default(\"\", this.sessionKeySupplier);\n    }\n    // Getter for tenancyId\n    get tenancyId() {\n        return this._tenancyId;\n    }\n    // Getter for leafCerificateSupplier\n    get leafCertificateSupplier() {\n        return this._leafCertificateSupplier;\n    }\n    /**\n     * Gets a security token. If there is already a valid token cached, it will be returned. Else this will make a call\n     * to the auth service to get a new token, using the provided suppliers.\n     *\n     * This method is thread-safe.\n     * @return the security token\n     * @throws OciError If there is any issue with getting a token from the auth server\n     */\n    getSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.securityTokenAdapter.isValid()) {\n                return this.securityTokenAdapter.getSecurityToken();\n            }\n            return yield this.refreshAndGetSecurityTokenInner(true);\n        });\n    }\n    /**\n     * Return a claim embedded in the security token\n     * @param key the name of the claim\n     * @return the value of the claim or null if unable to find\n     */\n    getStringClaim(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshAndGetSecurityTokenInner(true);\n            return this.securityTokenAdapter.getStringClaim(key);\n        });\n    }\n    refreshAndGetSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.refreshAndGetSecurityTokenInner(false);\n        });\n    }\n    refreshAndGetSecurityTokenInner(doFinalTokenValidityCheck) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Check again to see if the JWT is still invalid, unless we want to skip that check\n            if (!doFinalTokenValidityCheck || !this.securityTokenAdapter.isValid()) {\n                this.sessionKeySupplier.refreshKeys();\n                // Check if leafCertificateSupplier contains a .refresh() method. If so, call refresh()\n                if (this._leafCertificateSupplier && this._leafCertificateSupplier.refresh) {\n                    try {\n                        this._leafCertificateSupplier = yield this._leafCertificateSupplier.refresh();\n                    }\n                    catch (e) {\n                        throw Error(`Fail to refresh leafCertificateSupplier, error: ${e}`);\n                    }\n                    // When using default purpose (ex, instance principals), the token request should always be signed with the same tenant id as the certificate.\n                    // For other purposes, the tenant id can be different.\n                    if (this.purpose === \"DEFAULT\") {\n                        const newTenancyId = auth_utils_1.default.getTenantIdFromCertificate(this._leafCertificateSupplier.getCertificateAndKeyPair().getCertificate());\n                        if (this.tenancyId != newTenancyId) {\n                            throw Error(\"The tenancy id should never be changed in cert file!\");\n                        }\n                    }\n                }\n                // Loop through each intermediateCertificateSuppliers and refresh them if possible\n                for (let i = 0; i < this.intermediateCertificateSuppliers.length; i++) {\n                    try {\n                        if (this.intermediateCertificateSuppliers[i].refresh) {\n                            this.intermediateCertificateSuppliers[i] = yield this.intermediateCertificateSuppliers[i].refresh();\n                        }\n                    }\n                    catch (e) {\n                        throw Error(\"Cannot refresh the intermediate certification\");\n                    }\n                }\n                this.securityTokenAdapter = yield this.getSecurityTokenFromServer();\n                return this.securityTokenAdapter.getSecurityToken();\n            }\n            return this.securityTokenAdapter.getSecurityToken();\n        });\n    }\n    /**\n     * Gets a security token from the federation server\n     * @return the security token, which is basically a JWT token string\n     */\n    getSecurityTokenFromServer() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = this.sessionKeySupplier.getKeyPair();\n            if (!keyPair) {\n                throw Error(\"keyPair for session was not provided\");\n            }\n            const publicKey = keyPair.getPublic();\n            if (!publicKey) {\n                throw Error(\"Public key is not present\");\n            }\n            const certificateAndKeyPair = this.leafCertificateSupplier.getCertificateAndKeyPair();\n            if (!certificateAndKeyPair) {\n                throw Error(\"Certificate and key pair are not present\");\n            }\n            const leafCertificate = certificateAndKeyPair.getCertificate();\n            if (!leafCertificate) {\n                throw Error(\"Leaf certificate is not present\");\n            }\n            if (!certificateAndKeyPair.getPrivateKey()) {\n                throw Error(\"Leaf certificate's private key is not present\");\n            }\n            try {\n                let intermediateStrings = [];\n                if (this.intermediateCertificateSuppliers &&\n                    this.intermediateCertificateSuppliers.length > 0) {\n                    this.intermediateCertificateSuppliers.forEach((supplier) => {\n                        const supplierCertificateAndKeyPair = supplier.getCertificateAndKeyPair();\n                        if (supplierCertificateAndKeyPair && supplierCertificateAndKeyPair.getCertificate()) {\n                            intermediateStrings.push(auth_utils_1.default.sanitizeCertificateString(supplierCertificateAndKeyPair.getCertificate().toString(\"pem\")));\n                        }\n                    });\n                }\n                // Create request body and call auth service.\n                const url = this.federationEndpoint + \"/v1/x509\";\n                const requestPayload = {\n                    certificate: auth_utils_1.default.sanitizeCertificateString(leafCertificate.toString(\"pem\")),\n                    purpose: this.purpose,\n                    publicKey: auth_utils_1.default.sanitizeCertificateString(publicKey),\n                    intermediateCertificates: intermediateStrings\n                };\n                let jsonPayload = JSON.stringify(requestPayload);\n                jsonPayload = jsonPayload.replace(/\\\\n/g, \"\");\n                const requestObj = {\n                    uri: url,\n                    body: jsonPayload,\n                    method: \"POST\",\n                    headers: new Headers()\n                };\n                const fingerprint = leafCertificate.fingerprint(\"sha1\").toString(\"hex\");\n                const privateKey = certificateAndKeyPair.getPrivateKey();\n                // Instantiate AuthTokenRequestSigner to sign the request\n                const signer = new AuthTokenRequestSigner(this.tenancyId, fingerprint, privateKey);\n                const httpClient = new http_1.FetchHttpClient(signer, circuit_breaker_1.default.internalCircuit);\n                // Call Auth Service to get a JSON object which contains the auth token\n                const response = yield httpClient.send(requestObj);\n                //TODO: Implement retry here\n                // retry here\n                if (response.status !== 200) {\n                    if (this.retry < 3) {\n                        this.retry += 1;\n                        return yield this.getSecurityTokenFromServer();\n                    }\n                    else {\n                        throw Error(`Failed to call auth service for token, error: ${response}`);\n                    }\n                }\n                this.retry = 0;\n                const securityToken = yield response.json();\n                return new security_token_adapter_1.default(securityToken.token, this.sessionKeySupplier);\n            }\n            catch (e) {\n                throw Error(`Failed to call call Auth service, error: ${e}`);\n            }\n        });\n    }\n}\nexports.default = X509FederationClient;\n// A Signer class for FederationClient\nclass AuthTokenRequestSigner {\n    constructor(tenancyId, fingerprint, privateKey) {\n        this.tenancyId = tenancyId;\n        this.fingerprint = fingerprint;\n        this.privateKey = privateKey;\n    }\n    signHttpRequest(request, forceExcludeBody = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const apiKey = `${this.tenancyId}/fed-x509/${this.fingerprint}`;\n            const headersToSign = [\n                \"date\",\n                \"(request-target)\",\n                \"host\",\n                \"content-type\",\n                \"content-length\",\n                \"x-content-sha256\"\n            ];\n            const EMPTY_SHA = \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\";\n            if (!request.headers.has(\"host\")) {\n                const url = UrlParser.parse(request.uri);\n                if (url.host) {\n                    request.headers.set(\"host\", url.host);\n                }\n                else {\n                    throw new Error(\"Cannot parse host from url\");\n                }\n            }\n            if (!request.headers.has(\"x-date\")) {\n                request.headers.set(\"x-date\", new Date().toUTCString());\n            }\n            if (!request.headers.has(\"Content-Type\")) {\n                request.headers.set(\"Content-Type\", \"application/json\");\n            }\n            let contentLen = 0;\n            const shaObj = new jssha(\"SHA-256\", \"TEXT\");\n            if (request.body) {\n                const bodyStringContent = yield helper_1.getStringFromRequestBody(request.body);\n                shaObj.update(bodyStringContent);\n                request.headers.set(\"x-content-sha256\", shaObj.getHash(\"B64\"));\n                contentLen = bodyStringContent.length;\n            }\n            if (contentLen === 0) {\n                // if buffer is empty, it can only be an empty string payload\n                request.headers.set(\"x-content-sha256\", EMPTY_SHA);\n            }\n            if (!request.headers.has(\"Content-Length\")) {\n                request.headers.set(\"Content-Length\", `${contentLen}`);\n            }\n            httpSignature.sign(new signer_1.SignerRequest(request.method, request.uri, request.headers), {\n                key: this.privateKey.toBuffer(\"pem\", {}),\n                keyId: apiKey,\n                headers: headersToSign\n            });\n            const authorizationHeader = request.headers.get(\"authorization\");\n            if (authorizationHeader) {\n                request.headers.set(\"authorization\", authorizationHeader.replace(\"Signature \", 'Signature version=\"1\",'));\n            }\n            else {\n                throw new Error(\"Unable to sign request\");\n            }\n        });\n    }\n}\n//# sourceMappingURL=X509-federation-client.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Abstract builder base class for authentication details provider extending\n * @param <B> builder class\n * @param <P> provider class\n */\nconst endpoint_builder_1 = require(\"../endpoint-builder\");\nconst http_1 = require(\"../http\");\nconst region_1 = require(\"../region\");\nconst realm_1 = require(\"../realm\");\nconst auth_utils_1 = __importDefault(require(\"./helpers/auth-utils\"));\nconst X509_federation_client_1 = __importDefault(require(\"./X509-federation-client\"));\nconst session_key_supplier_1 = __importDefault(require(\"./session-key-supplier\"));\nconst url_based_x509_certificate_supplier_1 = require(\"./url-based-x509-certificate-supplier\");\nconst circuit_breaker_1 = __importDefault(require(\"../circuit-breaker\"));\nclass AbstractFederationClientAuthenticationDetailsProviderBuilder {\n    constructor() {\n        // url template for auth service.\n        this.template = \"https://auth.{region}.{secondLevelDomain}\";\n        // Default base url of metadata service.\n        this.METADATA_SERVICE_BASE_URL = \"http://169.254.169.254/opc/v2/\";\n        // The Authorization header value to be sent for requests to the metadata service.\n        this.METADATA_AUTH_HEADERS = \"Bearer Oracle\";\n        this.AUTHORIZATION = \"Authorization\";\n        // Base url of metadata service.\n        this._metadataBaseUrl = this.METADATA_SERVICE_BASE_URL;\n        // The federation endpoint url.\n        this._federationEndpoint = \"\";\n        //Tenancy OCI, or empty string if detecting from instance metadata.\n        this._tenancyId = \"\";\n        // Purpose: Specifies the non-default purpose of the session token to be requested. For internal use only.\n        this._purpose = \"DEFAULT\";\n    }\n    // metadataBaseUrl getter\n    get metadataBaseUrl() {\n        return this._metadataBaseUrl;\n    }\n    // federationEndpoint getter\n    get federationEndpoint() {\n        return this._federationEndpoint;\n    }\n    // LeafCertificateSupplier getter\n    get leafCertificateSupplier() {\n        return this._leafCertificateSupplier;\n    }\n    // tenancyId getter\n    get tenancyId() {\n        return this._tenancyId;\n    }\n    // region getter\n    getRegion() {\n        return this.region;\n    }\n    // Configure the metadata endpoint to use when retrieving the instance data and principal for federation.\n    set metadataBaseUrl(metadataBaseUrl) {\n        this._metadataBaseUrl = metadataBaseUrl;\n        if (this._metadataBaseUrl.substr(-1) != \"/\") {\n            this._metadataBaseUrl += \"/\";\n        }\n    }\n    // Configures the custom federationEndpoint to use.\n    set federationEndpoint(federationEndpoint) {\n        this._federationEndpoint = federationEndpoint;\n    }\n    // Configures the custom leafCertificateSupplier to use.\n    set leafCertificateSupplier(leafCertificateSupplier) {\n        this._leafCertificateSupplier = leafCertificateSupplier;\n    }\n    // Configure the custom tenancyId to use.\n    set tenancyId(tenancyId) {\n        this._tenancyId = tenancyId;\n    }\n    // Configure the purpose to use.\n    set purpose(purpose) {\n        this._purpose = purpose;\n    }\n    // Configures the custom sessionKeySupplier to use.\n    set sessionKeySupplier(sessionKeySupplier) {\n        this._sessionKeySupplier = sessionKeySupplier;\n    }\n    // Configures the set of intermediate certificate suppliers to use, if any.\n    set intermediateCertificateSuppliers(intermediateCertificateSuppliers) {\n        this._intermediateCertificateSuppliers = intermediateCertificateSuppliers;\n    }\n    /**\n     * Build a new AuthenticationDetailsProvider that uses the FederationClient.\n     *\n     * @return A new provider instance.\n     */\n    build() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sessionKeySupplierToUse = this._sessionKeySupplier || new session_key_supplier_1.default();\n            this._sessionKeySupplier = sessionKeySupplierToUse;\n            this._federationClient = this.createFederationClient(this._sessionKeySupplier);\n            return this.buildProvider(this._sessionKeySupplier);\n        });\n    }\n    /**\n     * Build the Federation Client\n     * @param sessionKeySupplier\n     * @return Federation Client\n     */\n    createFederationClient(sessionKeySupplier) {\n        return new X509_federation_client_1.default(this._federationEndpoint, this._tenancyId, this._leafCertificateSupplier, sessionKeySupplier, this._intermediateCertificateSuppliers, this._purpose);\n    }\n    /**\n     * Auto-detect endpoint and certificate information using Instance metadata.\n     */\n    autoDetectUsingMetadataUrl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.autoDetectEndpointUsingMetadataUrl();\n            yield this.autoDetectCertificatesUsingMetadataUrl();\n        });\n    }\n    /**\n     * Auto detects the endpoint that should be used when talking to OCI Auth, if no endpoint\n     * has been configured already.\n     * @return The auto-detected, or currently set, auth endpoint.\n     */\n    autoDetectEndpointUsingMetadataUrl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._federationEndpoint === \"\") {\n                const url = this._metadataBaseUrl + \"instance/region\";\n                let headers = new Headers();\n                headers.append(\"accept\", \"text/plain\");\n                headers.append(\"Content-Type\", \"application/json\");\n                headers.append(this.AUTHORIZATION, this.METADATA_AUTH_HEADERS);\n                const httpClient = new http_1.FetchHttpClient(null, circuit_breaker_1.default.internalCircuit);\n                const response = yield httpClient.send({\n                    uri: url,\n                    method: \"GET\",\n                    headers: headers\n                });\n                // regionStr can be a shortCode or regionId\n                const regionStr = yield response.text();\n                const regionId = region_1.Region.getRegionIdFromShortCode(regionStr);\n                try {\n                    // Try to get region off regionId\n                    this.region = region_1.Region.fromRegionId(regionId);\n                }\n                catch (e) {\n                    console.log(`\n          failed reason: ${e},\n          Region not supported by this version of the SDK, registering region ${regionId} under OC1\n        `);\n                    this.region = region_1.Region.register(regionId, realm_1.Realm.OC1);\n                }\n                try {\n                    const endpoint = endpoint_builder_1.EndpointBuilder.createEndpointFromRegion(this.template, this.region //TODO: Find out why there is a type mismatch\n                    );\n                    this._federationEndpoint = endpoint;\n                }\n                catch (e) {\n                    throw Error(`Endpoint for auth service is not known in region ${this.region}`);\n                }\n            }\n            return this._federationEndpoint;\n        });\n    }\n    /**\n     * Auto detects and configures the certificates needed using Instance metadata.\n     *\n     */\n    autoDetectCertificatesUsingMetadataUrl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!this._leafCertificateSupplier) {\n                    this._leafCertificateSupplier = yield new url_based_x509_certificate_supplier_1.URLBasedX509CertificateSupplier(this.getMetaDataResourceDetail(\"identity/cert.pem\"), this.getMetaDataResourceDetail(\"identity/key.pem\"), null).refresh();\n                }\n                if (this._tenancyId === \"\") {\n                    this._tenancyId = auth_utils_1.default.getTenantIdFromCertificate(this._leafCertificateSupplier.getCertificateAndKeyPair().getCertificate());\n                }\n                if (!this._intermediateCertificateSuppliers) {\n                    this._intermediateCertificateSuppliers = [\n                        yield new url_based_x509_certificate_supplier_1.URLBasedX509CertificateSupplier(this.getMetaDataResourceDetail(\"identity/intermediate.pem\"), null, null).refresh()\n                    ];\n                }\n            }\n            catch (e) {\n                throw Error(\"Failed to autoDetectCertificatesUsingMetadataUrl\");\n            }\n        });\n    }\n    getMetaDataResourceDetail(path) {\n        const url = this._metadataBaseUrl + path;\n        let headers = new Headers();\n        headers.append(this.AUTHORIZATION, this.METADATA_AUTH_HEADERS);\n        return new url_based_x509_certificate_supplier_1.ResourceDetails(url, headers);\n    }\n}\nexports.default = AbstractFederationClientAuthenticationDetailsProviderBuilder;\n//# sourceMappingURL=abstract-federation-client-authenticated-details-provider-builder.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base class for authentication details providers that make remote requests.\n */\nclass AbstractRequestingAuthenticationDetailsProvider {\n    constructor(federationClient, sessionKeySupplier) {\n        this.federationClient = federationClient;\n        this.sessionKeySupplier = sessionKeySupplier;\n    }\n    getKeyId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return \"ST$\" + (yield this.federationClient.getSecurityToken());\n        });\n    }\n    getPrivateKey() {\n        return this.sessionKeySupplier.getKeyPair().getPrivate();\n    }\n    getPassphrase() {\n        return null;\n    }\n}\nexports.default = AbstractRequestingAuthenticationDetailsProvider;\n//# sourceMappingURL=abstract-requesting-authentication-detail-provider.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleAuthenticationDetailsProvider = exports.isRegionProvider = void 0;\n/*\n * User Defined type guard function to check if the object is of type RegionProvider\n * https://basarat.gitbooks.io/typescript/content/docs/types/typeGuard.html\n */\nfunction isRegionProvider(arg) {\n    return arg.getRegion !== undefined;\n}\nexports.isRegionProvider = isRegionProvider;\n/**\n * The API based authentication details provider which implements [[AuthenticationDetailsProvider]].\n */\nclass SimpleAuthenticationDetailsProvider {\n    /**\n     * Construct an instance of [[SimpleAuthenticationDetailsProvider]].\n     * @param tenancy   tenancy id.\n     * @param user  user id.\n     * @param fingerprint   user's fingerprint.\n     * @param privateKey    private key to sign the request.\n     * @param passphrase    the passphrase of private key.\n     */\n    constructor(tenancy, user, fingerprint, privateKey, passphrase, region, authType, delegationToken, profileCredentials) {\n        this.tenancy = tenancy;\n        this.user = user;\n        this.fingerprint = fingerprint;\n        this.privateKey = privateKey;\n        this.passphrase = passphrase;\n        this.region = region;\n        this.authType = authType;\n        this.delegationToken = delegationToken;\n        this.profileCredentials = profileCredentials;\n        // provider is a member variable that may or may not store the actual AuthenticationDetailsProvider.\n        // In case of Cloud shell, provider would be the true AuthenticationDetailsProvider.\n        this.provider = null;\n    }\n    /**\n     * Get the key id to sign the http request.\n     */\n    getKeyId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tenancy + \"/\" + this.user + \"/\" + this.fingerprint;\n        });\n    }\n    /**\n     * Get the private key to sign the http request.\n     */\n    getPrivateKey() {\n        return this.privateKey;\n    }\n    /**\n     * Get the passphrase of the private key to sign the http request.\n     */\n    getPassphrase() {\n        return this.passphrase;\n    }\n    /**\n     * Get the Tenancy\n     */\n    getTenantId() {\n        return this.tenancy;\n    }\n    /**\n     * Get the user\n     */\n    getUser() {\n        return this.user;\n    }\n    /**\n     * Get the fingerprint\n     */\n    getFingerprint() {\n        return this.fingerprint;\n    }\n    /**\n     * Get the region\n     */\n    getRegion() {\n        return this.region;\n    }\n    /**\n     * Get the authType\n     */\n    getAuthType() {\n        return this.authType;\n    }\n    /**\n     * Set the provider\n     */\n    setProvider(provider) {\n        this.provider = provider;\n    }\n    /**\n     * Get the provider\n     */\n    getProvider() {\n        return this.provider;\n    }\n    /**\n     * Get the delegation token\n     */\n    getDelegationToken() {\n        return this.delegationToken;\n    }\n    getProfileCredentials() {\n        return this.profileCredentials;\n    }\n}\nexports.SimpleAuthenticationDetailsProvider = SimpleAuthenticationDetailsProvider;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CertificateAndPrivateKeyPair {\n    constructor(certificate, privateKey) {\n        this.certificate = certificate;\n        this.privateKey = privateKey;\n    }\n    getCertificate() {\n        return this.certificate;\n    }\n    getPrivateKey() {\n        return this.privateKey;\n    }\n}\nexports.default = CertificateAndPrivateKeyPair;\n//# sourceMappingURL=certificate-and-privatekey-pair.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigFileAuthenticationDetailsProvider = void 0;\nconst auth_1 = require(\"./auth\");\nconst utils_1 = require(\"../utils\");\nconst config_file_reader_1 = require(\"../config-file-reader\");\nconst fs_1 = require(\"fs\");\nconst region_1 = require(\"../region\");\nconst realm_1 = require(\"../realm\");\nclass ConfigFileAuthenticationDetailsProvider {\n    /**\n     * Creates a new instance using the config file at the default location,\n     * see {@link ConfigFileReader#DEFAULT_FILE_PATH}.\n     *\n     * @param profile\n     *            profile to load, optional\n     * @param configurationFilePath\n     *            config file path, optional\n     * @throws Error\n     *             if the configuration file could not be loaded\n     */\n    constructor(configurationFilePath, profile) {\n        const pfl = profile || config_file_reader_1.ConfigFileReader.DEFAULT_PROFILE_NAME;\n        if (configurationFilePath) {\n            this.delegate = this.createConfigFileAuth(config_file_reader_1.ConfigFileReader.parseFileFromPath(configurationFilePath, pfl));\n        }\n        else {\n            this.delegate = this.createConfigFileAuth(config_file_reader_1.ConfigFileReader.parseDefault(pfl));\n        }\n    }\n    /**\n     * Get a region based on regionId, if corresponding region is not found from regionId,\n     * create a new region by registering regionId with Realm.OC1\n     *\n     * @param regionId: string\n     * @param region: any\n     * @return: Region\n     */\n    retrieveRegionFromRegionId(regionId) {\n        let region;\n        try {\n            return (region = region_1.Region.fromRegionId(regionId));\n        }\n        catch (e) {\n            console.warn(`Found regionId ${regionId} in config file, but not supported by this version of the SDK`);\n            // Proceed by assuming the region id in the config file belongs to OC1 realm.\n            return (region = region_1.Region.register(regionId, realm_1.Realm.OC1));\n        }\n    }\n    createConfigFileAuth(file) {\n        const authType = file.get(\"authentication_type\");\n        const tenantId = utils_1.checkNotNull(file.get(\"tenancy\"), \"missing tenancy in config\");\n        const delegationTokenPath = file.get(\"delegation_token_file\");\n        let delegationToken = \"\";\n        let region = null;\n        const regionEnvVar = process.env.OCI_REGION;\n        let regionId = file.get(\"region\") || regionEnvVar;\n        if (regionId) {\n            region = this.retrieveRegionFromRegionId(regionId);\n        }\n        else {\n            throw Error(\"Region not specified in Config file or OCI_REGION env variable. Can not proceed without setting a region.\");\n        }\n        if (delegationTokenPath) {\n            delegationToken = fs_1.readFileSync(delegationTokenPath, \"utf8\").replace(/\\n/g, \"\");\n        }\n        // If authType exist that means we are not doing file based authentication, return early.\n        // This also assumes that a delegationTokenPath exists.\n        if (authType) {\n            return new auth_1.SimpleAuthenticationDetailsProvider(tenantId, \"\", \"\", \"\", \"\", region, authType, delegationToken);\n        }\n        const fingerprint = utils_1.checkNotNull(file.get(\"fingerprint\"), \"missing fingerprint in config\");\n        const user = utils_1.checkNotNull(file.get(\"user\"), \"missing user in config\");\n        const pemFilePath = utils_1.checkNotNull(file.get(\"key_file\"), \"missing key_file in config\");\n        const passPhrase = file.get(\"pass_phrase\");\n        const privateKey = this.getPvtKey(config_file_reader_1.ConfigFileReader.expandUserHome(pemFilePath));\n        const profileCredentials = file.profileCredentials;\n        return new auth_1.SimpleAuthenticationDetailsProvider(tenantId, user, fingerprint, privateKey, passPhrase, region, undefined, undefined, profileCredentials);\n    }\n    getPvtKey(filePath) {\n        try {\n            const key = fs_1.readFileSync(filePath, \"utf8\");\n            return key;\n        }\n        catch (e) {\n            throw \"Failed to read private key from file path.\";\n        }\n    }\n    /**\n     * Get the key id to sign the http request.\n     */\n    getKeyId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.delegate.getKeyId();\n        });\n    }\n    /**\n     * Get the private key to sign the http request.\n     */\n    getPrivateKey() {\n        return this.delegate.getPrivateKey();\n    }\n    /**\n     * Get the passphrase of the private key to sign the http request.\n     */\n    getPassphrase() {\n        return this.delegate.getPassphrase();\n    }\n    /**\n     * Get the Tenancy\n     */\n    getTenantId() {\n        return this.delegate.getTenantId();\n    }\n    /**\n     * Get the user\n     */\n    getUser() {\n        return this.delegate.getUser();\n    }\n    /**\n     * Get the fingerprint\n     */\n    getFingerprint() {\n        return this.delegate.getFingerprint();\n    }\n    /**\n     * Get the rehion\n     */\n    getRegion() {\n        return this.delegate.getRegion();\n    }\n    /**\n     * Get the authType\n     */\n    getAuthType() {\n        return this.delegate.getAuthType();\n    }\n    /**\n     * Set the provider\n     */\n    setProvider(provider) {\n        this.delegate.setProvider(provider);\n    }\n    /**\n     * Get the provider\n     */\n    getProvider() {\n        return this.delegate.getProvider();\n    }\n    getDelegationToken() {\n        return this.delegate.getDelegationToken();\n    }\n    getProfileCredentials() {\n        return this.delegate.getProfileCredentials();\n    }\n}\nexports.ConfigFileAuthenticationDetailsProvider = ConfigFileAuthenticationDetailsProvider;\n//# sourceMappingURL=config-file-auth.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_pair_1 = __importDefault(require(\"./key-pair\"));\nconst load_private_key_from_file_1 = require(\"./helpers/load-private-key-from-file\");\nclass FileBasedKeySupplier {\n    constructor(privateKeyPath, passphrasePath) {\n        this.privateKeyPath = privateKeyPath;\n        this.passphrasePath = passphrasePath;\n        this.refreshKeys();\n    }\n    // Getter: KeyPair\n    getKeyPair() {\n        return this.keyPair;\n    }\n    // Getter: Public Key\n    get publicKey() {\n        return this.getKeyPair().getPublic();\n    }\n    // Getter Private Key\n    get privateKey() {\n        return this.getKeyPair().getPrivate();\n    }\n    refreshKeys() {\n        if (!this.privateKeyPath) {\n            throw Error(\"privateKeyPath not set\");\n        }\n        // Try to create a privateKey & publicKey from the given privateKeyPath & passphrasePath\n        try {\n            const { publicKey, privateKey } = load_private_key_from_file_1.loadPrivateKeyFromFile(this.privateKeyPath, this.passphrasePath);\n            this.keyPair = new key_pair_1.default(publicKey, privateKey);\n        }\n        catch (e) {\n            throw Error(`Problem occured trying to create KeyPairs from given paths with error: ${e}`);\n        }\n    }\n}\nexports.default = FileBasedKeySupplier;\n//# sourceMappingURL=file-based-key-supplier.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nconst fs_1 = require(\"fs\");\nconst security_token_adapter_1 = __importDefault(require(\"./security-token-adapter\"));\n/**\n * This class gets a security token from file.\n */\nclass FileBasedResourcePrincipalFederationClient {\n    constructor(sessionKeySupplier, resourcePrincipalSessionTokenPath) {\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.resourcePrincipalSessionTokenPath = resourcePrincipalSessionTokenPath;\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.securityTokenAdapter = new security_token_adapter_1.default(\"\", sessionKeySupplier);\n        this.resourcePrincipalSessionTokenPath = resourcePrincipalSessionTokenPath;\n    }\n    /**\n     * Gets a security token. If there is already a valid token cached, it will be returned. Else this will make a call\n     * to the auth service to get a new token, using the provided suppliers.\n     *\n     * This method is thread-safe.\n     * @return the security token\n     * @throws OciError If there is any issue with getting a token from the auth server\n     */\n    getSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.securityTokenAdapter.isValid()) {\n                return this.securityTokenAdapter.getSecurityToken();\n            }\n            return yield this.refreshAndGetSecurityTokenInner(true);\n        });\n    }\n    /**\n     * Return a claim embedded in the security token\n     * @param key the name of the claim\n     * @return the value of the claim or null if unable to find\n     */\n    getStringClaim(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshAndGetSecurityToken();\n            return this.securityTokenAdapter.getStringClaim(key);\n        });\n    }\n    refreshAndGetSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.refreshAndGetSecurityTokenInner(false);\n        });\n    }\n    refreshAndGetSecurityTokenInner(doFinalTokenValidityCheck) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Check again to see if the JWT is still invalid, unless we want to skip that check\n            if (!doFinalTokenValidityCheck || !this.securityTokenAdapter.isValid()) {\n                this.sessionKeySupplier.refreshKeys();\n                this.securityTokenAdapter = this.getSecurityTokenFromFile();\n                return this.securityTokenAdapter.getSecurityToken();\n            }\n            return this.securityTokenAdapter.getSecurityToken();\n        });\n    }\n    /**\n     * Gets a security token from file\n     * @return the security token, which is basically a JWT token string\n     */\n    getSecurityTokenFromFile() {\n        const keyPair = this.sessionKeySupplier.getKeyPair();\n        if (!keyPair) {\n            throw Error(\"Keypair for session was not provided\");\n        }\n        let securityToken = \"\";\n        try {\n            securityToken = fs_1.readFileSync(this.resourcePrincipalSessionTokenPath, \"utf8\");\n        }\n        catch (e) {\n            throw Error(`Failed to read token due to error: ${e}`);\n        }\n        return new security_token_adapter_1.default(securityToken, this.sessionKeySupplier);\n    }\n}\nexports.default = FileBasedResourcePrincipalFederationClient;\n//# sourceMappingURL=file-based-resource-principal-federation-client.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst key_pair_1 = __importDefault(require(\"./key-pair\"));\nconst sshpk_1 = require(\"sshpk\");\n/**\n * This is a SessionKeySupplier which fakes the ability to refresh its contained key.\n * It is initialised once with fixed values of private key and (optional) passphrase; that key is always returned.\n */\nclass FixedContentKeySupplier {\n    constructor(privateKeyContent, passphrase) {\n        this.privateKeyContent = privateKeyContent;\n        this.passphrase = passphrase;\n        try {\n            let options = {};\n            // parse privateKeyContent with passphrase (if it exist) into a PrivateKey\n            if (passphrase) {\n                Object.assign(options, { passphrase: passphrase });\n            }\n            const privateKey = sshpk_1.parsePrivateKey(privateKeyContent, \"auto\", options);\n            const publicKey = privateKey.toPublic();\n            this.keyPair = new key_pair_1.default(publicKey.toString(\"pem\"), privateKey.toBuffer(\"pem\", {}).toString());\n        }\n        catch (e) {\n            throw Error(`Failed to read file contents, error: ${e}`);\n        }\n    }\n    // Getter: KeyPair\n    getKeyPair() {\n        return this.keyPair;\n    }\n    // Getter: Public Key\n    get publicKey() {\n        return this.getKeyPair().getPublic();\n    }\n    // Getter Private Key\n    get privateKey() {\n        return this.getKeyPair().getPrivate();\n    }\n    refreshKeys() { }\n}\nexports.default = FixedContentKeySupplier;\n//# sourceMappingURL=fixed-content-key-supplier.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst security_token_adapter_1 = __importDefault(require(\"./security-token-adapter\"));\n/**\n * This class returns a security token, supplied as a fixed value.\n */\nclass FixedContentResourcePrincipalFederationClient {\n    /**\n     * Constructor of FixedContentResourcePrincipalFederationClient.\n     *\n     * @param resourcePrincipalSessionToken the constant value for the RPST\n     * @param sessionKeySupplier the associated SessionKeySupplier\n     */\n    constructor(resourcePrincipalSessionToken, sessionKeySupplier) {\n        this.securityTokenAdapter = new security_token_adapter_1.default(resourcePrincipalSessionToken, sessionKeySupplier);\n    }\n    getSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.securityTokenAdapter.getSecurityToken();\n        });\n    }\n    refreshAndGetSecurityToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.securityTokenAdapter.getSecurityToken();\n        });\n    }\n    getStringClaim(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.securityTokenAdapter.getStringClaim(key);\n        });\n    }\n}\nexports.default = FixedContentResourcePrincipalFederationClient;\n//# sourceMappingURL=fixed-content-resource-principal-federation-client.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Utilities dealing with authorization.\n */\nclass AuthUtils {\n    /**\n     * Get the tenant id from the given certificate.\n     * @param certificate the given certificate.\n     * @return the tenant id.\n     */\n    static getTenantIdFromCertificate(certificate) {\n        let tenancyId = \"\";\n        /* Note: We currently have a newer version of sshpk that don't match the same version\n         * as the @types/sshpk. Because of the mismatch version, the types dont quite match\n         * Microsoft have not updated their types file. To get around temporarily, cast \"any\"\n         */\n        const OPC_TENANT = \"opc-tenant:\";\n        const OPC_IDENTITY = \"opc-identity:\";\n        try {\n            const subjects = certificate.subjects;\n            for (let subject of subjects) {\n                const components = subject.components;\n                for (let component of components) {\n                    if (component.value.includes(OPC_TENANT)) {\n                        const str = component.value;\n                        tenancyId = str.slice(str.indexOf(OPC_TENANT) + OPC_TENANT.length);\n                        return tenancyId;\n                    }\n                    if (component.value.includes(OPC_IDENTITY)) {\n                        const str = component.value;\n                        tenancyId = str.slice(str.indexOf(OPC_IDENTITY) + OPC_IDENTITY.length);\n                        return tenancyId;\n                    }\n                }\n            }\n            if (!tenancyId) {\n                throw Error(\"The certificate does not contain tenant id.\");\n            }\n        }\n        catch (e) {\n            throw Error(\"Failed to parse tenancyId from certificate\");\n        }\n        return tenancyId;\n    }\n    static sanitizeCertificateString(certificate) {\n        return certificate\n            .replace(\"-----BEGIN CERTIFICATE-----\", \"\")\n            .replace(\"-----END CERTIFICATE-----\", \"\")\n            .replace(\"-----BEGIN PUBLIC KEY-----\", \"\")\n            .replace(\"-----END PUBLIC KEY-----\", \"\")\n            .replace(\"\\n\", \"\");\n    }\n}\nexports.default = AuthUtils;\n//# sourceMappingURL=auth-utils.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.delegateAuthProvider = void 0;\nconst instance_principals_authentication_detail_provider_1 = __importDefault(require(\"../instance-principals-authentication-detail-provider\"));\nfunction delegateAuthProvider(authenticationDetailsProvider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Always make the check to see if there is a true authenticationDetailsProvider to use\n        let provider = null;\n        if (authenticationDetailsProvider.getProvider && authenticationDetailsProvider.getProvider()) {\n            provider = authenticationDetailsProvider.getProvider();\n        }\n        else if (authenticationDetailsProvider.getAuthType &&\n            authenticationDetailsProvider.getAuthType()) {\n            // Check if authenticationDetialsProvider contain a auth_type,\n            // if so, we want to set and use the appropriate auth provider.\n            const authType = authenticationDetailsProvider.getAuthType();\n            if (authType === \"instance_principal\") {\n                provider = yield new instance_principals_authentication_detail_provider_1.default().build();\n                authenticationDetailsProvider.setProvider(provider);\n            }\n        }\n        return provider;\n    });\n}\nexports.delegateAuthProvider = delegateAuthProvider;\n//# sourceMappingURL=delegate-auth-provider.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadPrivateKeyFromFile = void 0;\nconst fs_1 = require(\"fs\");\nconst sshpk_1 = require(\"sshpk\");\nfunction loadPrivateKeyFromFile(privateKeyPath, passphrasePath) {\n    try {\n        let options = {};\n        let passphraseFileContent;\n        const privateKeyFileContent = fs_1.readFileSync(privateKeyPath, \"utf8\");\n        if (passphrasePath) {\n            passphraseFileContent = fs_1.readFileSync(passphrasePath, \"utf8\");\n            Object.assign(options, { passphrase: passphraseFileContent });\n        }\n        // parse privateKeyFileContent with passphraseFileContent (if it exist) into a PrivateKey\n        const privateKey = sshpk_1.parsePrivateKey(privateKeyFileContent, \"auto\", options);\n        const publicKey = privateKey.toPublic();\n        return {\n            publicKey: publicKey.toString(\"pem\"),\n            privateKey: privateKey.toBuffer(\"pem\", {}).toString()\n        };\n    }\n    catch (e) {\n        throw Error(`Failed to read file contents, error: ${e}`);\n    }\n}\nexports.loadPrivateKeyFromFile = loadPrivateKeyFromFile;\n//# sourceMappingURL=load-private-key-from-file.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abstract_requesting_authentication_detail_provider_1 = __importDefault(require(\"./abstract-requesting-authentication-detail-provider\"));\nconst abstract_federation_client_authenticated_details_provider_builder_1 = __importDefault(require(\"./abstract-federation-client-authenticated-details-provider-builder\"));\nclass InstancePrincipalsAuthenticationDetailsProvider extends abstract_requesting_authentication_detail_provider_1.default {\n    constructor(federationClient, sessionKeySupplier, region) {\n        super(federationClient, sessionKeySupplier);\n        this.federationClient = federationClient;\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.region = region;\n    }\n    /**\n     * Refreshes the authentication data used by the provider\n     * @return the refreshed authentication data\n     */\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.federationClient.refreshAndGetSecurityToken();\n        });\n    }\n    // region getter\n    getRegion() {\n        return this.region;\n    }\n    /**\n     * Creates a new InstancePrincipalsAuthenticationDetailsProviderBuilder.\n     * @return A new builder instance.\n     */\n    static builder() {\n        return new InstancePrincipalsAuthenticationDetailsProviderBuilder();\n    }\n}\nclass InstancePrincipalsAuthenticationDetailsProviderBuilder extends abstract_federation_client_authenticated_details_provider_builder_1.default {\n    constructor(purpose) {\n        super();\n        if (purpose) {\n            this.purpose = purpose;\n        }\n    }\n    build() {\n        const _super = Object.create(null, {\n            build: { get: () => super.build }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.autoDetectUsingMetadataUrl();\n            return yield _super.build.call(this);\n        });\n    }\n    buildProvider(sessionKeySupplierToUse) {\n        return new InstancePrincipalsAuthenticationDetailsProvider(this._federationClient, sessionKeySupplierToUse, this.region);\n    }\n    set federationEndpoint(federationEndpoint) {\n        super._federationEndpoint = federationEndpoint;\n    }\n    set leafCertificateSupplier(leafCertificateSupplier) {\n        super._leafCertificateSupplier = leafCertificateSupplier;\n    }\n}\nexports.default = InstancePrincipalsAuthenticationDetailsProviderBuilder;\n//# sourceMappingURL=instance-principals-authentication-detail-provider.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This class is a simple holder for a key pair (a public key and a\n * private key).\n */\nclass KeyPair {\n    constructor(publicKey, privateKey) {\n        this.publicKey = publicKey;\n        this.privateKey = privateKey;\n    }\n    getPublic() {\n        return this.publicKey;\n    }\n    getPrivate() {\n        return this.privateKey;\n    }\n}\nexports.default = KeyPair;\n//# sourceMappingURL=key-pair.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This constructs a default implementation of the {@link ResourcePrincipalAuthenticationDetailsProvider}, constructed\n * in accordance with the following environment variable settings:\n * <ul>\n *\n * <li>{@code OCI_RESOURCE_PRINCIPAL_VERSION}:\n * <p>permitted values are \"2.2\"</p>\n * </li>\n *\n * <li>{@code OCI_RESOURCE_PRINCIPAL_RPST}:\n * <p>If this is an absolute path, then the filesystem-supplied resource principal session token will be retrieved from\n *   that location. This mode supports token refresh (if the environment replaces the RPST in the filesystem).</p>\n * <p>Otherwise, the environment variable is taken to hold the raw value of an RPST.\n *   Under these circumstances, the RPST cannot be refreshed; consequently, this mode is only usable for short-lived\n *   executables.</p>\n * </li>\n * <li>{@code OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM}:\n * <p>If this is an absolute path, then the filesystem-supplied private key will be retrieved from that location. As\n *   with the OCI_RESOURCE_PRINCIPAL_RPST, this mode supports token refresh if the environment can update the file\n *   contents.</p>\n * <p>Otherwise, the value is interpreted as the direct injection of a private key. The same considerations as to the\n *   lifetime of this value apply when directly injecting a key.</p>\n * </li>\n * <li>{@code OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM_PASSPHRASE}:\n * <p>This is optional. If set, it contains either the location (as an absolute path) or the value of the passphrase\n *   associated with the private key.</p>\n * </li>\n * <li>{@code OCI_RESOURCE_PRINCIPAL_REGION}:\n * <p>If set, this holds the canonical form of the local region. This is intended to enable executables to locate their\n *   \"local\" OCI service endpoints.</p>\n * </li>\n * </ul>\n */\nconst path_1 = __importDefault(require(\"path\"));\nconst region_1 = require(\"../region\");\nconst fixed_content_key_supplier_1 = __importDefault(require(\"./fixed-content-key-supplier\"));\nconst file_based_key_supplier_1 = __importDefault(require(\"./file-based-key-supplier\"));\nconst abstract_requesting_authentication_detail_provider_1 = __importDefault(require(\"./abstract-requesting-authentication-detail-provider\"));\nconst file_based_resource_principal_federation_client_1 = __importDefault(require(\"./file-based-resource-principal-federation-client\"));\nconst fixed_content_resource_principal_federation_client_1 = __importDefault(require(\"./fixed-content-resource-principal-federation-client\"));\nclass ResourcePrincipalAuthenticationDetailsProvider extends abstract_requesting_authentication_detail_provider_1.default {\n    constructor(federationClient, sessionKeySupplier, region) {\n        super(federationClient, sessionKeySupplier);\n        this.federationClient = federationClient;\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.region = region;\n    }\n    // Builder method to create ResourcePrincipalAuthenticationDetailsProviderBuilder which will build\n    // ResourcePrincipalAuthenticationDetailsProvider\n    static builder() {\n        return new ResourcePrincipalAuthenticationDetailsProvider.ResourcePrincipalAuthenticationDetailsProviderBuilder().build();\n    }\n    /**\n     * Session tokens carry JWT-like claims. Permit the retrieval of the value of those\n     * claims from the token.\n     * At the least, the token should carry claims for {@link ClaimKeys#COMPARTMENT_ID_CLAIM_KEY} and {@link ClaimKeys#TENANT_ID_CLAIM_KEY}\n     * @param key the name of a claim in the session token\n     * @return the claim value.\n     */\n    getStringClaim(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.federationClient.getStringClaim(key);\n        });\n    }\n    /**\n     * Refreshes the authentication data used by the provider\n     * @return the refreshed authentication data\n     */\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.federationClient.refreshAndGetSecurityToken();\n        });\n    }\n    // region getter\n    getRegion() {\n        return this.region;\n    }\n}\nexports.default = ResourcePrincipalAuthenticationDetailsProvider;\nResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_VERSION = \"OCI_RESOURCE_PRINCIPAL_VERSION\";\nResourcePrincipalAuthenticationDetailsProvider.RP_VERSION_2_2 = \"2.2\";\nResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_RPST = \"OCI_RESOURCE_PRINCIPAL_RPST\";\nResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM = \"OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM\";\nResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM_PASSPHRASE = \"OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM_PASSPHRASE\";\nResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_REGION_ENV_VAR_NAME = \"OCI_RESOURCE_PRINCIPAL_REGION\";\nResourcePrincipalAuthenticationDetailsProvider.ClaimKeys = (_a = class ClaimsKey {\n    },\n    /**\n     * COMPARTMENT_ID is the claim name that the RPST holds for the resource compartment.\n     * This can be passed to {@link #getStringClaim} to retrieve the resource's compartment OCID.\n     */\n    _a.COMPARTMENT_ID_CLAIM_KEY = \"res_compartment\",\n    /**\n     * TENANT_ID_CLAIM_KEY is the claim name that the RPST holds for the resource tenancy.\n     * This can be passed to {@link #getStringClaim} to retrieve the resource's tenancy OCID.\n     */\n    _a.TENANT_ID_CLAIM_KEY = \"res_tenant\",\n    _a);\n/**\n * Builder for ResourcePrincipalAuthenticationDetailsProvider that understands the V2.2 configuration\n */\nResourcePrincipalAuthenticationDetailsProvider.ResourcePrincipalAuthenticationDetailsProviderBuilder = class ResourcePrincipalAuthenticationDetailsProviderBuilder {\n    constructor() { }\n    build() {\n        const OciResourcePrincipalVersion = process.env[ResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_VERSION];\n        if (!OciResourcePrincipalVersion) {\n            throw Error(\"OCI_RESOURCE_PRINCIPAL_VERSION environment variable is missing\");\n        }\n        switch (OciResourcePrincipalVersion) {\n            case ResourcePrincipalAuthenticationDetailsProvider.RP_VERSION_2_2:\n                return ResourcePrincipalAuthenticationDetailsProviderBuilder.build_2_2();\n            default:\n                throw Error(`OCI_RESOURCE_PRINCIPAL_VERSION environment variable has an unknown value ${OciResourcePrincipalVersion}`);\n        }\n    }\n    /**\n     * Helper method that interprets the runtime environment to build a v2.2-configured client\n     * @return ResourcePrincipalAuthenticationDetailsProvider\n     */\n    static build_2_2() {\n        let federationClient;\n        let sessionKeySupplier;\n        let region;\n        const ociResourcePrincipalPrivateKey = process.env[ResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM];\n        const ociResourcePrincipalPassphrase = process.env[ResourcePrincipalAuthenticationDetailsProvider\n            .OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM_PASSPHRASE];\n        const ociResourcePrincipalRPST = process.env[ResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_RPST];\n        const ociResourcePrincipalRegion = process.env[ResourcePrincipalAuthenticationDetailsProvider.OCI_RESOURCE_PRINCIPAL_REGION_ENV_VAR_NAME];\n        if (!ociResourcePrincipalPrivateKey) {\n            throw Error(\"OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM environment variable missing\");\n        }\n        if (!ociResourcePrincipalRPST) {\n            throw Error(\"OCI_RESOURCE_PRINCIPAL_RPST environment variable is missing\");\n        }\n        if (!ociResourcePrincipalRegion) {\n            throw Error(\"OCI_RESOURCE_PRINCIPAL_REGION_ENV_VAR_NAME environment variable missing\");\n        }\n        // Do a check to see if the file path of privateKey and passphrase are absolute path\n        if (path_1.default.isAbsolute(ociResourcePrincipalPrivateKey)) {\n            if (ociResourcePrincipalPassphrase && !path_1.default.isAbsolute(ociResourcePrincipalPassphrase)) {\n                throw Error(\"cannot mix path and constant settings for \\\n          OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM and OCI_RESOURCE_PRINCIPAL_PRIVATE_PEM_PASSPHRASE\");\n            }\n            sessionKeySupplier = new file_based_key_supplier_1.default(ociResourcePrincipalPrivateKey, ociResourcePrincipalPassphrase);\n        }\n        else {\n            sessionKeySupplier = new fixed_content_key_supplier_1.default(ociResourcePrincipalPrivateKey, ociResourcePrincipalPassphrase);\n        }\n        if (path_1.default.isAbsolute(ociResourcePrincipalRPST)) {\n            federationClient = new file_based_resource_principal_federation_client_1.default(sessionKeySupplier, ociResourcePrincipalRPST);\n        }\n        else {\n            federationClient = new fixed_content_resource_principal_federation_client_1.default(ociResourcePrincipalRPST, sessionKeySupplier);\n        }\n        //  The region should be something like \"us-phoenix-1\" but if we get \"phx\" then convert it.\n        const regionId = region_1.Region.getRegionIdFromShortCode(ociResourcePrincipalRegion);\n        region = region_1.Region.fromRegionId(regionId);\n        return new ResourcePrincipalAuthenticationDetailsProvider(federationClient, sessionKeySupplier, region);\n    }\n};\n//# sourceMappingURL=resource-principal-authentication-details-provider.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst jsonwebtoken_1 = __importDefault(require(\"jsonwebtoken\"));\n/**\n * Helper class to store security token and sessionKeySupplier\n * contain methods to check if token is expired and needs to be refreshed\n */\nclass SecurityTokenAdapter {\n    constructor(securityToken, sessionKeySupplier) {\n        this.securityToken = securityToken;\n        this.sessionKeySupplier = sessionKeySupplier;\n        this.jwt = null;\n        this.jwt = this.securityToken ? this.parse(this.securityToken) : null;\n    }\n    /**\n     * Getter for securityToken\n     * @returns securityToken\n     */\n    getSecurityToken() {\n        return this.securityToken;\n    }\n    /**\n     * Helper method to verify token's secret matches publicKey string\n     * then parse token string into an complete object (header, payload, signature)\n     * @param token: string\n     * @returns payload: object\n     */\n    parse(token) {\n        try {\n            const payload = jsonwebtoken_1.default.decode(token, { complete: true });\n            return payload;\n        }\n        catch (e) {\n            throw Error(`Failed to decode token, error: ${e}`);\n        }\n    }\n    /**\n     * Checks to see current token exists, and if so, check expiration time\n     * @return true if valid\n     */\n    isValid() {\n        const secondsSinceEpoch = Math.round(Date.now() / 1000);\n        if (this.jwt == null) {\n            return false;\n        }\n        else if (this.jwt.payload && this.jwt.payload.exp > secondsSinceEpoch) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Return a claim from the token given a key if it exist, else return null\n     * @param key: string\n     * @return value of the claim\n     */\n    getStringClaim(key) {\n        if (this.jwt == null) {\n            return null;\n        }\n        return this.jwt.payload[key] ? this.jwt.payload[key] : null;\n    }\n}\nexports.default = SecurityTokenAdapter;\n//# sourceMappingURL=security-token-adapter.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This is a helper class to generate in-memory temporary session keys.\n * <p>\n * The thread safety of this class is ensured\n */\nconst crypto_1 = require(\"crypto\");\nconst key_pair_1 = __importDefault(require(\"./key-pair\"));\nclass SessionKeySupplierImpl {\n    constructor() {\n        const { privateKey, publicKey } = crypto_1.generateKeyPairSync(\"rsa\", {\n            modulusLength: 2048,\n            publicExponent: 65537,\n            publicKeyEncoding: {\n                type: \"spki\",\n                format: \"pem\"\n            },\n            privateKeyEncoding: {\n                type: \"pkcs8\",\n                format: \"pem\"\n            }\n        });\n        this.keyPair = new key_pair_1.default(publicKey, privateKey);\n    }\n    getKeyPair() {\n        return this.keyPair;\n    }\n    refreshKeys() {\n        const { privateKey, publicKey } = crypto_1.generateKeyPairSync(\"rsa\", {\n            modulusLength: 2048,\n            publicExponent: 65537,\n            publicKeyEncoding: {\n                type: \"spki\",\n                format: \"pem\"\n            },\n            privateKeyEncoding: {\n                type: \"pkcs8\",\n                format: \"pem\"\n            }\n        });\n        this.keyPair = new key_pair_1.default(publicKey, privateKey);\n    }\n}\nexports.default = SessionKeySupplierImpl;\n//# sourceMappingURL=session-key-supplier.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceDetails = exports.URLBasedX509CertificateSupplier = void 0;\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nconst sshpk_1 = require(\"sshpk\");\nconst http_1 = require(\"../http\");\nconst certificate_and_privatekey_pair_1 = __importDefault(require(\"./certificate-and-privatekey-pair\"));\nconst helper_1 = require(\"../helper\");\nconst circuit_breaker_1 = __importDefault(require(\"../circuit-breaker\"));\n/**\n * A class that retrieves certificate based on metadata service url\n */\nclass URLBasedX509CertificateSupplier {\n    constructor(certificateDetails, privateKeyDetails, privateKeyPassphraseCharacters) {\n        this.certificateDetails = certificateDetails;\n        this.privateKeyDetails = privateKeyDetails;\n        this.privateKeyPassphraseCharacters = privateKeyPassphraseCharacters;\n    }\n    /**\n     * So far we don't care whether the certificate is current or not.\n     * @return false always.\n     */\n    isCurrent() {\n        return false;\n    }\n    /**\n     * A method to refresh the X509 certificate and return the certificate\n     * @returns Promise<URLBasedX509CertificateSupplier>\n     */\n    refresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const certificate = yield this.readRawCertificate(this.certificateDetails);\n            const privateKey = yield this.readPrivateKey(this.privateKeyDetails, this.privateKeyPassphraseCharacters);\n            this.certificateAndKeyPair = new certificate_and_privatekey_pair_1.default(certificate, privateKey);\n            return this;\n        });\n    }\n    readRawCertificate(certificateDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const certificateStream = yield certificateDetails.send();\n            // Convert responseStream to actual certificate string\n            const certificateString = yield helper_1.getStringFromResponseBody(certificateStream.body);\n            const certificate = sshpk_1.parseCertificate(certificateString, \"pem\");\n            return certificate;\n        });\n    }\n    readPrivateKey(privateKeyResourceDetails, privateKeyPassphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let options = {};\n            if (!privateKeyResourceDetails || !privateKeyResourceDetails.getUrl()) {\n                return null;\n            }\n            if (privateKeyPassphrase) {\n                Object.assign(options, { passphrase: privateKeyPassphrase });\n            }\n            try {\n                const privateKeyStream = yield privateKeyResourceDetails.send();\n                // Convert privateKeyStream to privateKey string\n                const privateKeyString = yield helper_1.getStringFromResponseBody(privateKeyStream.body);\n                const privateKey = sshpk_1.parsePrivateKey(privateKeyString, \"auto\", options);\n                return privateKey;\n            }\n            catch (e) {\n                throw Error(`Unable to obtain private key, error: , ${e}`);\n            }\n        });\n    }\n    getCertificateAndKeyPair() {\n        return this.certificateAndKeyPair;\n    }\n}\nexports.URLBasedX509CertificateSupplier = URLBasedX509CertificateSupplier;\nclass ResourceDetails {\n    constructor(url, headers) {\n        this.url = url;\n        this.headers = headers;\n    }\n    send() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpClient = new http_1.FetchHttpClient(null, circuit_breaker_1.default.internalCircuit);\n            const response = yield httpClient.send({\n                uri: this.url,\n                method: \"GET\",\n                headers: this.headers\n            });\n            return response;\n        });\n    }\n    getUrl() {\n        return this.url;\n    }\n}\nexports.ResourceDetails = ResourceDetails;\n//# sourceMappingURL=url-based-x509-certificate-supplier.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\nconst buffer_1 = require(\"buffer\");\nconst helper_1 = require(\"./helper\");\nconst ChunkBuffer_1 = require(\"./chunks/ChunkBuffer\");\nconst ChunkStream_1 = require(\"./chunks/ChunkStream\");\nconst getReadableStreamData_1 = require(\"./chunks/getReadableStreamData\");\nconst getReadableData_1 = require(\"./chunks/getReadableData\");\nfunction getChunk(data, partSize) {\n    if (data instanceof buffer_1.Buffer) {\n        return ChunkBuffer_1.ChunkBuffer(data, partSize);\n    }\n    else if (data instanceof stream_1.Readable) {\n        return ChunkStream_1.ChunkStream(data, partSize, getReadableData_1.getReadableData);\n    }\n    else if (data instanceof String || typeof data === \"string\" || data instanceof Uint8Array) {\n        // chunk Strings, Uint8Array.\n        return ChunkBuffer_1.ChunkBuffer(buffer_1.Buffer.from(data), partSize);\n    }\n    if (typeof data.stream === \"function\") {\n        // support for blob\n        let stream = data.stream();\n        if (stream.getReader) {\n            return ChunkStream_1.ChunkStream(stream, partSize, getReadableStreamData_1.getReadableStreamData);\n        }\n        else {\n            // Some fetch libraries have blob's .stream implemented as NodeJS's readable\n            return ChunkStream_1.ChunkStream(stream, partSize, getReadableData_1.getReadableData);\n        }\n    }\n    else if (helper_1.isReadableStream(data)) {\n        // NodeJS run-time does not know what ReadableStream is, isReadableStream helps detect if stream is a ReadableStream\n        return ChunkStream_1.ChunkStream(data, partSize, getReadableStreamData_1.getReadableStreamData);\n    }\n    else {\n        throw new Error(\"Body Data is unsupported format, expected data to be one of: string | Uint8Array | Buffer | Readable | ReadableStream | Blob;.\");\n    }\n}\nexports.default = getChunk;\n//# sourceMappingURL=chunker.js.map","\"use strict\";\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChunkBuffer = void 0;\nconst crypto_1 = require(\"crypto\");\nconst helper_1 = require(\"../helper\");\nfunction ChunkBuffer(data, partSize) {\n    return __asyncGenerator(this, arguments, function* ChunkBuffer_1() {\n        let partNumber = 1;\n        let startByte = 0;\n        let endByte = partSize;\n        let content;\n        let md5Hash;\n        while (endByte < data.length) {\n            content = data.slice(startByte, endByte);\n            md5Hash = crypto_1.createHash(\"md5\");\n            md5Hash.update(content);\n            yield yield __await({\n                size: helper_1.byteLength(content),\n                data: content,\n                md5Hash: md5Hash.digest(\"base64\")\n            });\n            partNumber += 1;\n            startByte = endByte;\n            endByte = startByte + partSize;\n        }\n        content = data.slice(startByte);\n        md5Hash = crypto_1.createHash(\"md5\");\n        md5Hash.update(content);\n        yield yield __await({\n            size: helper_1.byteLength(content),\n            data: content,\n            md5Hash: md5Hash.digest(\"base64\")\n        });\n    });\n}\nexports.ChunkBuffer = ChunkBuffer;\n//# sourceMappingURL=ChunkBuffer.js.map","\"use strict\";\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChunkStream = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nconst helper_1 = require(\"../helper\");\nfunction ChunkStream(data, partSize, getNextData) {\n    return __asyncGenerator(this, arguments, function* ChunkStream_1() {\n        var e_1, _a;\n        const currentBuffer = { chunks: [], length: 0 };\n        let content;\n        let size;\n        let md5Hash;\n        try {\n            for (var _b = __asyncValues(getNextData(data)), _c; _c = yield __await(_b.next()), !_c.done;) {\n                const datum = _c.value;\n                currentBuffer.chunks.push(datum);\n                currentBuffer.length += datum.length;\n                while (currentBuffer.length >= partSize) {\n                    const dataChunk = currentBuffer.chunks.length > 1\n                        ? buffer_1.Buffer.concat(currentBuffer.chunks)\n                        : currentBuffer.chunks[0];\n                    content = dataChunk.slice(0, partSize);\n                    md5Hash = crypto_1.createHash(\"md5\");\n                    md5Hash.update(content);\n                    size = helper_1.byteLength(content);\n                    yield yield __await({\n                        size: size,\n                        data: content,\n                        md5Hash: md5Hash.digest(\"base64\")\n                    });\n                    // Reset buffer.\n                    currentBuffer.chunks = [dataChunk.slice(partSize)];\n                    currentBuffer.length = currentBuffer.chunks[0].length;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) yield __await(_a.call(_b));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        content = buffer_1.Buffer.concat(currentBuffer.chunks);\n        size = helper_1.byteLength(content);\n        md5Hash = crypto_1.createHash(\"md5\");\n        md5Hash.update(content);\n        yield yield __await({\n            size: size,\n            data: content,\n            md5Hash: md5Hash.digest(\"base64\")\n        });\n    });\n}\nexports.ChunkStream = ChunkStream;\n//# sourceMappingURL=ChunkStream.js.map","\"use strict\";\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReadableData = void 0;\nconst buffer_1 = require(\"buffer\");\nfunction getReadableData(data) {\n    return __asyncGenerator(this, arguments, function* getReadableData_1() {\n        var e_1, _a;\n        try {\n            for (var data_1 = __asyncValues(data), data_1_1; data_1_1 = yield __await(data_1.next()), !data_1_1.done;) {\n                const chunk = data_1_1.value;\n                yield yield __await(buffer_1.Buffer.from(chunk));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) yield __await(_a.call(data_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\nexports.getReadableData = getReadableData;\n//# sourceMappingURL=getReadableData.js.map","\"use strict\";\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getReadableStreamData = void 0;\nconst buffer_1 = require(\"buffer\");\nfunction getReadableStreamData(data) {\n    return __asyncGenerator(this, arguments, function* getReadableStreamData_1() {\n        const reader = data.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield __await(reader.read());\n                if (done)\n                    return yield __await(void 0);\n                yield yield __await(buffer_1.Buffer.from(value));\n            }\n        }\n        catch (e) {\n            throw e;\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nexports.getReadableStreamData = getReadableStreamData;\n//# sourceMappingURL=getReadableStreamData.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst helper_1 = require(\"./helper\");\nconst retrier_1 = require(\"./retrier\");\nconst Breaker = require(\"opossum\");\nfunction FetchWrapper(req) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const response = yield fetch(req);\n                if (response.status && response.status >= 200 && response.status <= 299) {\n                    resolve({ response });\n                }\n                else {\n                    const responseClone = response.clone();\n                    const errBody = yield helper_1.handleErrorBody(responseClone);\n                    const errorObject = helper_1.handleErrorResponse(responseClone, errBody);\n                    reject({\n                        response,\n                        errorObject\n                    });\n                }\n            }\n            catch (e) {\n                // If we get here, that means response was a client side error\n                reject(e);\n            }\n        }));\n    });\n}\nfunction defaultErrorFilterFunction(e) {\n    console.log(\"error from defaultErrorFunction: \", e);\n    // Only consider client side errors or retry-able server errors\n    if (e.code || (e.errorObject && retrier_1.DefaultRetryCondition.shouldBeRetried(e.errorObject))) {\n        return false;\n    }\n    return true;\n}\nclass CircuitBreaker {\n    constructor(options) {\n        this.circuit = null;\n        this.noCircuit = false;\n        if (options === null || options === void 0 ? void 0 : options.disableClientCircuitBreaker) {\n            this.noCircuit = true;\n            return;\n        }\n        this.circuit = options\n            ? new Breaker(FetchWrapper, options)\n            : new Breaker(FetchWrapper, CircuitBreaker.DefaultConfiguration);\n        // Add emitters\n        this.circuit.on(\"open\", () => {\n            console.log(\"circuit breaker is now in OPEN state\");\n        });\n        this.circuit.on(\"halfOpen\", () => {\n            console.log(\"circuit breaker is now in HALF OPEN state\");\n        });\n        this.circuit.on(\"close\", () => {\n            console.log(\"circuit breaker is now in CLOSE state\");\n        });\n    }\n    static get defaultConfiguration() {\n        return CircuitBreaker.DefaultConfiguration;\n    }\n    static set defaultConfiguration(circuitBreakerConfig) {\n        CircuitBreaker.DefaultConfiguration = Object.assign(Object.assign({}, CircuitBreaker.DefaultConfiguration), circuitBreakerConfig);\n    }\n}\nexports.default = CircuitBreaker;\nCircuitBreaker.EnableGlobalCircuitBreaker = true; // Configuration to turn on/off the global circuit breaker.\nCircuitBreaker.EnableDefaultCircuitBreaker = process.env.OCI_SDK_DEFAULT_CIRCUITBREAKER_ENABLED;\nCircuitBreaker.DefaultConfiguration = {\n    timeout: 10000,\n    errorThresholdPercentage: 80,\n    resetTimeout: 30000,\n    rollingCountTimeout: 120000,\n    rollingCountBuckets: 120,\n    volumeThreshold: 10,\n    errorFilter: defaultErrorFilterFunction\n};\nCircuitBreaker.internalCircuit = new Breaker(FetchWrapper, {\n    timeout: 10000,\n    errorThresholdPercentage: 50,\n    resetTimeout: 30000 // After 30 seconds, try again.\n});\n//# sourceMappingURL=circuit-breaker.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigAccumulator = exports.ConfigFile = exports.ConfigFileReader = void 0;\nconst fs_1 = require(\"fs\");\nclass ConfigFileReader {\n    /**\n     * Creates a new ConfigFile instance using the configuration at the default location,\n     * using the given profile.\n     * @param profile The profile name to load, or null if you want to load the\n     *            \"DEFAULT\" profile.\n     * @return A new ConfigFile instance.\n     * @throws Error, if the file could not be read.\n     */\n    static parseDefault(profile) {\n        const envVarConfigFile = process.env.OCI_CONFIG_FILE;\n        // Check if file exists in the location\n        const defaultExists = ConfigFileReader.fileExists(ConfigFileReader.DEFAULT_FILE_PATH);\n        const fallbackExists = ConfigFileReader.fileExists(ConfigFileReader.FALLBACK_DEFAULT_FILE_PATH);\n        let configFileFromEnvVarExists = false;\n        if (envVarConfigFile) {\n            configFileFromEnvVarExists = ConfigFileReader.fileExists(envVarConfigFile);\n        }\n        // If default file exists, assign effecive file as default file, else fallback as effective file\n        if (defaultExists) {\n            return ConfigFileReader.parseFileFromPath(ConfigFileReader.DEFAULT_FILE_PATH, profile);\n        }\n        else if (configFileFromEnvVarExists) {\n            return ConfigFileReader.parseFileFromPath(envVarConfigFile, profile);\n        }\n        else if (fallbackExists) {\n            return ConfigFileReader.parseFileFromPath(ConfigFileReader.FALLBACK_DEFAULT_FILE_PATH, profile);\n        }\n        throw new Error(` Can't load the default config from ${ConfigFileReader.DEFAULT_FILE_PATH} or ${ConfigFileReader.FALLBACK_DEFAULT_FILE_PATH} because it does not exists or its not a file.`);\n    }\n    static expandUserHome(path) {\n        // If the home (~) shortcut is used, then attempt to determine correct path.\n        // Otherwise, leave as is to allow users to always be able to specify a path\n        // without the SDK modifying it.\n        if (path.startsWith(\"~/\") || path.startsWith(\"~\\\\\")) {\n            return (require(\"os\").homedir() +\n                ConfigFileReader.correctPath(process.platform === \"win32\", path.substring(1)));\n        }\n        else {\n            return path;\n        }\n    }\n    // Handle the case where somebody is copying the config file\n    // between platforms (or copying examples without changing values)\n    static correctPath(isWindows, path) {\n        if (isWindows) {\n            // https://msdn.microsoft.com/en-us/library/aa365247\n            // forward slash is reserved, assume its not supposed to\n            // be there and replace with back slash\n            path = path.replace(\"/\", \"\\\\\");\n        }\n        // back slash is not a reserved character on other platforms,\n        // so do not attempt to modify it\n        return path;\n    }\n    static fileExists(filepath) {\n        return fs_1.existsSync(ConfigFileReader.expandUserHome(filepath));\n    }\n    static parseFileFromPath(path, profile) {\n        if (ConfigFileReader.fileExists(path)) {\n            const fileContent = fs_1.readFileSync(ConfigFileReader.expandUserHome(path), \"utf8\");\n            return ConfigFileReader.parse(fileContent, profile);\n        }\n        throw Error(`File does not exists at ${path}`);\n    }\n    static parse(fileContent, profile) {\n        const lines = fileContent.split(\"\\n\").filter(Boolean);\n        const accumulator = new ConfigAccumulator();\n        lines.forEach(l => {\n            accumulator.accept(l);\n        });\n        if (!accumulator.foundDefaultProfile) {\n            console.info(\"No DEFAULT profile was specified in the configuration\");\n        }\n        if (profile !== null && !accumulator.configurationsByProfile.has(profile)) {\n            throw new Error(\"No profile named \" + profile + \" exists in the configuration file\");\n        }\n        return new ConfigFile(accumulator, profile);\n    }\n}\nexports.ConfigFileReader = ConfigFileReader;\n/**\n * Default location of the config file.\n */\nConfigFileReader.DEFAULT_FILE_PATH = \"~/.oci/config\";\n/**\n * The fallback default location of the config file. If and only if the DEFAULT_FILE_PATH does not exist,\n * this fallback default location will be used.\n */\nConfigFileReader.FALLBACK_DEFAULT_FILE_PATH = \"~/.oraclebmc/config\";\nConfigFileReader.DEFAULT_PROFILE_NAME = \"DEFAULT\";\nclass ConfigFile {\n    constructor(acc, profile) {\n        this.accumulator = acc;\n        this.profile = profile;\n    }\n    /**\n     * Gets the value associated with a given key. The value returned will\n     * be the one for the selected profile (if available), else the value in\n     * the DEFAULT profile (if specified), else null.\n     *\n     * @param key, The key to look up.\n     * @return The value, or null if it didn't exist.\n     */\n    get(key) {\n        if (this.profile && this.accumulator.configurationsByProfile.get(this.profile).has(key)) {\n            return this.accumulator.configurationsByProfile.get(this.profile).get(key);\n        }\n        return this.accumulator.foundDefaultProfile\n            ? this.accumulator.configurationsByProfile\n                .get(ConfigFileReader.DEFAULT_PROFILE_NAME)\n                .get(key)\n            : null;\n    }\n    get profileCredentials() {\n        return this.accumulator;\n    }\n}\nexports.ConfigFile = ConfigFile;\nclass ConfigAccumulator {\n    constructor() {\n        this.configurationsByProfile = new Map();\n        this[\"foundDefaultProfile\"] = false;\n    }\n    accept(line) {\n        const trimmedLine = line.trim();\n        // no blank Lines\n        if (!trimmedLine) {\n            return;\n        }\n        // skip comments\n        if (trimmedLine.charAt(0) === \"#\") {\n            return;\n        }\n        if (trimmedLine.charAt(0) === \"[\" && trimmedLine.charAt(trimmedLine.length - 1) === \"]\") {\n            this.currentProfile = trimmedLine.substring(1, trimmedLine.length - 1).trim();\n            if (!this.currentProfile) {\n                throw Error(\"Cannot have empty profile name: \" + line);\n            }\n            if (this.currentProfile === ConfigFileReader.DEFAULT_PROFILE_NAME) {\n                this.foundDefaultProfile = true;\n            }\n            if (!this.configurationsByProfile.has(this.currentProfile)) {\n                this.configurationsByProfile.set(this.currentProfile, new Map());\n            }\n            return;\n        }\n        const splitIndex = trimmedLine.indexOf(\"=\");\n        if (splitIndex === -1) {\n            throw new Error(\"Found line with no key-value pair: \" + line);\n        }\n        const key = trimmedLine.substring(0, splitIndex).trim();\n        const value = trimmedLine.substring(splitIndex + 1).trim();\n        if (!key) {\n            throw new Error(\"Found line with no key: \" + line);\n        }\n        if (!this.currentProfile) {\n            throw new Error(\"Config parse error, attempted to read configuration without specifying a profile: \" + line);\n        }\n        this.configurationsByProfile.get(this.currentProfile).set(key, value);\n    }\n}\nexports.ConfigAccumulator = ConfigAccumulator;\n//# sourceMappingURL=config-file-reader.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanString = void 0;\nconst Constants = {\n    APPLICATION_JSON: \"application/json\"\n};\nvar BooleanString;\n(function (BooleanString) {\n    BooleanString[\"TRUE\"] = \"true\";\n    BooleanString[\"FALSE\"] = \"false\";\n})(BooleanString = exports.BooleanString || (exports.BooleanString = {}));\nexports.default = Constants;\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointBuilder = void 0;\nconst region_1 = require(\"./region\");\nconst realm_1 = require(\"./realm\");\nclass EndpointBuilder {\n    static createEndpointFromRegion(template, region) {\n        const regionId = region.regionId;\n        const secondLevelDomain = region.realm.secondLevelDomain;\n        return EndpointBuilder.createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, secondLevelDomain);\n    }\n    static createEndpointFromRegionId(template, regionId) {\n        const region = region_1.Region.fromRegionId(regionId);\n        if (region)\n            return EndpointBuilder.createEndpointFromRegion(template, region);\n        console.log(`Unknown regionId [${regionId}], Assuming its in default Realm OC1`);\n        const defaultRealm = realm_1.Realm.OC1;\n        return EndpointBuilder.createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, defaultRealm.secondLevelDomain);\n    }\n    static createEndpointFromRegionIdAndSecondLevelDomain(template, regionId, secondLevelDomain) {\n        if (!template)\n            throw Error(\"Template can not be undefined or empty\");\n        if (!regionId)\n            throw Error(\"regionId can not be undefined or empty\");\n        if (!secondLevelDomain)\n            throw Error(\"secondLevelDomain can not be undefined or empty\");\n        return template.replace(\"{secondLevelDomain}\", secondLevelDomain).replace(\"{region}\", regionId);\n    }\n}\nexports.EndpointBuilder = EndpointBuilder;\n//# sourceMappingURL=endpoint-builder.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OciError = void 0;\nclass OciError extends Error {\n    constructor(statusCode, serviceCode, message, opcRequestId) {\n        super(message);\n        this.statusCode = statusCode;\n        this.serviceCode = serviceCode;\n        this.opcRequestId = opcRequestId;\n    }\n}\nexports.OciError = OciError;\n//# sourceMappingURL=error.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addUserAgent = exports.addOpcRequestId = void 0;\n/* This utility adds extra headers to each request before being sent over wire*/\nconst package_json_1 = require(\"../package.json\");\nconst utils_1 = require(\"./utils\");\nconst uuidv1 = require(\"uuid/v1\");\nconst OPC_REQUEST_ID_HEADER = \"opc-request-id\";\nconst USER_AGENT_HEADER = \"User-Agent\";\nconst BROWSER_USER_AGENT_HEADER = \"X-Orcl-User-Agent\";\nconst PLATFORM_KEY = \"platform\";\nconst RELEASE_KEY = \"relase\";\nconst VERSION_KEY = \"nodeVersion\";\nlet NODE_PLATFORM_HASH = new Map();\nfunction addOpcRequestId(headers) {\n    // if user has not passed opc-request-id\n    if (!hasOpcRequestId(headers)) {\n        headers.append(OPC_REQUEST_ID_HEADER, generateRequestId());\n    }\n}\nexports.addOpcRequestId = addOpcRequestId;\nfunction hasOpcRequestId(headers) {\n    if (headers.has(OPC_REQUEST_ID_HEADER)) {\n        return true;\n    }\n    return false;\n}\nfunction generateRequestId() {\n    return uuidv1()\n        .replace(\"-\", \"\")\n        .toLocaleUpperCase(\"en-US\");\n}\nfunction addUserAgent(headers) {\n    const appendUserAgent = process.env.OCI_SDK_APPEND_USER_AGENT;\n    const clientInfo = `Oracle-TypeScriptSDK/${package_json_1.version}`;\n    // Check if the sdk is used in browser or node, populate header accordingly.\n    if (!utils_1.isBrowser()) {\n        // Hash the values of Platform specific attributes\n        if (utils_1.isEmpty(NODE_PLATFORM_HASH)) {\n            populatePlatformHash();\n        }\n        const platform = NODE_PLATFORM_HASH.get(PLATFORM_KEY);\n        const release = NODE_PLATFORM_HASH.get(RELEASE_KEY);\n        const nodeVersion = NODE_PLATFORM_HASH.get(VERSION_KEY);\n        // Formulate User-Agent\n        let userAgent = appendUserAgent\n            ? `${clientInfo} (${platform}/${release}; Node/${nodeVersion}) ${appendUserAgent}`\n            : `${clientInfo} (${platform}/${release}; Node/${nodeVersion})`;\n        // Headers will always be replaced if they exist already\n        headers.append(USER_AGENT_HEADER, userAgent);\n        return;\n    }\n    headers.append(BROWSER_USER_AGENT_HEADER, clientInfo);\n}\nexports.addUserAgent = addUserAgent;\nfunction populatePlatformHash() {\n    const os = require(\"os\");\n    NODE_PLATFORM_HASH.set(PLATFORM_KEY, os.platform);\n    NODE_PLATFORM_HASH.set(RELEASE_KEY, os.release);\n    NODE_PLATFORM_HASH.set(VERSION_KEY, process.version);\n}\n//# sourceMappingURL=headers.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.byteLength = exports.isReadableStream = exports.getStringFromRequestBody = exports.formatDateToRFC3339 = exports.autoDetectContentLengthAndReadBody = exports.addAdditionalHeaders = exports.getSignerAndReqBody = exports.readStringFromReadable = exports.getStringFromResponseBody = exports.convertStringToType = exports.handleErrorBody = exports.handleErrorResponse = exports.mapContainer = void 0;\nconst error_1 = require(\"./error\");\nconst range_1 = require(\"./range\");\nconst stream_1 = require(\"stream\");\nconst headers_1 = require(\"./headers\");\nconst utils_1 = require(\"./utils\");\nconst chunker_1 = __importDefault(require(\"./chunker\"));\nfunction mapContainer(obj, getJsonObj) {\n    const constructedObj = {};\n    for (let key in obj) {\n        constructedObj[key] = getJsonObj(obj[key]);\n    }\n    return constructedObj;\n}\nexports.mapContainer = mapContainer;\nfunction handleErrorResponse(response, body) {\n    const statusCode = response.status || -1;\n    const requestId = response.headers.get(\"opc-request-id\");\n    if (body && body.code && body.message) {\n        return new error_1.OciError(statusCode, body.code, body.message, requestId);\n    }\n    else if (typeof body == \"string\" && body.length > 0) {\n        return new error_1.OciError(statusCode, \"None\", body, requestId);\n    }\n    else if (response.statusText && response.statusText.length > 0) {\n        // There is no body text but statusText exists\n        return new error_1.OciError(statusCode, \"None\", response.statusText, requestId);\n    }\n    else {\n        return new error_1.OciError(statusCode, \"None\", \"unknown reason.\", requestId);\n    }\n}\nexports.handleErrorResponse = handleErrorResponse;\nfunction handleErrorBody(response) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let data = yield response.text();\n        //  Try to parse string as an object\n        try {\n            data = JSON.parse(data);\n        }\n        catch (err) {\n            return data;\n        }\n        return data;\n    });\n}\nexports.handleErrorBody = handleErrorBody;\nfunction convertStringToType(str, expectedType) {\n    if (str == null)\n        return str;\n    expectedType = expectedType.toLowerCase();\n    switch (expectedType) {\n        case \"string\":\n            return str;\n        case \"number\":\n            return Number(str);\n        case \"date\":\n            return formatDateToRFC3339(new Date(str));\n        case \"common.Range\":\n            return range_1.Range.parse(str);\n    }\n}\nexports.convertStringToType = convertStringToType;\n// get string content from response body\nfunction getStringFromResponseBody(body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof body === \"string\") {\n            return body;\n        }\n        if (body instanceof stream_1.Readable) {\n            // body is a stream type\n            return readStringFromReadable(body);\n        }\n        // else if (body instanceof Blob) {\n        //   // body is a blob type\n        //   return readStringFromBlob(body);\n        // } else if (body instanceof ReadableStream) {\n        //   // body is a fetch readableStream type\n        //   return readStringFromFetchReadableStream(body);\n        // }\n        else {\n            // unknown type, unable to read body content for signing, reject it\n            throw new Error(\"Unable to read body content to sign the request\");\n        }\n    });\n}\nexports.getStringFromResponseBody = getStringFromResponseBody;\n// read string from Readable asynchronously, return a string content of it\nfunction readStringFromReadable(readable) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let contentBuffer = [];\n        let size = 0;\n        const MEMIBYTES = 1024 * 1024;\n        const sizeLimit = 2000 * MEMIBYTES;\n        // set the encoding to return string instead of Buffer\n        readable.setEncoding(\"utf8\");\n        return new Promise((resolve, reject) => {\n            readable.on(\"end\", () => {\n                resolve(contentBuffer.join(\"\"));\n            });\n            readable.on(\"data\", chunk => {\n                if (size > sizeLimit) {\n                    throw Error(\"Tried to read stream but content length is greater than 2GB.\");\n                }\n                contentBuffer.push(chunk);\n                size += chunk.length;\n            });\n            readable.on(\"error\", err => {\n                // if error happened, it will be catched at http signer global error handling\n                reject(err);\n            });\n        });\n    });\n}\nexports.readStringFromReadable = readStringFromReadable;\n// read string from fetch ReadbaleString asynchronously, return a string content of it\n// export async function readStringFromFetchReadableStream(readable: ReadableStream): Promise<string> {\n//   let contentBuffer: Array<string> = [];\n//   const reader = readable.getReader();\n//   const decoder = new TextDecoder(\"utf-8\");\n//   return new Promise<string>((resolve, reject) => {\n//     reader\n//       .read()\n//       .then(function processText({ done, value }): any {\n//         if (done) {\n//           // reading stream done, resolve it\n//           resolve(contentBuffer.join(\"\"));\n//         }\n//         // put each chunk into a buffer\n//         contentBuffer.push(decoder.decode(value));\n//         // read more data and call processText function again to read more\n//         return reader.read().then(processText);\n//       })\n//       .catch(function(e) {\n//         // reject if has error\n//         reject(e);\n//       });\n//   });\n// }\n// read string from Blob asynchronously, return a string content of it\n// export async function readStringFromBlob(blob: Blob): Promise<string> {\n//   const reader = new FileReader();\n//   return new Promise<string>((resolve, reject) => {\n//     reader.onerror = err => {\n//       reader.abort();\n//       reject(err);\n//     };\n//     reader.onload = () => {\n//       // read as Text is called, so this will be a string\n//       resolve(reader.result as string);\n//     };\n//     // utf-8 default encoding is used here\n//     reader.readAsText(blob);\n//   });\n// }\n// returns duplicated body for separate consumption by signer and Fetch Request\nfunction getSignerAndReqBody(body, forceExcludeBody) {\n    const singerAndReqBody = { signerBody: undefined, requestBody: undefined };\n    // If body does not exist or empty body\n    if (!body || utils_1.isEmpty(body)) {\n        return singerAndReqBody;\n    }\n    // If body is excluded for signing, no need to send signer body\n    if (forceExcludeBody) {\n        singerAndReqBody.requestBody = body;\n        return singerAndReqBody;\n    }\n    // if body of type string, can be duplicated.\n    if (typeof body === \"string\") {\n        return { signerBody: body, requestBody: body };\n    }\n    // If body instance of Readable , duplicate the stream for signer and request body\n    else if (body instanceof stream_1.Readable) {\n        const signerbody = body.pipe(new stream_1.PassThrough());\n        const reqBody = body.pipe(new stream_1.PassThrough());\n        return { signerBody: signerbody, requestBody: reqBody };\n    }\n    // //if body instance of blob, can be duplicated.\n    // else if (body instanceof Blob) {\n    //   return { signerBody: body, requestBody: body };\n    // }\n    // // if body instance of ReadableStream, tee() it.\n    // else if (body instanceof ReadableStream) {\n    //   // body.tee() not supported in IE.\n    //   // https://jira.oci.oraclecorp.com/browse/DEX-7126\n    //   const duplicateStream = body.tee();\n    //   return { signerBody: duplicateStream[0], requestBody: duplicateStream[1] };\n    // }\n    // unknown type, unable to read body content.\n    else\n        throw new Error(\"Unable to read body content\");\n}\nexports.getSignerAndReqBody = getSignerAndReqBody;\nfunction addAdditionalHeaders(headers, params) {\n    headers_1.addOpcRequestId(headers);\n    headers_1.addUserAgent(headers);\n}\nexports.addAdditionalHeaders = addAdditionalHeaders;\nfunction autoDetectContentLengthAndReadBody(headers, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Auto Detect content-length if needed, also read binary content if stream length cannot be determined.\n        const reqHeaders = params.headerParams;\n        if (reqHeaders) {\n            const shouldReadBodyAndCalculateContentLength = (\"content-length\" in reqHeaders && reqHeaders[\"content-length\"] === undefined) ||\n                (\"Content-Length\" in reqHeaders && reqHeaders[\"Content-Length\"] === undefined) ||\n                params.backupBinaryBody;\n            if (shouldReadBodyAndCalculateContentLength) {\n                const { body, contentLength } = yield calculateContentLengthAndBodyContent(params.bodyContent);\n                headers.append(\"content-length\", String(contentLength));\n                return body;\n            }\n        }\n    });\n}\nexports.autoDetectContentLengthAndReadBody = autoDetectContentLengthAndReadBody;\n// Helper method to auto detect content-length if not given.\nfunction calculateContentLengthAndBodyContent(body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const dataFeeder = chunker_1.default(body, Number.MAX_SAFE_INTEGER);\n            const dataPart = (yield dataFeeder.next()).value;\n            const content = dataPart.data;\n            const contentLength = dataPart.size;\n            return { body: content, contentLength };\n        }\n        catch (e) {\n            throw Error(\"SDK could not calculate contentLength from the request stream, please add contentLength and try again.\");\n        }\n    });\n}\n// Helper method to format Date Objects to RFC3339 timestamp string.\nfunction formatDateToRFC3339(date) {\n    return (date.getFullYear() +\n        \"-\" +\n        (\"0\" + (date.getMonth() + 1)).slice(-2) +\n        \"-\" +\n        (\"0\" + date.getDate()).slice(-2) +\n        \"T\" +\n        date.getHours() +\n        \":\" +\n        (\"0\" + date.getMinutes()).slice(-2) +\n        \":\" +\n        (\"0\" + date.getSeconds()).slice(-2) +\n        \"Z\");\n}\nexports.formatDateToRFC3339 = formatDateToRFC3339;\n// get string content from body\nfunction getStringFromRequestBody(body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof body === \"string\") {\n            return body;\n        }\n        if (body instanceof stream_1.Readable) {\n            // body is a stream type\n            return readStringFromReadable(body);\n        }\n        // else if (body instanceof Blob) {\n        //   // body is a blob type\n        //   return readStringFromBlob(body);\n        // } else if (body instanceof ReadableStream) {\n        //   // body is a fetch readableStream type\n        //   return readStringFromFetchReadableStream(body);\n        // }\n        else {\n            // unknown type, unable to read body content for signing, reject it\n            throw new Error(\"Unable to read body content to sign the request\");\n        }\n    });\n}\nexports.getStringFromRequestBody = getStringFromRequestBody;\nfunction isReadableStream(body) {\n    // Check if the body object contains all property of a ReadableStream\n    if (body.cancel && body.getReader && body.pipeThrough && body.pipeTo && body.tee) {\n        return true;\n    }\n    return false;\n}\nexports.isReadableStream = isReadableStream;\nfunction byteLength(input) {\n    if (input === null || input === undefined)\n        return 0;\n    if (typeof input === \"string\")\n        input = Buffer.from(input);\n    if (typeof input.byteLength === \"number\") {\n        return input.byteLength;\n    }\n    else if (typeof input.length === \"number\") {\n        return input.length;\n    }\n    else if (typeof input.size === \"number\") {\n        return input.size;\n    }\n    return undefined;\n}\nexports.byteLength = byteLength;\n//# sourceMappingURL=helper.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FetchHttpClient = void 0;\nconst promise = __importStar(require(\"es6-promise\"));\nrequire(\"isomorphic-fetch\");\nconst helper_1 = require(\"./helper\");\nconst Breaker = require(\"opossum\");\npromise.polyfill();\nclass FetchHttpClient {\n    constructor(signer, circuitBreaker) {\n        this.signer = signer;\n        this.circuitBreaker = null;\n        if (circuitBreaker) {\n            this.circuitBreaker = circuitBreaker;\n        }\n    }\n    send(req, forceExcludeBody = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Get Request body\n            const body = helper_1.getSignerAndReqBody(req.body, forceExcludeBody);\n            // Sign Request\n            if (this.signer) {\n                yield this.signer.signHttpRequest({\n                    method: req.method,\n                    headers: req.headers,\n                    uri: req.uri,\n                    body: body.signerBody\n                }, forceExcludeBody);\n            }\n            const request = new Request(req.uri, {\n                method: req.method,\n                headers: req.headers,\n                body: body.requestBody\n            });\n            if (this.circuitBreaker) {\n                return this.circuitBreaker\n                    .fire(request)\n                    .then((e) => {\n                    return e.response ? e.response : e;\n                })\n                    .catch((e) => {\n                    if (e.response) {\n                        // If error contains response field, it is an actual server error, return it.\n                        return e.response;\n                    }\n                    else {\n                        // These are client side error. Throw exception.\n                        throw e;\n                    }\n                });\n            }\n            else {\n                return fetch(new Request(req.uri, {\n                    method: req.method,\n                    headers: req.headers,\n                    body: body.requestBody\n                }));\n            }\n        });\n    }\n}\nexports.FetchHttpClient = FetchHttpClient;\n//# sourceMappingURL=http.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LOG = void 0;\nvar LOG;\n(function (LOG) {\n    var _logger;\n    Object.defineProperty(LOG, \"logger\", {\n        get: function () {\n            return _logger;\n        },\n        set: function (log) {\n            _logger = log;\n        }\n    });\n})(LOG = exports.LOG || (exports.LOG = {}));\n//# sourceMappingURL=log.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectSerializer = void 0;\nvar ObjectSerializer;\n(function (ObjectSerializer) {\n    function serialize(data, type, getJsonObj) {\n        if (getJsonObj) {\n            if (isList(type)) {\n                // constuct List of json object first, such as: List<NonPrimaryType>\n                // then return JSON.stringify of it\n                return JSON.stringify(data.map((item) => {\n                    return getJsonObj(item);\n                }));\n            }\n            else if (isMap(type)) {\n                // construct a map of json object, such as { [key: string]: model.NonPrimaryType }\n                // Notes: we don't have any spec fall into this case now, put it here just in case it\n                // has in the future\n                const obj = {};\n                Object.keys(data).forEach((key) => {\n                    obj[key] = getJsonObj(data[key]);\n                });\n                return JSON.stringify(obj);\n            }\n            else {\n                return JSON.stringify(getJsonObj(data));\n            }\n        }\n        // for type without getJsonObj callback use native stringify\n        return JSON.stringify(data);\n    }\n    ObjectSerializer.serialize = serialize;\n    function deserialize(data, type, bodyModel) {\n        if (typeof bodyModel === \"object\") {\n            if (isList(type)) {\n                return data.map((item) => {\n                    return bodyModel.getDeserializedJsonObj(item);\n                });\n            }\n            else if (isMap(type)) {\n                const obj = {};\n                Object.keys(data).forEach((key) => {\n                    obj[key] = bodyModel.getDeserializedJsonObj(data[key]);\n                });\n                return obj;\n            }\n            else {\n                return bodyModel.getDeserializedJsonObj(data);\n            }\n        }\n        return data;\n    }\n    ObjectSerializer.deserialize = deserialize;\n    // check if type is List\n    function isList(type) {\n        return type.lastIndexOf(\"Array<\", 0) === 0;\n    }\n    const mapRegex = new RegExp(\"^{\\\\[\\\\w*:\\\\w*]:model.\\\\w*}$\");\n    // check if type is a map, such as: { [key: string]: model.ComplexType }\n    function isMap(type) {\n        // remove whitespace from type for regex match\n        return mapRegex.test(type.replace(/\\s/g, \"\"));\n    }\n})(ObjectSerializer = exports.ObjectSerializer || (exports.ObjectSerializer = {}));\n//# sourceMappingURL=object-serializer.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginatedResponsesWithLimit = exports.paginatedRecordsWithLimit = exports.paginateResponses = exports.genericPaginateResponses = exports.paginateRecords = exports.genericPaginateRecords = void 0;\nfunction genericPaginate(request, listCall, getNextPageToken, setNextPageToken, getResults, limitedRecord) {\n    return __asyncGenerator(this, arguments, function* genericPaginate_1() {\n        let iteration = 0;\n        const pageSize = request.limit || 0;\n        if (limitedRecord && pageSize) {\n            // We don't want to request a page size bigger than limitedRecord\n            request.limit = Math.min(limitedRecord, pageSize);\n        }\n        else if (limitedRecord) {\n            // If we do not have a page size, but we do have a limitedRecord, we will set page size = limitedRecord\n            request.limit = limitedRecord;\n        }\n        while (true) {\n            //  Return early if user does not want any records...\n            if (limitedRecord === 0)\n                return yield __await(void 0);\n            //  If our request pageSize is bigger than the remaining records we need\n            //  Set pageSize to the recordsRemaining to not retrieve more than necessary.\n            if (request.limit && limitedRecord) {\n                let recordsRemaining = limitedRecord - iteration;\n                if (request.limit > recordsRemaining) {\n                    request.limit = recordsRemaining;\n                }\n            }\n            const response = yield __await(listCall(request));\n            for (const result of getResults(response)) {\n                if (result.items && result.items.length > 0) {\n                    iteration += result.items.length;\n                }\n                else if (result.listObjects && result.listObjects.objects) {\n                    iteration += result.listObjects.objects.length;\n                }\n                else {\n                    iteration++;\n                }\n                yield yield __await(result);\n                if (limitedRecord && iteration > limitedRecord - 1) {\n                    return yield __await(void 0);\n                }\n            }\n            const nextPageToken = getNextPageToken(response);\n            if (!nextPageToken) {\n                break;\n            }\n            setNextPageToken(request, nextPageToken);\n        }\n    });\n}\nfunction genericPaginateRecords(request, listCall, getNextPageToken, setNextPageToken, getItems, limitedRecord) {\n    return genericPaginate(request, listCall, getNextPageToken, setNextPageToken, getItems, limitedRecord);\n}\nexports.genericPaginateRecords = genericPaginateRecords;\nfunction paginateRecords(request, listCall, limitedRecord) {\n    return genericPaginateRecords(request, listCall, res => findNextPageToken(res), (req, nextPageToken) => findSetPageToken(req, nextPageToken), res => findResult(res), limitedRecord);\n}\nexports.paginateRecords = paginateRecords;\nfunction genericPaginateResponses(request, listCall, getNextPageToken, setNextPageToken, limitedRecord) {\n    return genericPaginate(request, listCall, getNextPageToken, setNextPageToken, res => [res], limitedRecord);\n}\nexports.genericPaginateResponses = genericPaginateResponses;\nfunction paginateResponses(request, listCall, limitedRecord) {\n    return genericPaginateResponses(request, listCall, response => findNextPageToken(response), (req, nextPageToken) => findSetPageToken(req, nextPageToken), limitedRecord);\n}\nexports.paginateResponses = paginateResponses;\n// Return a list of records up to limitedRecord. limitedRecord is optional. Do not pass limitedRecord if\n// want to retrieve all records.\nfunction paginatedRecordsWithLimit(request, listCall, limitedRecord) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const records = [];\n        const response = paginateRecords(request, listCall, limitedRecord);\n        let record = yield response.next();\n        while (record.done === false) {\n            records.push(record);\n            record = yield response.next();\n        }\n        return records;\n    });\n}\nexports.paginatedRecordsWithLimit = paginatedRecordsWithLimit;\nfunction paginatedResponsesWithLimit(request, listCall, limitedRecord) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let records = [];\n        const response = yield paginateResponses(request, listCall, limitedRecord);\n        let iterator = yield response.next();\n        let record = iterator.value;\n        while (iterator.done === false) {\n            record = iterator.value;\n            records.push(record);\n            iterator = yield response.next();\n        }\n        return records;\n    });\n}\nexports.paginatedResponsesWithLimit = paginatedResponsesWithLimit;\n// Not all function contains a property called ocpNextPage. ObjectStorage for example have an equivalence in listObject.nextStartWith\nfunction findNextPageToken(res) {\n    if (\"listObjects\" in res) {\n        return res.listObjects.nextStartWith;\n    }\n    return res.opcNextPage;\n}\n// Not all function contain a property called 'page'. Object storage for example, uses 'start' to fetch the next pagination.\nfunction findSetPageToken(req, nextPageToken) {\n    if (req.start) {\n        req.start = nextPageToken;\n    }\n    else {\n        req.page = nextPageToken;\n    }\n}\nfunction findResult(res) {\n    if (res.listObjects && res.listObjects.objects) {\n        return res.listObjects.objects;\n    }\n    return res.items;\n}\n//# sourceMappingURL=paginators.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Range = void 0;\nclass Range {\n    /**\n     * Construct an instance of [[Range]].\n     * @param startByte The start byte, if given.\n     * @param endByte  The end byte, if given.\n     * @param contentLength The content length as returned by the server, or null if unknown.\n     */\n    constructor(startByte, endByte, contentLength) {\n        this.startByte = startByte;\n        this.endByte = endByte;\n        this.contentLength = contentLength;\n        this.startByte = startByte;\n        this.endByte = endByte;\n        this.contentLength = contentLength;\n    }\n    /**\n     * Parse the \"content-range\" header per https://tools.ietf.org/html/rfc7233#section-4.2.\n     * <p>\n     * Note, this is only for successful responses (206).  It does not handle 416 (range not satisfiable).\n     * @param value The response header value.\n     * @return A new Range header.\n     */\n    static parse(value) {\n        console.debug(\"Attempting to parse range: %s\", value);\n        value = value.replace(\"bytes\", \"\").trim();\n        const parts = value.split(\"/\");\n        if (parts.length != 2)\n            throw Error(\"Must provide <range>/<length> format for range request: \" + value);\n        const byteRangePart = parts[0];\n        const contentLengthPart = parts[1];\n        const contentLength = contentLengthPart === \"*\" ? null : Number(contentLengthPart);\n        const byteValues = byteRangePart.split(\"-\", -1); // include trailing empty strings\n        if (byteValues.length != 2) {\n            throw new Error(\"Must provide <start>-<end> format for range request: \" + value);\n        }\n        const startByte = byteValues[0] === \"\" ? null : Number(byteValues[0]);\n        const endByte = byteValues[1] === \"\" ? null : Number(byteValues[1]);\n        if (startByte == null && endByte == null) {\n            throw new Error(\"Must provide start/end byte for range request: \" + value);\n        }\n        let range = new Range(startByte, endByte, contentLength);\n        return range;\n        return;\n    }\n}\nexports.Range = Range;\n//# sourceMappingURL=range.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Realm = void 0;\nclass Realm {\n    constructor(realmId, secondLevelDomain) {\n        this._secondLevelDomain = secondLevelDomain;\n        this._realmId = realmId;\n        Realm.KNOWN_REALMS.set(realmId, this);\n    }\n    get secondLevelDomain() {\n        return this._secondLevelDomain;\n    }\n    get realmId() {\n        return this._realmId;\n    }\n    static register(realmId, secondLevelDomain) {\n        if (!realmId)\n            throw Error(\"Realm Id can not be empty or undefined\");\n        if (!secondLevelDomain)\n            throw Error(\"secondLevelDomain can not be empty or undefined\");\n        realmId = realmId.trim().toLocaleLowerCase(\"en-US\");\n        secondLevelDomain = secondLevelDomain.trim().toLocaleLowerCase(\"en-US\");\n        const realm = Realm.KNOWN_REALMS.get(realmId);\n        if (realm) {\n            if (realm.secondLevelDomain !== secondLevelDomain) {\n                throw Error(\"RealmId \" +\n                    realmId +\n                    \" is already registered with  \" +\n                    realm.secondLevelDomain +\n                    \" It cannot be re-registered with a different secondLevelDomain\");\n            }\n            return realm;\n        }\n        return new Realm(realmId, secondLevelDomain);\n    }\n}\nexports.Realm = Realm;\nRealm.KNOWN_REALMS = new Map();\nRealm.OC1 = Realm.register(\"oc1\", \"oraclecloud.com\");\nRealm.OC2 = Realm.register(\"oc2\", \"oraclegovcloud.com\");\nRealm.OC3 = Realm.register(\"oc3\", \"oraclegovcloud.com\");\nRealm.OC4 = Realm.register(\"oc4\", \"oraclegovcloud.uk\");\nRealm.OC8 = Realm.register(\"oc8\", \"oraclecloud8.com\");\n//# sourceMappingURL=realm.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegionMetadataSchema = void 0;\nvar RegionMetadataSchema;\n(function (RegionMetadataSchema) {\n    /*\n     * Checks if the region info is valid\n     */\n    function isValidSchema(regionMetadataSchema) {\n        if (regionMetadataSchema.realmKey === undefined || regionMetadataSchema.realmKey.length <= 0)\n            return false;\n        if (regionMetadataSchema.realmDomainComponent === undefined ||\n            regionMetadataSchema.realmDomainComponent.length <= 0)\n            return false;\n        if (regionMetadataSchema.regionKey === undefined || regionMetadataSchema.regionKey.length <= 0)\n            return false;\n        if (regionMetadataSchema.regionIdentifier === undefined ||\n            regionMetadataSchema.regionIdentifier.length <= 0)\n            return false;\n        return true;\n    }\n    RegionMetadataSchema.isValidSchema = isValidSchema;\n})(RegionMetadataSchema = exports.RegionMetadataSchema || (exports.RegionMetadataSchema = {}));\n//# sourceMappingURL=region-metadata-schema.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Region = void 0;\nconst realm_1 = require(\"./realm\");\nconst config_file_reader_1 = require(\"./config-file-reader\");\nconst fs_1 = require(\"fs\");\nconst region_metadata_schema_1 = require(\"./region-metadata-schema\");\nconst http_1 = require(\"./http\");\nclass Region {\n    constructor(regionId, realm, regionCode) {\n        this._realm = realm;\n        this._regionId = regionId;\n        if (regionCode)\n            this._regionCode = regionCode;\n        Region.KNOWN_REGIONS.set(regionId, this);\n    }\n    get realm() {\n        return this._realm;\n    }\n    get regionId() {\n        return this._regionId;\n    }\n    get regionCode() {\n        return this._regionCode;\n    }\n    /**\n     * Return all known Regions in this version of the SDK, except possibly the region returned by IMDS (Instance Metadata\n     * Service, only available on OCI instances), since IMDS is not automatically contacted by this method.\n     *\n     * To ensure that this method also returns the region provided by IMDS, call {@link Region#enableInstanceMetadata()}\n     * explicitly before calling {@link Region#values()}.\n     *\n     */\n    static values() {\n        if (!Region.hasCalledForImds && !Region.hasWarnedAboutValuesWithoutInstanceMetadataService) {\n            console.log(\"Call to Regions.values() without having contacted IMDS (Instance Metadata Service, only available on OCI instances); if you do need the region from IMDS, call Region.enableInstanceMetadata() before calling Region.values()\");\n            Region.hasWarnedAboutValuesWithoutInstanceMetadataService = true;\n        }\n        Region.registerAllRegions();\n        return Array.from(this.KNOWN_REGIONS.values());\n    }\n    /**\n     *  Register all regions and sets status\n     */\n    static registerAllRegions() {\n        if (!Region.hasUsedConfigFile) {\n            Region.addRegionsFromConfigFile();\n        }\n        if (!Region.hasUsedEnvVar) {\n            Region.addRegionFromEnvVar();\n        }\n    }\n    static fromRegionId(regionId) {\n        /*\n         * load provided region from already registered regions if it exists\n         * else load provided region from region configuration file if it exists\n         * else load provided region from region metadeta environment variable\n         * else if instance metadeta service (IMDS) has been opted in, try loading region from IMDS\n         */\n        if (!regionId)\n            throw Error(\"RegionId can not be empty or undefined\");\n        regionId = regionId.trim().toLocaleLowerCase(\"en-US\");\n        let foundRegion = Region.KNOWN_REGIONS.get(regionId);\n        if (!foundRegion) {\n            Region.addRegionsFromConfigFile();\n            foundRegion = Region.KNOWN_REGIONS.get(regionId);\n        }\n        if (!foundRegion) {\n            Region.addRegionFromEnvVar();\n            foundRegion = Region.KNOWN_REGIONS.get(regionId);\n        }\n        if (!foundRegion && Region.hasCalledForImds) {\n            Region.addRegionFromImds();\n            foundRegion = Region.KNOWN_REGIONS.get(regionId);\n        }\n        return foundRegion;\n    }\n    // Adds regions from the config file\n    static addRegionsFromConfigFile() {\n        if (!Region.hasUsedConfigFile) {\n            Region.hasUsedConfigFile = true;\n            let expandedRegionConfigFilePath = config_file_reader_1.ConfigFileReader.expandUserHome(Region.REGIONS_CONFIG_FILE_PATH);\n            if (config_file_reader_1.ConfigFileReader.fileExists(expandedRegionConfigFilePath)) {\n                try {\n                    const fileContent = fs_1.readFileSync(expandedRegionConfigFilePath, \"utf8\");\n                    const regionMetadata = JSON.parse(fileContent);\n                    if (regionMetadata && regionMetadata.length > 0 && Array.isArray(regionMetadata)) {\n                        regionMetadata.map(metadata => {\n                            if (region_metadata_schema_1.RegionMetadataSchema.isValidSchema(metadata)) {\n                                Region.register(metadata.regionIdentifier, realm_1.Realm.register(metadata.realmKey, metadata.realmDomainComponent), metadata.regionKey);\n                            }\n                        });\n                    }\n                }\n                catch (error) {\n                    console.log(\"error reading or parsing region config file\");\n                }\n            }\n        }\n    }\n    // Adds region from the environment variable\n    static addRegionFromEnvVar() {\n        if (!Region.hasUsedEnvVar) {\n            Region.hasUsedEnvVar = true;\n            const envVarRegionMetadata = process.env[Region.OCI_REGION_METADATA_ENV_VAR];\n            if (envVarRegionMetadata) {\n                try {\n                    const regionMetadata = JSON.parse(envVarRegionMetadata);\n                    if (region_metadata_schema_1.RegionMetadataSchema.isValidSchema(regionMetadata)) {\n                        Region.register(regionMetadata.regionIdentifier, realm_1.Realm.register(regionMetadata.realmKey, regionMetadata.realmDomainComponent), regionMetadata.regionKey);\n                    }\n                }\n                catch (error) {\n                    console.log(\"error reading or parsing region metadata env var config file\");\n                }\n            }\n        }\n    }\n    // Add region from the Instance Metadata Service\n    static addRegionFromImds() {\n        if (Region.imdsRegionMetadata) {\n            Region.register(Region.imdsRegionMetadata.regionIdentifier, realm_1.Realm.register(Region.imdsRegionMetadata.realmKey, Region.imdsRegionMetadata.realmDomainComponent), Region.imdsRegionMetadata.regionKey);\n            Region.imdsRegionMetadata = undefined;\n        }\n    }\n    /*\n     * Enable instance metadata lookup for region info\n     */\n    static enableInstanceMetadata() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Region.hasCalledForImds) {\n                Region.hasCalledForImds = true;\n                try {\n                    const url = Region.IMDS_BASE_URL + \"instance/regionInfo/\";\n                    let headers = new Headers();\n                    headers.append(Region.CONTENT_TYPE_HEADER, Region.CONTENT_TYPE_HEADER_VALUE);\n                    headers.append(Region.AUTHORIZATION, Region.METADATA_AUTH_HEADERS);\n                    const httpClient = new http_1.FetchHttpClient(null);\n                    const response = yield httpClient.send({\n                        uri: url,\n                        method: \"GET\",\n                        headers: headers\n                    });\n                    const regionMetadata = (yield response.json());\n                    if (region_metadata_schema_1.RegionMetadataSchema.isValidSchema(regionMetadata)) {\n                        Region.imdsRegionMetadata = regionMetadata;\n                    }\n                }\n                catch (error) {\n                    console.log(\"Unable to retrieve region metadata from instance metadata service, reason :\" + error);\n                }\n            }\n        });\n    }\n    static register(regionId, realm, regionCode) {\n        if (!regionId)\n            throw Error(\"RegionId can not be empty or undefined\");\n        regionId = regionId.trim().toLocaleLowerCase(\"en-US\");\n        const region = Region.KNOWN_REGIONS.get(regionId);\n        if (region) {\n            if (region.realm.secondLevelDomain !== realm.secondLevelDomain) {\n                throw Error(\" Region \" +\n                    regionId +\n                    \" is already associated with another Realm \" +\n                    region.realm +\n                    \" It cannot be re-registered with a different realm.\");\n            }\n            return region;\n        }\n        if (regionCode) {\n            regionCode = regionCode.trim().toLocaleLowerCase(\"en-US\");\n        }\n        return new Region(regionId, realm, regionCode);\n    }\n    /**\n     * Function to get regionId based regionStr: regionStr can be a short code or regionId\n     * if it is a shortCode then we want to return the corresponding regionId\n     * @param regionStr\n     * @return regionId\n     */\n    static getRegionIdFromShortCode(regionStr) {\n        regionStr = regionStr.toLocaleLowerCase();\n        let region = Region.values().find(r => r.regionCode === regionStr);\n        if (region) {\n            return region.regionId;\n        }\n        // If region short code is not found in the SDK, add regions from the regions config file\n        Region.addRegionsFromConfigFile();\n        region = Region.values().find(r => r.regionCode === regionStr);\n        if (region) {\n            return region.regionId;\n        }\n        // else add region from environment variable, and then check for short code\n        region = Region.values().find(r => r.regionCode === regionStr);\n        if (region) {\n            return region.regionId;\n        }\n        // else add region from IMDS if it has been opted in, and then check for short code\n        Region.addRegionFromImds();\n        region = Region.values().find(r => r.regionCode === regionStr);\n        if (region) {\n            return region.regionId;\n        }\n        return regionStr;\n    }\n}\nexports.Region = Region;\nRegion.KNOWN_REGIONS = new Map();\nRegion.hasCalledForImds = false;\nRegion.hasUsedConfigFile = false;\nRegion.hasUsedEnvVar = false;\nRegion.hasWarnedAboutValuesWithoutInstanceMetadataService = false;\nRegion.REGIONS_CONFIG_FILE_PATH = \"~/.oci/regions-config.json\";\nRegion.OCI_REGION_METADATA_ENV_VAR = \"OCI_REGION_METADATA\";\nRegion.IMDS_BASE_URL = \"http://169.254.169.254/opc/v2/\";\nRegion.METADATA_AUTH_HEADERS = \"Bearer Oracle\";\nRegion.AUTHORIZATION = \"Authorization\";\nRegion.CONTENT_TYPE_HEADER = \"Content-Type\";\nRegion.CONTENT_TYPE_HEADER_VALUE = \"application/json\";\n// OC1\nRegion.AP_CHUNCHEON_1 = Region.register(\"ap-chuncheon-1\", realm_1.Realm.OC1, \"yny\");\nRegion.AP_MUMBAI_1 = Region.register(\"ap-mumbai-1\", realm_1.Realm.OC1, \"bom\");\nRegion.AP_HYDERABAD_1 = Region.register(\"ap-hyderabad-1\", realm_1.Realm.OC1, \"hyd\");\nRegion.AP_SEOUL_1 = Region.register(\"ap-seoul-1\", realm_1.Realm.OC1, \"icn\");\nRegion.AP_SYDNEY_1 = Region.register(\"ap-sydney-1\", realm_1.Realm.OC1, \"syd\");\nRegion.AP_MELBOURNE_1 = Region.register(\"ap-melbourne-1\", realm_1.Realm.OC1, \"mel\");\nRegion.AP_OSAKA_1 = Region.register(\"ap-osaka-1\", realm_1.Realm.OC1, \"kix\");\nRegion.AP_TOKYO_1 = Region.register(\"ap-tokyo-1\", realm_1.Realm.OC1, \"nrt\");\nRegion.CA_MONTREAL_1 = Region.register(\"ca-montreal-1\", realm_1.Realm.OC1, \"yul\");\nRegion.CA_TORONTO_1 = Region.register(\"ca-toronto-1\", realm_1.Realm.OC1, \"yyz\");\nRegion.EU_FRANKFURT_1 = Region.register(\"eu-frankfurt-1\", realm_1.Realm.OC1, \"fra\");\nRegion.EU_ZURICH_1 = Region.register(\"eu-zurich-1\", realm_1.Realm.OC1, \"zrh\");\nRegion.SA_SAOPAULO_1 = Region.register(\"sa-saopaulo-1\", realm_1.Realm.OC1, \"gru\");\nRegion.UK_CARDIFF_1 = Region.register(\"uk-cardiff-1\", realm_1.Realm.OC1, \"cwl\");\nRegion.UK_LONDON_1 = Region.register(\"uk-london-1\", realm_1.Realm.OC1, \"lhr\");\nRegion.US_ASHBURN_1 = Region.register(\"us-ashburn-1\", realm_1.Realm.OC1, \"iad\");\nRegion.US_PHOENIX_1 = Region.register(\"us-phoenix-1\", realm_1.Realm.OC1, \"phx\");\nRegion.EU_AMSTERDAM_1 = Region.register(\"eu-amsterdam-1\", realm_1.Realm.OC1, \"ams\");\nRegion.ME_JEDDAH_1 = Region.register(\"me-jeddah-1\", realm_1.Realm.OC1, \"jed\");\nRegion.US_SANJOSE_1 = Region.register(\"us-sanjose-1\", realm_1.Realm.OC1, \"sjc\");\nRegion.ME_DUBAI_1 = Region.register(\"me-dubai-1\", realm_1.Realm.OC1, \"dxb\");\nRegion.SA_SANTIAGO_1 = Region.register(\"sa-santiago-1\", realm_1.Realm.OC1, \"scl\");\nRegion.SA_VINHEDO_1 = Region.register(\"sa-vinhedo-1\", realm_1.Realm.OC1, \"vcp\");\n// OC2\nRegion.US_LANGLEY_1 = Region.register(\"us-langley-1\", realm_1.Realm.OC2, \"lfi\");\nRegion.US_LUKE_1 = Region.register(\"us-luke-1\", realm_1.Realm.OC2, \"luf\");\n// OC3\nRegion.US_GOV_ASHBURN_1 = Region.register(\"us-gov-ashburn-1\", realm_1.Realm.OC3, \"ric\");\nRegion.US_GOV_CHICAGO_1 = Region.register(\"us-gov-chicago-1\", realm_1.Realm.OC3, \"pia\");\nRegion.US_GOV_PHOENIX_1 = Region.register(\"us-gov-phoenix-1\", realm_1.Realm.OC3, \"tus\");\n// OC4\nRegion.UK_GOV_LONDON_1 = Region.register(\"uk-gov-london-1\", realm_1.Realm.OC4, \"ltn\");\nRegion.UK_GOV_CARDIFF_1 = Region.register(\"uk-gov-cardiff-1\", realm_1.Realm.OC4, \"brs\");\n// OC8\nRegion.AP_CHIYODA_1 = Region.register(\"ap-chiyoda-1\", realm_1.Realm.OC8, \"nja\");\nRegion.AP_IBARAKI_1 = Region.register(\"ap-ibaraki-1\", realm_1.Realm.OC8, \"ukb\");\n//# sourceMappingURL=region.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.composeRequest = void 0;\nconst helper_1 = require(\"./helper\");\nconst retry_token_header_1 = require(\"./retry-token-header\");\n/*\n * Composes and Signs an SDKRequest\n * @param RequestParams to create a request\n */\nfunction composeRequest(params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = computeHeaders(params);\n        const uri = computeUri(params);\n        let body = params.bodyContent;\n        // If body exists, check if content-length exists and check if user wants to back up binary request body\n        if (body) {\n            const content = yield helper_1.autoDetectContentLengthAndReadBody(headers, params);\n            body = content ? content : body;\n        }\n        return {\n            method: params.method,\n            headers: headers,\n            uri: uri,\n            body: body\n        };\n    });\n}\nexports.composeRequest = composeRequest;\nfunction computeUri(params) {\n    const path = validateAndComputePath(params.path, params.pathParams);\n    const queryString = stringify(params.queryParams);\n    let uri = params.baseEndpoint + path;\n    if (queryString) {\n        uri = uri + \"?\" + queryString;\n    }\n    return uri;\n}\nfunction validateAndComputePath(path, pathParams) {\n    if (pathParams) {\n        for (const [key, value] of Object.entries(pathParams)) {\n            if (value || value === false || value === 0) {\n                path = path.replace(key, encodeURIComponent(String(value)));\n            }\n            else {\n                throw new Error(`Missing required path parameter for ${key}`);\n            }\n        }\n    }\n    return path;\n}\nfunction computeHeaders(params) {\n    const headers = new Headers();\n    for (const [key, value] of Object.entries(params.defaultHeaders)) {\n        headers.append(key, String(value));\n    }\n    if (params.headerParams) {\n        for (const [key, value] of Object.entries(params.headerParams)) {\n            if (value) {\n                headers.append(key, String(value));\n            }\n        }\n    }\n    if (params.headerParams && retry_token_header_1.OPC_RETRY_TOKEN_HEADER in params.headerParams) {\n        retry_token_header_1.addRetryToken(headers);\n    }\n    helper_1.addAdditionalHeaders(headers, params);\n    return headers;\n}\nfunction stringify(queryParams) {\n    let qs = \"\";\n    if (queryParams) {\n        qs = Object.keys(queryParams)\n            .map(function (key) {\n            let value = queryParams[key];\n            if (Array.isArray(value)) {\n                let formatter = encoderforArrayFormat();\n                return value.reduce(formatter(key), []).join(\"&\");\n            }\n            // Format Date Object to RFC3339 timestamp string.\n            if (Object.prototype.toString.call(value) === \"[object Date]\" && value instanceof Date) {\n                return key + \"=\" + helper_1.formatDateToRFC3339(value);\n            }\n            else if (value || value === false || value === 0) {\n                return key + \"=\" + value;\n            }\n        })\n            .filter(key => key !== undefined && key !== null)\n            .join(\"&\");\n    }\n    return qs;\n}\nfunction encoderforArrayFormat() {\n    return (key) => (result, value) => {\n        if (value === undefined || value === null || value === \"\") {\n            return result;\n        }\n        return [...result, [key, \"=\", value].join(\"\")];\n    };\n}\n//# sourceMappingURL=request-generator.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.composeResponse = void 0;\nconst object_serializer_1 = require(\"./object-serializer\");\nconst helper_1 = require(\"./helper\");\n/*\n * Composes an SDKResponse.\n * @param ResponseParams to create a response\n */\nfunction composeResponse(params) {\n    const response = params.responseObject;\n    let content = params.body;\n    if (content) {\n        const bodyContent = object_serializer_1.ObjectSerializer.deserialize(content, params.type, params.bodyModel);\n        const key = params.bodyKey;\n        Object.assign(response, { [key]: bodyContent });\n    }\n    computeHeaders(params.responseHeaders, response);\n    return response;\n}\nexports.composeResponse = composeResponse;\nfunction computeHeaders(responseHeaders, response) {\n    if (responseHeaders) {\n        responseHeaders.forEach(header => {\n            if (header.value) {\n                Object.assign(response, {\n                    [header.key]: helper_1.convertStringToType(header.value, header.dataType)\n                });\n            }\n        });\n    }\n}\n//# sourceMappingURL=response-generator.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GenericRetrier = exports.NoRetryConfigurationDetails = exports.DefaultRetryCondition = void 0;\nconst waiter_1 = require(\"./waiter\");\nconst helper_1 = require(\"./helper\");\nconst __1 = require(\"..\");\nclass DefaultRetryCondition {\n    static shouldBeRetried(error) {\n        return (error.statusCode === 500 ||\n            error.statusCode === 502 ||\n            error.statusCode === 503 ||\n            error.statusCode === 504 ||\n            error.statusCode == -1 ||\n            isNaN(error.statusCode) || // no StatusCode means client side error. These are considered retryable.\n            (DefaultRetryCondition.RETRYABLE_SERVICE_ERRORS.has(error.statusCode) &&\n                DefaultRetryCondition.RETRYABLE_SERVICE_ERRORS.get(error.statusCode) === error.serviceCode));\n    }\n}\nexports.DefaultRetryCondition = DefaultRetryCondition;\n/**\n * Default retry condition for Retry mechanism\n * NOTE : Retries are not supported for requests that have binary or stream bodies\n */\nDefaultRetryCondition.RETRYABLE_SERVICE_ERRORS = new Map([\n    [409, \"IncorrectState\"],\n    [429, \"TooManyRequests\"]\n]);\nconst NO_RETRY_MAXIMUM_NUMBER_OF_ATTEMPTS = 1;\nconst NO_RETRY_MAXIMUM_DELAY_IN_SECONDS = 30;\nexports.NoRetryConfigurationDetails = {\n    terminationStrategy: new waiter_1.MaxAttemptsTerminationStrategy(NO_RETRY_MAXIMUM_NUMBER_OF_ATTEMPTS),\n    delayStrategy: new waiter_1.ExponentialBackoffDelayStrategyWithJitter(NO_RETRY_MAXIMUM_DELAY_IN_SECONDS),\n    retryCondition: DefaultRetryCondition.shouldBeRetried,\n    backupBinaryBody: false\n};\nclass GenericRetrier {\n    constructor(retryConfiguration) {\n        this._logger = undefined;\n        const preferredRetryConfig = Object.assign(Object.assign({}, exports.NoRetryConfigurationDetails), retryConfiguration);\n        this._retryConfiguration = preferredRetryConfig;\n    }\n    static get defaultRetryConfiguration() {\n        return GenericRetrier.DefaultRetryConfiguration;\n    }\n    static set defaultRetryConfiguration(retryConfig) {\n        GenericRetrier.DefaultRetryConfiguration = Object.assign(Object.assign({}, GenericRetrier.DefaultRetryConfiguration), retryConfig);\n    }\n    set logger(logger) {\n        this._logger = logger;\n    }\n    get backUpBinaryBody() {\n        return this.retryConfiguration.backupBinaryBody;\n    }\n    get retryConfiguration() {\n        return this._retryConfiguration;\n    }\n    static createPreferredRetrier(clientRetryConfiguration, requestRetryConfiguration) {\n        let retryConfigToUse = [requestRetryConfiguration, clientRetryConfiguration, {}].filter(configuration => configuration !== null && configuration !== undefined)[0];\n        retryConfigToUse = Object.assign(Object.assign({}, GenericRetrier.defaultRetryConfiguration), retryConfigToUse);\n        return new GenericRetrier(retryConfigToUse);\n    }\n    makeServiceCall(httpClient, request, excludeBody) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const waitContext = new waiter_1.WaitContextImpl();\n            let lastKnownError;\n            let shouldBeRetried = true;\n            while (true) {\n                try {\n                    this.addOpcClientRetryHeader(request);\n                    const response = yield httpClient.send(request, excludeBody);\n                    if (response.status && response.status >= 200 && response.status <= 299) {\n                        return response;\n                    }\n                    else if (response.code === \"EOPENBREAKER\") {\n                        // Circuit Breaker is in OPEN state\n                        const circuitBreakerError = response;\n                        const errorObject = new __1.OciError(circuitBreakerError.code, \"unknown code\", circuitBreakerError.message, \"unknown\");\n                        shouldBeRetried = this.retryConfiguration.retryCondition(errorObject); // TODO: need retryCondition to accept errorObject coming from Circuit Breaker\n                        lastKnownError = errorObject;\n                    }\n                    else {\n                        const errBody = yield helper_1.handleErrorBody(response);\n                        const errorObject = helper_1.handleErrorResponse(response, errBody);\n                        shouldBeRetried = this.retryConfiguration.retryCondition(errorObject);\n                        lastKnownError = errorObject;\n                    }\n                }\n                catch (err) {\n                    lastKnownError = new __1.OciError(err.code, \"unknown code\", err.message, \"unknown\");\n                    shouldBeRetried = true;\n                }\n                if (!shouldBeRetried || !GenericRetrier.isRequestRetryable(request)) {\n                    console.warn(`Request cannot be retried. Not Retrying. Exception occurred : ${lastKnownError}`);\n                    throw lastKnownError;\n                }\n                else if (this.retryConfiguration.terminationStrategy.shouldTerminate(waitContext)) {\n                    console.warn(`All retry attempts have exhausted. Total Attempts : ${waitContext.attemptCount +\n                        1}. Last exception occurred : ${lastKnownError}`);\n                    throw lastKnownError;\n                }\n                const delayTime = this.retryConfiguration.delayStrategy.delay(waitContext);\n                waitContext.attemptCount++;\n                console.warn(`Request failed with Exception : ${lastKnownError}\\nRetrying request -> Total Attempts : ${waitContext.attemptCount}, Retrying after ${delayTime} seconds...`);\n                yield waiter_1.delay(delayTime);\n                GenericRetrier.refreshRequest(request);\n            }\n        });\n    }\n    static refreshRequest(request) {\n        request.headers.set(\"x-date\", new Date().toUTCString());\n    }\n    addOpcClientRetryHeader(request) {\n        const terminationStrategy = this.retryConfiguration.terminationStrategy;\n        const opcClientRetryHeader = request.headers.get(GenericRetrier.OPC_CLIENT_RETRIES_HEADER);\n        if (terminationStrategy instanceof waiter_1.MaxAttemptsTerminationStrategy &&\n            terminationStrategy.maxAttempts > 1 &&\n            (opcClientRetryHeader === undefined || opcClientRetryHeader === null)) {\n            request.headers.set(GenericRetrier.OPC_CLIENT_RETRIES_HEADER, \"true\");\n        }\n    }\n    static isRequestRetryable(request) {\n        if (!request.body)\n            return true;\n        else if (request.body) {\n            return this.isRetryableStream(request.body);\n        }\n    }\n    static isRetryableStream(obj) {\n        if (obj instanceof Uint8Array || obj instanceof Buffer || typeof obj === \"string\") {\n            return true;\n        }\n        //Node.JS's Readable, JavaScript's ReadableStream & Blobs are not retry-able stream, return false\n        return false;\n    }\n}\nexports.GenericRetrier = GenericRetrier;\nGenericRetrier.OPC_CLIENT_RETRIES_HEADER = \"opc-client-retries\";\nGenericRetrier.DefaultRetryConfiguration = exports.NoRetryConfigurationDetails;\n//# sourceMappingURL=retrier.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n\n * This header is excluded from headers.ts as we need to use same retry token but new request token\n * which needs to be incorporated when we add retry strategy.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addRetryToken = exports.OPC_RETRY_TOKEN_HEADER = void 0;\nconst uuidv1 = require(\"uuid/v1\");\nexports.OPC_RETRY_TOKEN_HEADER = \"opc-retry-token\";\nfunction addRetryToken(headers) {\n    // if user has not passed opc-retry-token\n    if (!hasRetryToken(headers)) {\n        headers.append(exports.OPC_RETRY_TOKEN_HEADER, generateRetryToken());\n    }\n}\nexports.addRetryToken = addRetryToken;\nfunction hasRetryToken(headers) {\n    if (headers.has(exports.OPC_RETRY_TOKEN_HEADER)) {\n        return true;\n    }\n    return false;\n}\nfunction generateRetryToken() {\n    return uuidv1();\n}\n//# sourceMappingURL=retry-token-header.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRequestSigner = exports.SignerRequest = void 0;\nconst helper_1 = require(\"./helper\");\nconst jssha = require(\"jssha\");\nconst sshpk_1 = require(\"sshpk\");\nconst UrlParser = require(\"url\");\nconst delegate_auth_provider_1 = require(\"./auth/helpers/delegate-auth-provider\");\n// tslint:disable-next-line:no-var-requires\nconst httpSignature = require(\"http-signature\");\nconst HEADER_CONTENT_SHA = \"x-content-sha256\";\nconst HEADER_CONTENT_LEN = \"Content-Length\";\nconst HEADER_CONTENT_TYPE = \"Content-Type\";\nconst OPC_OBO_TOKEN = \"opc-obo-token\";\n// The Subtle crypto implementation in IE11 will silently fail to digest an empty string.\n// We have to manually define that value here to avoid hanging forever\nconst EMPTY_SHA = \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\";\nclass SignerRequest {\n    constructor(method, url, headers) {\n        this.headers = headers;\n        this.method = method;\n        this.path = UrlParser.parse(url).path;\n    }\n    getHeader(name) {\n        return this.headers.get(name);\n    }\n    setHeader(name, value) {\n        this.headers.set(name, value);\n    }\n}\nexports.SignerRequest = SignerRequest;\n/**\n * The default implementation of [[RequestSigner]].\n */\nclass DefaultRequestSigner {\n    /**\n     * Construct an instance of [[DefaultRequestSigner]].\n     * @param authenticationDetailsProvider the authentication details provider.\n     */\n    constructor(authenticationDetailsProvider) {\n        this.authenticationDetailsProvider = authenticationDetailsProvider;\n        this.delegationToken = \"\";\n        this.privateKey = \"\";\n        let options = {};\n        if (this.authenticationDetailsProvider.getPassphrase()) {\n            Object.assign(options, { passphrase: this.authenticationDetailsProvider.getPassphrase() });\n        }\n        // We can skip parsing private Key if we have an auth type that is not file based authentication.\n        // We will also set DefaultRequestSigner's delegation token from authenticationDetailsProvider before\n        // authenticationDetialsProvider gets changed to its true authentication provider.\n        if (this.authenticationDetailsProvider.getAuthType &&\n            this.authenticationDetailsProvider.getAuthType()) {\n            this.privateKeyBuffer = null;\n            const delegationToken = this.authenticationDetailsProvider.getDelegationToken();\n            this.delegationToken = delegationToken;\n            return;\n        }\n        this.privateKey = this.authenticationDetailsProvider.getPrivateKey();\n        this.privateKeyBuffer = sshpk_1.parsePrivateKey(this.authenticationDetailsProvider.getPrivateKey(), \"auto\", options).toBuffer(\"pem\", {});\n    }\n    /**\n     * Sign the http request.\n     * @param request http request.\n     * @param forceExcludeBody exclude body or not.\n     */\n    signHttpRequest(request, forceExcludeBody = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate missing headers required for signing\n            let options = {};\n            if (this.authenticationDetailsProvider.getPassphrase()) {\n                Object.assign(options, { passphrase: this.authenticationDetailsProvider.getPassphrase() });\n            }\n            if (!request.headers.has(\"host\")) {\n                const url = UrlParser.parse(request.uri);\n                if (url.host) {\n                    request.headers.set(\"host\", url.host);\n                }\n                else {\n                    throw new Error(\"Cannot parse host from url\");\n                }\n            }\n            if (!request.headers.has(\"x-date\")) {\n                request.headers.set(\"x-date\", new Date().toUTCString());\n            }\n            var headersToSign = [...DefaultRequestSigner.headersToSign];\n            if (this.delegationToken) {\n                request.headers.set(OPC_OBO_TOKEN, this.delegationToken);\n                headersToSign.push(OPC_OBO_TOKEN);\n            }\n            if (!forceExcludeBody &&\n                DefaultRequestSigner.methodsThatRequireExtraHeaders.indexOf(request.method.toUpperCase()) !==\n                    -1) {\n                if (!request.headers.has(HEADER_CONTENT_TYPE)) {\n                    request.headers.set(HEADER_CONTENT_TYPE, \"application/json\");\n                }\n                let contentLen = 0;\n                const shaObj = new jssha(\"SHA-256\", \"TEXT\");\n                if (request.body) {\n                    const bodyStringContent = yield helper_1.getStringFromRequestBody(request.body);\n                    shaObj.update(bodyStringContent);\n                    request.headers.set(HEADER_CONTENT_SHA, shaObj.getHash(\"B64\"));\n                    contentLen = Buffer.byteLength(bodyStringContent, \"utf8\");\n                }\n                if (contentLen == 0) {\n                    // if buffer is empty, it can only be an empty string payload\n                    request.headers.set(HEADER_CONTENT_SHA, EMPTY_SHA);\n                }\n                if (!request.headers.has(HEADER_CONTENT_LEN)) {\n                    request.headers.set(HEADER_CONTENT_LEN, `${contentLen}`);\n                }\n                headersToSign = headersToSign.concat(HEADER_CONTENT_TYPE, HEADER_CONTENT_LEN, HEADER_CONTENT_SHA);\n            }\n            // Always make the check to see if there is a true authenticationDetailsProvider to use\n            const provider = yield delegate_auth_provider_1.delegateAuthProvider(this.authenticationDetailsProvider);\n            if (provider) {\n                this.authenticationDetailsProvider = provider;\n            }\n            const keyId = yield this.authenticationDetailsProvider.getKeyId();\n            // Check if privateKey exists or if the authenticationDetailsProvider's private key have changed.\n            let authPrivateKey = this.authenticationDetailsProvider.getPrivateKey();\n            if (!this.privateKey || this.privateKey !== authPrivateKey) {\n                this.privateKey = authPrivateKey;\n                this.privateKeyBuffer = sshpk_1.parsePrivateKey(authPrivateKey, \"auto\", options).toBuffer(\"pem\", {});\n            }\n            httpSignature.sign(new SignerRequest(request.method, request.uri, request.headers), {\n                key: this.privateKeyBuffer,\n                keyId: keyId,\n                headers: headersToSign\n            });\n            const authorizationHeader = request.headers.get(\"authorization\");\n            if (authorizationHeader) {\n                request.headers.set(\"authorization\", authorizationHeader.replace(\"Signature \", 'Signature version=\"1\",'));\n            }\n            else {\n                throw new Error(\"Unable to sign request\");\n            }\n        });\n    }\n}\nexports.DefaultRequestSigner = DefaultRequestSigner;\nDefaultRequestSigner.headersToSign = [\"x-date\", \"(request-target)\", \"host\"];\nDefaultRequestSigner.methodsThatRequireExtraHeaders = [\"POST\", \"PUT\", \"PATCH\"];\n//# sourceMappingURL=signer.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n\n * Utility method to check if environment is node or browser\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCircuitBreakerSystemEnabled = exports.checkNotNull = exports.isEmpty = exports.isBrowser = void 0;\nconst circuit_breaker_1 = __importDefault(require(\"./circuit-breaker\"));\nfunction isBrowser() {\n    if (typeof window === \"undefined\") {\n        return false;\n    }\n    return true;\n}\nexports.isBrowser = isBrowser;\n// utility method checks if object is empty or not\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\nexports.isEmpty = isEmpty;\n// Utility method to check if value is null, else throw error with msg.\nfunction checkNotNull(value, msg) {\n    if (value) {\n        return value;\n    }\n    throw new Error(msg);\n}\nexports.checkNotNull = checkNotNull;\n// Utility method to check if circuit breaker should be created\n// This is used when no circuit breaker was created for the client, if not: Check if it was disabled at the client level / global level / environment level in respective order\n// return false means do not create circuit breaker.\nfunction isCircuitBreakerSystemEnabled(clientConfiguration) {\n    // Client level check\n    const clientLevelCheck = clientConfiguration &&\n        clientConfiguration.circuitBreaker &&\n        clientConfiguration.circuitBreaker.noCircuit;\n    if (clientLevelCheck ||\n        !circuit_breaker_1.default.EnableGlobalCircuitBreaker ||\n        circuit_breaker_1.default.EnableDefaultCircuitBreaker === \"false\") {\n        return false;\n    }\n    return true;\n}\nexports.isCircuitBreakerSystemEnabled = isCircuitBreakerSystemEnabled;\n//# sourceMappingURL=utils.js.map","\"use strict\";\n/**\n * Copyright (c) 2020, 2021 Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.genericWaiter = exports.genericTerminalConditionWaiter = exports.delay = exports.MaxTimeTerminationStrategy = exports.MaxAttemptsTerminationStrategy = exports.FixedTimeDelayStrategy = exports.ExponentialBackoffDelayStrategyWithJitter = exports.ExponentialBackoffDelayStrategy = exports.WaitContextImpl = void 0;\nconst __1 = require(\"..\");\nclass WaitContextImpl {\n    constructor() {\n        this.startTime = new Date();\n        this.attemptCount = 0;\n    }\n}\nexports.WaitContextImpl = WaitContextImpl;\nclass ExponentialBackoffDelayStrategy {\n    constructor(maxDelayInSeconds) {\n        this.maxDelayInSeconds = maxDelayInSeconds;\n    }\n    delay(context) {\n        const currentDelayInSeconds = Math.pow(2, context.attemptCount);\n        const delay = Math.min(currentDelayInSeconds, this.maxDelayInSeconds);\n        return delay;\n    }\n}\nexports.ExponentialBackoffDelayStrategy = ExponentialBackoffDelayStrategy;\nclass ExponentialBackoffDelayStrategyWithJitter extends ExponentialBackoffDelayStrategy {\n    constructor(maxDelayInSeconds) {\n        super(maxDelayInSeconds);\n        this.maxDelayInSeconds = maxDelayInSeconds;\n    }\n    delay(context) {\n        let jitterValue = Math.round(Math.random() * 1000) / 1000;\n        return super.delay(context) + jitterValue;\n    }\n}\nexports.ExponentialBackoffDelayStrategyWithJitter = ExponentialBackoffDelayStrategyWithJitter;\nclass FixedTimeDelayStrategy {\n    constructor(timeBetweenAttempsInSeconds) {\n        this.timeBetweenAttempsInSeconds = timeBetweenAttempsInSeconds;\n    }\n    delay(context) {\n        return this.timeBetweenAttempsInSeconds;\n    }\n}\nexports.FixedTimeDelayStrategy = FixedTimeDelayStrategy;\nclass MaxAttemptsTerminationStrategy {\n    constructor(maxAttempts) {\n        this._maxAttempts = maxAttempts - 1;\n    }\n    shouldTerminate(context) {\n        return context.attemptCount >= this._maxAttempts;\n    }\n    get maxAttempts() {\n        return this._maxAttempts;\n    }\n}\nexports.MaxAttemptsTerminationStrategy = MaxAttemptsTerminationStrategy;\nclass MaxTimeTerminationStrategy {\n    constructor(maxTimeInSeconds) {\n        this.maxTimeInSeconds = maxTimeInSeconds;\n    }\n    shouldTerminate(context) {\n        const endTime = new Date();\n        endTime.setTime(context.startTime.getTime() + this.maxTimeInSeconds * 1000);\n        return new Date() >= endTime;\n    }\n}\nexports.MaxTimeTerminationStrategy = MaxTimeTerminationStrategy;\nconst DefaultWaiterConfigurationDetails = {\n    terminationStrategy: new MaxTimeTerminationStrategy(1200),\n    delayStrategy: new ExponentialBackoffDelayStrategy(30)\n};\nfunction delay(second) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => setTimeout(resolve, second * 1000));\n    });\n}\nexports.delay = delay;\nfunction genericTerminalConditionWaiter(config, serviceCall, terminationPredicate, allow404 = false) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            return genericWaiter(config, serviceCall, terminationPredicate);\n        }\n        catch (ex) {\n            if (ex instanceof __1.OciError && ex.statusCode == 404 && allow404) {\n                return null;\n            }\n            throw ex;\n        }\n    });\n}\nexports.genericTerminalConditionWaiter = genericTerminalConditionWaiter;\nfunction genericWaiter(config, serviceCall, terminationPredicate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const waitContext = new WaitContextImpl();\n        const { terminationStrategy, delayStrategy } = Object.assign(Object.assign({}, DefaultWaiterConfigurationDetails), config);\n        while (true) {\n            const response = yield serviceCall();\n            if (terminationPredicate(response)) {\n                return response;\n            }\n            if (terminationStrategy.shouldTerminate(waitContext)) {\n                throw Error(`Termination strategy decided to terminate with context at: ${waitContext}`);\n            }\n            yield delay(delayStrategy.delay(waitContext));\n            waitContext.attemptCount++;\n        }\n    });\n}\nexports.genericWaiter = genericWaiter;\n//# sourceMappingURL=waiter.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityWaiter = exports.IdentityClient = exports.responses = exports.requests = exports.models = void 0;\nconst requests = __importStar(require(\"./lib/request\"));\nexports.requests = requests;\nconst models = __importStar(require(\"./lib/model\"));\nexports.models = models;\nconst responses = __importStar(require(\"./lib/response\"));\nexports.responses = responses;\nconst client = __importStar(require(\"./lib/client\"));\nconst identity_waiter = __importStar(require(\"./lib/identity-waiter\"));\nexports.IdentityClient = client.IdentityClient;\nexports.IdentityWaiter = identity_waiter.IdentityWaiter;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityClient = exports.IdentityApiKeys = void 0;\nconst common = require(\"oci-common\");\nconst model = __importStar(require(\"./model\"));\nconst oci_common_1 = require(\"oci-common\");\nconst identity_waiter_1 = require(\"./identity-waiter\");\nconst oci_common_2 = require(\"oci-common\");\n// ===============================================\n// This file is autogenerated - Please do not edit\n// ===============================================\nvar IdentityApiKeys;\n(function (IdentityApiKeys) {\n})(IdentityApiKeys = exports.IdentityApiKeys || (exports.IdentityApiKeys = {}));\nclass IdentityClient {\n    constructor(params, clientConfiguration) {\n        this[\"_endpoint\"] = \"\";\n        this[\"_defaultHeaders\"] = {};\n        this._circuitBreaker = null;\n        const requestSigner = params.authenticationDetailsProvider\n            ? new common.DefaultRequestSigner(params.authenticationDetailsProvider)\n            : null;\n        if (clientConfiguration) {\n            this._clientConfiguration = clientConfiguration;\n            this._circuitBreaker = clientConfiguration.circuitBreaker\n                ? clientConfiguration.circuitBreaker.circuit\n                : null;\n        }\n        this._httpClient =\n            params.httpClient || new common.FetchHttpClient(requestSigner, this._circuitBreaker);\n        if (params.authenticationDetailsProvider &&\n            common.isRegionProvider(params.authenticationDetailsProvider)) {\n            const provider = params.authenticationDetailsProvider;\n            if (provider.getRegion()) {\n                this.region = provider.getRegion();\n            }\n        }\n    }\n    /**\n     * Get the endpoint that is being used to call (ex, https://www.example.com).\n     */\n    get endpoint() {\n        return this._endpoint;\n    }\n    /**\n     * Sets the endpoint to call (ex, https://www.example.com).\n     * @param endpoint The endpoint of the service.\n     */\n    set endpoint(endpoint) {\n        this._endpoint = endpoint;\n        this._endpoint = this._endpoint + \"/20160918\";\n        if (this.logger)\n            this.logger.info(`IdentityClient endpoint set to ${this._endpoint}`);\n    }\n    get logger() {\n        return common.LOG.logger;\n    }\n    /**\n     * Sets the region to call (ex, Region.US_PHOENIX_1).\n     * Note, this will call {@link #endpoint(String) endpoint} after resolving the endpoint.\n     * @param region The region of the service.\n     */\n    set region(region) {\n        this.endpoint = common.EndpointBuilder.createEndpointFromRegion(IdentityClient.serviceEndpointTemplate, region);\n    }\n    /**\n     * Sets the regionId to call (ex, 'us-phoenix-1').\n     *\n     * Note, this will first try to map the region ID to a known Region and call {@link #region(Region) region}.\n     * If no known Region could be determined, it will create an endpoint assuming its in default Realm OC1\n     * and then call {@link #endpoint(String) endpoint}.\n     * @param regionId The public region ID.\n     */\n    set regionId(regionId) {\n        this.endpoint = common.EndpointBuilder.createEndpointFromRegionId(IdentityClient.serviceEndpointTemplate, regionId);\n    }\n    /**\n     * Creates a new IdentityWaiter for resources for this service.\n     *\n     * @param config The waiter configuration for termination and delay strategy\n     * @return The service waiters.\n     */\n    createWaiters(config) {\n        this._waiters = new identity_waiter_1.IdentityWaiter(this, config);\n        return this._waiters;\n    }\n    /**\n     * Gets the waiters available for resources for this service.\n     *\n     * @return The service waiters.\n     */\n    getWaiters() {\n        if (this._waiters) {\n            return this._waiters;\n        }\n        throw Error(\"Waiters do not exist. Please create waiters.\");\n    }\n    /**\n     * Activates the specified MFA TOTP device for the user. Activation requires manual interaction with the Console.\n     *\n     * @param ActivateMfaTotpDeviceRequest\n     * @return ActivateMfaTotpDeviceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ActivateMfaTotpDevice.ts.html |here} to see how to use ActivateMfaTotpDevice API.\n     */\n    activateMfaTotpDevice(activateMfaTotpDeviceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#activateMfaTotpDevice.\");\n            const pathParams = {\n                \"{userId}\": activateMfaTotpDeviceRequest.userId,\n                \"{mfaTotpDeviceId}\": activateMfaTotpDeviceRequest.mfaTotpDeviceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": activateMfaTotpDeviceRequest.ifMatch,\n                \"opc-retry-token\": activateMfaTotpDeviceRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, activateMfaTotpDeviceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices/{mfaTotpDeviceId}/actions/activate\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(activateMfaTotpDeviceRequest.mfaTotpToken, \"MfaTotpToken\", model.MfaTotpToken.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"mfaTotpDeviceSummary\",\n                    bodyModel: model.MfaTotpDeviceSummary,\n                    type: \"model.MfaTotpDeviceSummary\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Adds the specified user to the specified group and returns a `UserGroupMembership` object with its own OCID.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  *\n       * @param AddUserToGroupRequest\n       * @return AddUserToGroupResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/AddUserToGroup.ts.html |here} to see how to use AddUserToGroup API.\n       */\n    addUserToGroup(addUserToGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#addUserToGroup.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": addUserToGroupRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, addUserToGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/userGroupMemberships\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(addUserToGroupRequest.addUserToGroupDetails, \"AddUserToGroupDetails\", model.AddUserToGroupDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"userGroupMembership\",\n                    bodyModel: model.UserGroupMembership,\n                    type: \"model.UserGroupMembership\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Assembles tag defaults in the specified compartment and any parent compartments to determine\n     * the tags to apply. Tag defaults from parent compartments do not override tag defaults\n     * referencing the same tag in a compartment lower down the hierarchy. This set of tag defaults\n     * includes all tag defaults from the current compartment back to the root compartment.\n     *\n     * @param AssembleEffectiveTagSetRequest\n     * @return AssembleEffectiveTagSetResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/AssembleEffectiveTagSet.ts.html |here} to see how to use AssembleEffectiveTagSet API.\n     */\n    assembleEffectiveTagSet(assembleEffectiveTagSetRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#assembleEffectiveTagSet.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": assembleEffectiveTagSetRequest.compartmentId,\n                \"lifecycleState\": assembleEffectiveTagSetRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, assembleEffectiveTagSetRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults/actions/assembleEffectiveTagSet\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TagDefaultSummary,\n                    type: \"Array<model.TagDefaultSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes multiple resources in the compartment. All resources must be in the same compartment. You must have the appropriate\n     * permissions to delete the resources in the request. This API can only be invoked from the tenancy's\n     * [home region](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingregions.htm#Home). This operation creates a\n     * {@link WorkRequest}. Use the {@link #getWorkRequest(GetWorkRequestRequest) getWorkRequest}\n     * API to monitor the status of the bulk action.\n     *\n     * @param BulkDeleteResourcesRequest\n     * @return BulkDeleteResourcesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/BulkDeleteResources.ts.html |here} to see how to use BulkDeleteResources API.\n     */\n    bulkDeleteResources(bulkDeleteResourcesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#bulkDeleteResources.\");\n            const pathParams = {\n                \"{compartmentId}\": bulkDeleteResourcesRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": bulkDeleteResourcesRequest.opcRequestId,\n                \"opc-retry-token\": bulkDeleteResourcesRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, bulkDeleteResourcesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}/actions/bulkDeleteResources\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(bulkDeleteResourcesRequest.bulkDeleteResourcesDetails, \"BulkDeleteResourcesDetails\", model.BulkDeleteResourcesDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Deletes the specified tag key definitions. This operation triggers a process that removes the\n  * tags from all resources in your tenancy. The tag key definitions must be within the same tag namespace.\n  * <p>\n  The following actions happen immediately:\n  * \\u00A0\n  *   * If the tag is a cost-tracking tag, the tag no longer counts against your\n  *   10 cost-tracking tags limit, even if you do not disable the tag before running this operation.\n  *   * If the tag is used with dynamic groups, the rules that contain the tag are no longer\n  *   evaluated against the tag.\n  * <p>\n  After you start this operation, the state of the tag changes to DELETING, and tag removal\n  * from resources begins. This process can take up to 48 hours depending on the number of resources that\n  * are tagged and the regions in which those resources reside.\n  * <p>\n  When all tags have been removed, the state changes to DELETED. You cannot restore a deleted tag. After the tag state\n  * changes to DELETED, you can use the same tag name again.\n  * <p>\n  After you start this operation, you cannot start either the {@link #deleteTag(DeleteTagRequest) deleteTag} or the {@link #cascadeDeleteTagNamespace(CascadeDeleteTagNamespaceRequest) cascadeDeleteTagNamespace} operation until this process completes.\n  * <p>\n  In order to delete tags, you must first retire the tags. Use {@link #updateTag(UpdateTagRequest) updateTag}\n  * to retire a tag.\n  *\n       * @param BulkDeleteTagsRequest\n       * @return BulkDeleteTagsResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/BulkDeleteTags.ts.html |here} to see how to use BulkDeleteTags API.\n       */\n    bulkDeleteTags(bulkDeleteTagsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#bulkDeleteTags.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": bulkDeleteTagsRequest.opcRequestId,\n                \"opc-retry-token\": bulkDeleteTagsRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, bulkDeleteTagsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tags/actions/bulkDelete\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(bulkDeleteTagsRequest.bulkDeleteTagsDetails, \"BulkDeleteTagsDetails\", model.BulkDeleteTagsDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Edits the specified list of tag key definitions for the selected resources.\n  * This operation triggers a process that edits the tags on all selected resources. The possible actions are:\n  * <p>\n    * Add a defined tag when the tag does not already exist on the resource.\n  *   * Update the value for a defined tag when the tag is present on the resource.\n  *   * Add a defined tag when it does not already exist on the resource or update the value for a defined tag when the tag is present on the resource.\n  *   * Remove a defined tag from a resource. The tag is removed from the resource regardless of the tag value.\n  * <p>\n  See {@link #bulkEditOperationDetails(BulkEditOperationDetailsRequest) bulkEditOperationDetails} for more information.\n  * <p>\n  The edits can include a combination of operations and tag sets.\n  * However, multiple operations cannot apply to one key definition in the same request.\n  * For example, if one request adds `tag set-1` to a resource and sets a tag value to `tag set-2`,\n  * `tag set-1` and `tag set-2` cannot have any common tag definitions.\n  *\n       * @param BulkEditTagsRequest\n       * @return BulkEditTagsResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/BulkEditTags.ts.html |here} to see how to use BulkEditTags API.\n       */\n    bulkEditTags(bulkEditTagsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#bulkEditTags.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": bulkEditTagsRequest.opcRequestId,\n                \"opc-retry-token\": bulkEditTagsRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, bulkEditTagsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tags/actions/bulkEdit\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(bulkEditTagsRequest.bulkEditTagsDetails, \"BulkEditTagsDetails\", model.BulkEditTagsDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Moves multiple resources from one compartment to another. All resources must be in the same compartment.\n     * This API can only be invoked from the tenancy's [home region](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingregions.htm#Home).\n     * To move resources, you must have the appropriate permissions to move the resource in both the source and target\n     * compartments. This operation creates a {@link WorkRequest}.\n     * Use the {@link #getWorkRequest(GetWorkRequestRequest) getWorkRequest} API to monitor the status of the bulk action.\n     *\n     * @param BulkMoveResourcesRequest\n     * @return BulkMoveResourcesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/BulkMoveResources.ts.html |here} to see how to use BulkMoveResources API.\n     */\n    bulkMoveResources(bulkMoveResourcesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#bulkMoveResources.\");\n            const pathParams = {\n                \"{compartmentId}\": bulkMoveResourcesRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": bulkMoveResourcesRequest.opcRequestId,\n                \"opc-retry-token\": bulkMoveResourcesRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, bulkMoveResourcesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}/actions/bulkMoveResources\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(bulkMoveResourcesRequest.bulkMoveResourcesDetails, \"BulkMoveResourcesDetails\", model.BulkMoveResourcesDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Deletes the specified tag namespace. This operation triggers a process that removes all of the tags\n  * defined in the specified tag namespace from all resources in your tenancy and then deletes the tag namespace.\n  * <p>\n  After you start the delete operation:\n  * <p>\n    * New tag key definitions cannot be created under the namespace.\n  *   * The state of the tag namespace changes to DELETING.\n  *   * Tag removal from the resources begins.\n  * <p>\n  This process can take up to 48 hours depending on the number of tag definitions in the namespace, the number of resources\n  * that are tagged, and the locations of the regions in which those resources reside.\n  * <p>\n  After all tags are removed, the state changes to DELETED. You cannot restore a deleted tag namespace. After the deleted tag namespace\n  * changes its state to DELETED, you can use the name of the deleted tag namespace again.\n  * <p>\n  After you start this operation, you cannot start either the {@link #deleteTag(DeleteTagRequest) deleteTag} or the {@link #bulkDeleteTags(BulkDeleteTagsRequest) bulkDeleteTags} operation until this process completes.\n  * <p>\n  To delete a tag namespace, you must first retire it. Use {@link #updateTagNamespace(UpdateTagNamespaceRequest) updateTagNamespace}\n  * to retire a tag namespace.\n  *\n       * @param CascadeDeleteTagNamespaceRequest\n       * @return CascadeDeleteTagNamespaceResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CascadeDeleteTagNamespace.ts.html |here} to see how to use CascadeDeleteTagNamespace API.\n       */\n    cascadeDeleteTagNamespace(cascadeDeleteTagNamespaceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#cascadeDeleteTagNamespace.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": cascadeDeleteTagNamespaceRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": cascadeDeleteTagNamespaceRequest.ifMatch,\n                \"opc-request-id\": cascadeDeleteTagNamespaceRequest.opcRequestId,\n                \"opc-retry-token\": cascadeDeleteTagNamespaceRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, cascadeDeleteTagNamespaceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/actions/cascadeDelete\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Moves the specified tag namespace to the specified compartment within the same tenancy.\n  * <p>\n  To move the tag namespace, you must have the manage tag-namespaces permission on both compartments.\n  * For more information about IAM policies, see [Details for IAM](https://docs.cloud.oracle.com/Content/Identity/Reference/iampolicyreference.htm).\n  * <p>\n  Moving a tag namespace moves all the tag key definitions contained in the tag namespace.\n  *\n       * @param ChangeTagNamespaceCompartmentRequest\n       * @return ChangeTagNamespaceCompartmentResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ChangeTagNamespaceCompartment.ts.html |here} to see how to use ChangeTagNamespaceCompartment API.\n       */\n    changeTagNamespaceCompartment(changeTagNamespaceCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#changeTagNamespaceCompartment.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": changeTagNamespaceCompartmentRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": changeTagNamespaceCompartmentRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, changeTagNamespaceCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/actions/changeCompartment\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(changeTagNamespaceCompartmentRequest.changeTagNamespaceCompartmentDetail, \"ChangeTagNamespaceCompartmentDetail\", model.ChangeTagNamespaceCompartmentDetail.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new auth token for the specified user. For information about what auth tokens are for, see\n  * [Managing User Credentials](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingcredentials.htm).\n  * <p>\n  You must specify a *description* for the auth token (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with\n  * {@link #updateAuthToken(UpdateAuthTokenRequest) updateAuthToken}.\n  * <p>\n  Every user has permission to create an auth token for *their own user ID*. An administrator in your organization\n  * does not need to write a policy to give users this ability. To compare, administrators who have permission to the\n  * tenancy can use this operation to create an auth token for any user, including themselves.\n  *\n       * @param CreateAuthTokenRequest\n       * @return CreateAuthTokenResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateAuthToken.ts.html |here} to see how to use CreateAuthToken API.\n       */\n    createAuthToken(createAuthTokenRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createAuthToken.\");\n            const pathParams = {\n                \"{userId}\": createAuthTokenRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createAuthTokenRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createAuthTokenRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/authTokens\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createAuthTokenRequest.createAuthTokenDetails, \"CreateAuthTokenDetails\", model.CreateAuthTokenDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"authToken\",\n                    bodyModel: model.AuthToken,\n                    type: \"model.AuthToken\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new compartment in the specified compartment.\n  * <p>\n  **Important:** Compartments cannot be deleted.\n  * <p>\n  Specify the parent compartment's OCID as the compartment ID in the request object. Remember that the tenancy\n  * is simply the root compartment. For information about OCIDs, see\n  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the compartment, which must be unique across all compartments in\n  * your tenancy. You can use this name or the OCID when writing policies that apply\n  * to the compartment. For more information about policies, see\n  * [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm).\n  * <p>\n  You must also specify a *description* for the compartment (although it can be an empty string). It does\n  * not have to be unique, and you can change it anytime with\n  * {@link #updateCompartment(UpdateCompartmentRequest) updateCompartment}.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  *\n       * @param CreateCompartmentRequest\n       * @return CreateCompartmentResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateCompartment.ts.html |here} to see how to use CreateCompartment API.\n       */\n    createCompartment(createCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createCompartment.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createCompartmentRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createCompartmentRequest.createCompartmentDetails, \"CreateCompartmentDetails\", model.CreateCompartmentDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"compartment\",\n                    bodyModel: model.Compartment,\n                    type: \"model.Compartment\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new secret key for the specified user. Secret keys are used for authentication with the Object Storage Service's Amazon S3\n  * compatible API. The secret key consists of an Access Key/Secret Key pair. For information, see\n  * [Managing User Credentials](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingcredentials.htm).\n  * <p>\n  You must specify a *description* for the secret key (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with\n  * {@link #updateCustomerSecretKey(UpdateCustomerSecretKeyRequest) updateCustomerSecretKey}.\n  * <p>\n  Every user has permission to create a secret key for *their own user ID*. An administrator in your organization\n  * does not need to write a policy to give users this ability. To compare, administrators who have permission to the\n  * tenancy can use this operation to create a secret key for any user, including themselves.\n  *\n       * @param CreateCustomerSecretKeyRequest\n       * @return CreateCustomerSecretKeyResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateCustomerSecretKey.ts.html |here} to see how to use CreateCustomerSecretKey API.\n       */\n    createCustomerSecretKey(createCustomerSecretKeyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createCustomerSecretKey.\");\n            const pathParams = {\n                \"{userId}\": createCustomerSecretKeyRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createCustomerSecretKeyRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createCustomerSecretKeyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/customerSecretKeys\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createCustomerSecretKeyRequest.createCustomerSecretKeyDetails, \"CreateCustomerSecretKeyDetails\", model.CreateCustomerSecretKeyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"customerSecretKey\",\n                    bodyModel: model.CustomerSecretKey,\n                    type: \"model.CustomerSecretKey\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new dynamic group in your tenancy.\n  * <p>\n  You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy\n  * is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)\n  * reside within the tenancy itself, unlike cloud resources such as compute instances, which typically\n  * reside within compartments inside the tenancy. For information about OCIDs, see\n  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the dynamic group, which must be unique across all dynamic groups in your\n  * tenancy, and cannot be changed. Note that this name has to be also unique across all groups in your tenancy.\n  * You can use this name or the OCID when writing policies that apply to the dynamic group. For more information\n  * about policies, see [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm).\n  * <p>\n  You must also specify a *description* for the dynamic group (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with {@link #updateDynamicGroup(UpdateDynamicGroupRequest) updateDynamicGroup}.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  *\n       * @param CreateDynamicGroupRequest\n       * @return CreateDynamicGroupResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateDynamicGroup.ts.html |here} to see how to use CreateDynamicGroup API.\n       */\n    createDynamicGroup(createDynamicGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createDynamicGroup.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createDynamicGroupRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createDynamicGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/dynamicGroups\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createDynamicGroupRequest.createDynamicGroupDetails, \"CreateDynamicGroupDetails\", model.CreateDynamicGroupDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"dynamicGroup\",\n                    bodyModel: model.DynamicGroup,\n                    type: \"model.DynamicGroup\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new group in your tenancy.\n  * <p>\n  You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy\n  * is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)\n  * reside within the tenancy itself, unlike cloud resources such as compute instances, which typically\n  * reside within compartments inside the tenancy. For information about OCIDs, see\n  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the group, which must be unique across all groups in your tenancy and\n  * cannot be changed. You can use this name or the OCID when writing policies that apply to the group. For more\n  * information about policies, see [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm).\n  * <p>\n  You must also specify a *description* for the group (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with {@link #updateGroup(UpdateGroupRequest) updateGroup}.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  * <p>\n  After creating the group, you need to put users in it and write policies for it.\n  * See {@link #addUserToGroup(AddUserToGroupRequest) addUserToGroup} and\n  * {@link #createPolicy(CreatePolicyRequest) createPolicy}.\n  *\n       * @param CreateGroupRequest\n       * @return CreateGroupResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateGroup.ts.html |here} to see how to use CreateGroup API.\n       */\n    createGroup(createGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createGroup.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createGroupRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/groups\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createGroupRequest.createGroupDetails, \"CreateGroupDetails\", model.CreateGroupDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"group\",\n                    bodyModel: model.Group,\n                    type: \"model.Group\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new identity provider in your tenancy. For more information, see\n  * [Identity Providers and Federation](https://docs.cloud.oracle.com/Content/Identity/Concepts/federation.htm).\n  * <p>\n  You must specify your tenancy's OCID as the compartment ID in the request object.\n  * Remember that the tenancy is simply the root compartment. For information about\n  * OCIDs, see [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the `IdentityProvider`, which must be unique\n  * across all `IdentityProvider` objects in your tenancy and cannot be changed.\n  * <p>\n  You must also specify a *description* for the `IdentityProvider` (although\n  * it can be an empty string). It does not have to be unique, and you can change\n  * it anytime with\n  * {@link #updateIdentityProvider(UpdateIdentityProviderRequest) updateIdentityProvider}.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily\n  * be CREATING. Before using the object, first make sure its `lifecycleState` has\n  * changed to ACTIVE.\n  *\n       * @param CreateIdentityProviderRequest\n       * @return CreateIdentityProviderResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateIdentityProvider.ts.html |here} to see how to use CreateIdentityProvider API.\n       */\n    createIdentityProvider(createIdentityProviderRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createIdentityProvider.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createIdentityProviderRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createIdentityProviderRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createIdentityProviderRequest.createIdentityProviderDetails, \"CreateIdentityProviderDetails\", model.CreateIdentityProviderDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"identityProvider\",\n                    bodyModel: model.IdentityProvider,\n                    type: \"model.IdentityProvider\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates a single mapping between an IdP group and an IAM Service\n     * {@link Group}.\n     *\n     * @param CreateIdpGroupMappingRequest\n     * @return CreateIdpGroupMappingResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateIdpGroupMapping.ts.html |here} to see how to use CreateIdpGroupMapping API.\n     */\n    createIdpGroupMapping(createIdpGroupMappingRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createIdpGroupMapping.\");\n            const pathParams = {\n                \"{identityProviderId}\": createIdpGroupMappingRequest.identityProviderId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createIdpGroupMappingRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createIdpGroupMappingRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groupMappings\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createIdpGroupMappingRequest.createIdpGroupMappingDetails, \"CreateIdpGroupMappingDetails\", model.CreateIdpGroupMappingDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"idpGroupMapping\",\n                    bodyModel: model.IdpGroupMapping,\n                    type: \"model.IdpGroupMapping\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates a new MFA TOTP device for the user. A user can have one MFA TOTP device.\n     *\n     * @param CreateMfaTotpDeviceRequest\n     * @return CreateMfaTotpDeviceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateMfaTotpDevice.ts.html |here} to see how to use CreateMfaTotpDevice API.\n     */\n    createMfaTotpDevice(createMfaTotpDeviceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createMfaTotpDevice.\");\n            const pathParams = {\n                \"{userId}\": createMfaTotpDeviceRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createMfaTotpDeviceRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createMfaTotpDeviceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"mfaTotpDevice\",\n                    bodyModel: model.MfaTotpDevice,\n                    type: \"model.MfaTotpDevice\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new network source in your tenancy.\n  * <p>\n  You must specify your tenancy's OCID as the compartment ID in the request object (remember that the tenancy\n  * is simply the root compartment). Notice that IAM resources (users, groups, compartments, and some policies)\n  * reside within the tenancy itself, unlike cloud resources such as compute instances, which typically\n  * reside within compartments inside the tenancy. For information about OCIDs, see\n  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the network source, which must be unique across all network sources in your\n  * tenancy, and cannot be changed.\n  * You can use this name or the OCID when writing policies that apply to the network source. For more information\n  * about policies, see [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm).\n  * <p>\n  You must also specify a *description* for the network source (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with {@link #updateNetworkSource(UpdateNetworkSourceRequest) updateNetworkSource}.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  * <p>\n  After your network resource is created, you can use it in policy to restrict access to only requests made from an allowed\n  * IP address specified in your network source. For more information, see [Managing Network Sources](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingnetworksources.htm).\n  *\n       * @param CreateNetworkSourceRequest\n       * @return CreateNetworkSourceResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateNetworkSource.ts.html |here} to see how to use CreateNetworkSource API.\n       */\n    createNetworkSource(createNetworkSourceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createNetworkSource.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createNetworkSourceRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createNetworkSourceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/networkSources\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createNetworkSourceRequest.createNetworkSourceDetails, \"CreateNetworkSourceDetails\", model.CreateNetworkSourceDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"networkSources\",\n                    bodyModel: model.NetworkSources,\n                    type: \"model.NetworkSources\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates Oauth token for the user\n     *\n     * @param CreateOAuthClientCredentialRequest\n     * @return CreateOAuthClientCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateOAuthClientCredential.ts.html |here} to see how to use CreateOAuthClientCredential API.\n     */\n    createOAuthClientCredential(createOAuthClientCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createOAuthClientCredential.\");\n            const pathParams = {\n                \"{userId}\": createOAuthClientCredentialRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createOAuthClientCredentialRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createOAuthClientCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/oauth2ClientCredentials\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createOAuthClientCredentialRequest.createOAuth2ClientCredentialDetails, \"CreateOAuth2ClientCredentialDetails\", model.CreateOAuth2ClientCredentialDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"oAuth2ClientCredential\",\n                    bodyModel: model.OAuth2ClientCredential,\n                    type: \"model.OAuth2ClientCredential\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new Console one-time password for the specified user. For more information about user\n  * credentials, see [User Credentials](https://docs.cloud.oracle.com/Content/Identity/Concepts/usercredentials.htm).\n  * <p>\n  Use this operation after creating a new user, or if a user forgets their password. The new one-time\n  * password is returned to you in the response, and you must securely deliver it to the user. They'll\n  * be prompted to change this password the next time they sign in to the Console. If they don't change\n  * it within 7 days, the password will expire and you'll need to create a new one-time password for the\n  * user.\n  * <p>\n  **Note:** The user's Console login is the unique name you specified when you created the user\n  * (see {@link #createUser(CreateUserRequest) createUser}).\n  *\n       * @param CreateOrResetUIPasswordRequest\n       * @return CreateOrResetUIPasswordResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateOrResetUIPassword.ts.html |here} to see how to use CreateOrResetUIPassword API.\n       */\n    createOrResetUIPassword(createOrResetUIPasswordRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createOrResetUIPassword.\");\n            const pathParams = {\n                \"{userId}\": createOrResetUIPasswordRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createOrResetUIPasswordRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createOrResetUIPasswordRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/uiPassword\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"uIPassword\",\n                    bodyModel: model.UIPassword,\n                    type: \"model.UIPassword\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new policy in the specified compartment (either the tenancy or another of your compartments).\n  * If you're new to policies, see [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).\n  * <p>\n  You must specify a *name* for the policy, which must be unique across all policies in your tenancy\n  * and cannot be changed.\n  * <p>\n  You must also specify a *description* for the policy (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with {@link #updatePolicy(UpdatePolicyRequest) updatePolicy}.\n  * <p>\n  You must specify one or more policy statements in the statements array. For information about writing\n  * policies, see [How Policies Work](https://docs.cloud.oracle.com/Content/Identity/Concepts/policies.htm) and\n  * [Common Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/commonpolicies.htm).\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using the\n  * object, first make sure its `lifecycleState` has changed to ACTIVE.\n  * <p>\n  New policies take effect typically within 10 seconds.\n  *\n       * @param CreatePolicyRequest\n       * @return CreatePolicyResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreatePolicy.ts.html |here} to see how to use CreatePolicy API.\n       */\n    createPolicy(createPolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createPolicy.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createPolicyRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createPolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/policies\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createPolicyRequest.createPolicyDetails, \"CreatePolicyDetails\", model.CreatePolicyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"policy\",\n                    bodyModel: model.Policy,\n                    type: \"model.Policy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates a subscription to a region for a tenancy.\n     *\n     * @param CreateRegionSubscriptionRequest\n     * @return CreateRegionSubscriptionResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateRegionSubscription.ts.html |here} to see how to use CreateRegionSubscription API.\n     */\n    createRegionSubscription(createRegionSubscriptionRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createRegionSubscription.\");\n            const pathParams = {\n                \"{tenancyId}\": createRegionSubscriptionRequest.tenancyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createRegionSubscriptionRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createRegionSubscriptionRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tenancies/{tenancyId}/regionSubscriptions\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createRegionSubscriptionRequest.createRegionSubscriptionDetails, \"CreateRegionSubscriptionDetails\", model.CreateRegionSubscriptionDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"regionSubscription\",\n                    bodyModel: model.RegionSubscription,\n                    type: \"model.RegionSubscription\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Creates a new SMTP credential for the specified user. An SMTP credential has an SMTP user name and an SMTP password.\n     * You must specify a *description* for the SMTP credential (although it can be an empty string). It does not\n     * have to be unique, and you can change it anytime with\n     * {@link #updateSmtpCredential(UpdateSmtpCredentialRequest) updateSmtpCredential}.\n     *\n     * @param CreateSmtpCredentialRequest\n     * @return CreateSmtpCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateSmtpCredential.ts.html |here} to see how to use CreateSmtpCredential API.\n     */\n    createSmtpCredential(createSmtpCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createSmtpCredential.\");\n            const pathParams = {\n                \"{userId}\": createSmtpCredentialRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createSmtpCredentialRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createSmtpCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/smtpCredentials\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createSmtpCredentialRequest.createSmtpCredentialDetails, \"CreateSmtpCredentialDetails\", model.CreateSmtpCredentialDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"smtpCredential\",\n                    bodyModel: model.SmtpCredential,\n                    type: \"model.SmtpCredential\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * **Deprecated. Use {@link #createAuthToken(CreateAuthTokenRequest) createAuthToken} instead.**\n  * <p>\n  Creates a new Swift password for the specified user. For information about what Swift passwords are for, see\n  * [Managing User Credentials](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingcredentials.htm).\n  * <p>\n  You must specify a *description* for the Swift password (although it can be an empty string). It does not\n  * have to be unique, and you can change it anytime with\n  * {@link #updateSwiftPassword(UpdateSwiftPasswordRequest) updateSwiftPassword}.\n  * <p>\n  Every user has permission to create a Swift password for *their own user ID*. An administrator in your organization\n  * does not need to write a policy to give users this ability. To compare, administrators who have permission to the\n  * tenancy can use this operation to create a Swift password for any user, including themselves.\n  *\n       * @param CreateSwiftPasswordRequest\n       * @return CreateSwiftPasswordResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateSwiftPassword.ts.html |here} to see how to use CreateSwiftPassword API.\n       */\n    createSwiftPassword(createSwiftPasswordRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createSwiftPassword.\");\n            const pathParams = {\n                \"{userId}\": createSwiftPasswordRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createSwiftPasswordRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createSwiftPasswordRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/swiftPasswords\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createSwiftPasswordRequest.createSwiftPasswordDetails, \"CreateSwiftPasswordDetails\", model.CreateSwiftPasswordDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"swiftPassword\",\n                    bodyModel: model.SwiftPassword,\n                    type: \"model.SwiftPassword\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new tag in the specified tag namespace.\n  * <p>\n  The tag requires either the OCID or the name of the tag namespace that will contain this\n  * tag definition.\n  * <p>\n  You must specify a *name* for the tag, which must be unique across all tags in the tag namespace\n  * and cannot be changed. The name can contain any ASCII character except the space (_) or period (.) characters.\n  * Names are case insensitive. That means, for example, \\\"myTag\\\" and \\\"mytag\\\" are not allowed in the same namespace.\n  * If you specify a name that's already in use in the tag namespace, a 409 error is returned.\n  * <p>\n  The tag must have a *description*. It does not have to be unique, and you can change it with\n  * {@link #updateTag(UpdateTagRequest) updateTag}.\n  * <p>\n  The tag must have a value type, which is specified with a validator. Tags can use either a\n  * static value or a list of possible values. Static values are entered by a user applying the tag\n  * to a resource. Lists are created by you and the user must apply a value from the list. Lists\n  * are validiated.\n  * <p>\n  * If no `validator` is set, the user applying the tag to a resource can type in a static\n  * value or leave the tag value empty.\n  * * If a `validator` is set, the user applying the tag to a resource must select from a list\n  * of values that you supply with {@link #enumTagDefinitionValidator(EnumTagDefinitionValidatorRequest) enumTagDefinitionValidator}.\n  *\n       * @param CreateTagRequest\n       * @return CreateTagResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateTag.ts.html |here} to see how to use CreateTag API.\n       */\n    createTag(createTagRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createTag.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": createTagRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createTagRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createTagRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/tags\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createTagRequest.createTagDetails, \"CreateTagDetails\", model.CreateTagDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tag\",\n                    bodyModel: model.Tag,\n                    type: \"model.Tag\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new tag default in the specified compartment for the specified tag definition.\n  * <p>\n  If you specify that a value is required, a value is set during resource creation (either by\n  * the user creating the resource or another tag defualt). If no value is set, resource creation\n  * is blocked.\n  * <p>\n  * If the `isRequired` flag is set to \\\"true\\\", the value is set during resource creation.\n  * * If the `isRequired` flag is set to \\\"false\\\", the value you enter is set during resource creation.\n  *\n       * @param CreateTagDefaultRequest\n       * @return CreateTagDefaultResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateTagDefault.ts.html |here} to see how to use CreateTagDefault API.\n       */\n    createTagDefault(createTagDefaultRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createTagDefault.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createTagDefaultRequest.opcRetryToken,\n                \"opc-request-id\": createTagDefaultRequest.opcRequestId\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createTagDefaultRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createTagDefaultRequest.createTagDefaultDetails, \"CreateTagDefaultDetails\", model.CreateTagDefaultDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagDefault\",\n                    bodyModel: model.TagDefault,\n                    type: \"model.TagDefault\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new tag namespace in the specified compartment.\n  * <p>\n  You must specify the compartment ID in the request object (remember that the tenancy is simply the root\n  * compartment).\n  * <p>\n  You must also specify a *name* for the namespace, which must be unique across all namespaces in your tenancy\n  * and cannot be changed. The name can contain any ASCII character except the space (_) or period (.).\n  * Names are case insensitive. That means, for example, \\\"myNamespace\\\" and \\\"mynamespace\\\" are not allowed\n  * in the same tenancy. Once you created a namespace, you cannot change the name.\n  * If you specify a name that's already in use in the tenancy, a 409 error is returned.\n  * <p>\n  You must also specify a *description* for the namespace.\n  * It does not have to be unique, and you can change it with\n  * {@link #updateTagNamespace(UpdateTagNamespaceRequest) updateTagNamespace}.\n  *\n       * @param CreateTagNamespaceRequest\n       * @return CreateTagNamespaceResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateTagNamespace.ts.html |here} to see how to use CreateTagNamespace API.\n       */\n    createTagNamespace(createTagNamespaceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createTagNamespace.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createTagNamespaceRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createTagNamespaceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createTagNamespaceRequest.createTagNamespaceDetails, \"CreateTagNamespaceDetails\", model.CreateTagNamespaceDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagNamespace\",\n                    bodyModel: model.TagNamespace,\n                    type: \"model.TagNamespace\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Creates a new user in your tenancy. For conceptual information about users, your tenancy, and other\n  * IAM Service components, see [Overview of the IAM Service](https://docs.cloud.oracle.com/Content/Identity/Concepts/overview.htm).\n  * <p>\n  You must specify your tenancy's OCID as the compartment ID in the request object (remember that the\n  * tenancy is simply the root compartment). Notice that IAM resources (users, groups, compartments, and\n  * some policies) reside within the tenancy itself, unlike cloud resources such as compute instances,\n  * which typically reside within compartments inside the tenancy. For information about OCIDs, see\n  * [Resource Identifiers](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).\n  * <p>\n  You must also specify a *name* for the user, which must be unique across all users in your tenancy\n  * and cannot be changed. Allowed characters: No spaces. Only letters, numerals, hyphens, periods,\n  * underscores, +, and @. If you specify a name that's already in use, you'll get a 409 error.\n  * This name will be the user's login to the Console. You might want to pick a\n  * name that your company's own identity system (e.g., Active Directory, LDAP, etc.) already uses.\n  * If you delete a user and then create a new user with the same name, they'll be considered different\n  * users because they have different OCIDs.\n  * <p>\n  You must also specify a *description* for the user (although it can be an empty string).\n  * It does not have to be unique, and you can change it anytime with\n  * {@link #updateUser(UpdateUserRequest) updateUser}. You can use the field to provide the user's\n  * full name, a description, a nickname, or other information to generally identify the user.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before\n  * using the object, first make sure its `lifecycleState` has changed to ACTIVE.\n  * <p>\n  A new user has no permissions until you place the user in one or more groups (see\n  * {@link #addUserToGroup(AddUserToGroupRequest) addUserToGroup}). If the user needs to\n  * access the Console, you need to provide the user a password (see\n  * {@link #createOrResetUIPassword(CreateOrResetUIPasswordRequest) createOrResetUIPassword}).\n  * If the user needs to access the Oracle Cloud Infrastructure REST API, you need to upload a\n  * public API signing key for that user (see\n  * [Required Keys and OCIDs](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm) and also\n  * {@link #uploadApiKey(UploadApiKeyRequest) uploadApiKey}).\n  * <p>\n  **Important:** Make sure to inform the new user which compartment(s) they have access to.\n  *\n       * @param CreateUserRequest\n       * @return CreateUserResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/CreateUser.ts.html |here} to see how to use CreateUser API.\n       */\n    createUser(createUserRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#createUser.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": createUserRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, createUserRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(createUserRequest.createUserDetails, \"CreateUserDetails\", model.CreateUserDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"user\",\n                    bodyModel: model.User,\n                    type: \"model.User\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Deletes the specified API signing key for the specified user.\n  * <p>\n  Every user has permission to use this operation to delete a key for *their own user ID*. An\n  * administrator in your organization does not need to write a policy to give users this ability.\n  * To compare, administrators who have permission to the tenancy can use this operation to delete\n  * a key for any user, including themselves.\n  *\n       * @param DeleteApiKeyRequest\n       * @return DeleteApiKeyResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteApiKey.ts.html |here} to see how to use DeleteApiKey API.\n       */\n    deleteApiKey(deleteApiKeyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteApiKey.\");\n            const pathParams = {\n                \"{userId}\": deleteApiKeyRequest.userId,\n                \"{fingerprint}\": deleteApiKeyRequest.fingerprint\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteApiKeyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteApiKeyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/apiKeys/{fingerprint}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified auth token for the specified user.\n     *\n     * @param DeleteAuthTokenRequest\n     * @return DeleteAuthTokenResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteAuthToken.ts.html |here} to see how to use DeleteAuthToken API.\n     */\n    deleteAuthToken(deleteAuthTokenRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteAuthToken.\");\n            const pathParams = {\n                \"{userId}\": deleteAuthTokenRequest.userId,\n                \"{authTokenId}\": deleteAuthTokenRequest.authTokenId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteAuthTokenRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteAuthTokenRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/authTokens/{authTokenId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified compartment. The compartment must be empty.\n     *\n     * @param DeleteCompartmentRequest\n     * @return DeleteCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteCompartment.ts.html |here} to see how to use DeleteCompartment API.\n     */\n    deleteCompartment(deleteCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteCompartment.\");\n            const pathParams = {\n                \"{compartmentId}\": deleteCompartmentRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteCompartmentRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified secret key for the specified user.\n     *\n     * @param DeleteCustomerSecretKeyRequest\n     * @return DeleteCustomerSecretKeyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteCustomerSecretKey.ts.html |here} to see how to use DeleteCustomerSecretKey API.\n     */\n    deleteCustomerSecretKey(deleteCustomerSecretKeyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteCustomerSecretKey.\");\n            const pathParams = {\n                \"{userId}\": deleteCustomerSecretKeyRequest.userId,\n                \"{customerSecretKeyId}\": deleteCustomerSecretKeyRequest.customerSecretKeyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteCustomerSecretKeyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteCustomerSecretKeyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/customerSecretKeys/{customerSecretKeyId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified dynamic group.\n     *\n     * @param DeleteDynamicGroupRequest\n     * @return DeleteDynamicGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteDynamicGroup.ts.html |here} to see how to use DeleteDynamicGroup API.\n     */\n    deleteDynamicGroup(deleteDynamicGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteDynamicGroup.\");\n            const pathParams = {\n                \"{dynamicGroupId}\": deleteDynamicGroupRequest.dynamicGroupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteDynamicGroupRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteDynamicGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/dynamicGroups/{dynamicGroupId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified group. The group must be empty.\n     *\n     * @param DeleteGroupRequest\n     * @return DeleteGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteGroup.ts.html |here} to see how to use DeleteGroup API.\n     */\n    deleteGroup(deleteGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteGroup.\");\n            const pathParams = {\n                \"{groupId}\": deleteGroupRequest.groupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteGroupRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/groups/{groupId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified identity provider. The identity provider must not have\n     * any group mappings (see {@link IdpGroupMapping}).\n     *\n     * @param DeleteIdentityProviderRequest\n     * @return DeleteIdentityProviderResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteIdentityProvider.ts.html |here} to see how to use DeleteIdentityProvider API.\n     */\n    deleteIdentityProvider(deleteIdentityProviderRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteIdentityProvider.\");\n            const pathParams = {\n                \"{identityProviderId}\": deleteIdentityProviderRequest.identityProviderId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteIdentityProviderRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteIdentityProviderRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified group mapping.\n     * @param DeleteIdpGroupMappingRequest\n     * @return DeleteIdpGroupMappingResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteIdpGroupMapping.ts.html |here} to see how to use DeleteIdpGroupMapping API.\n     */\n    deleteIdpGroupMapping(deleteIdpGroupMappingRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteIdpGroupMapping.\");\n            const pathParams = {\n                \"{identityProviderId}\": deleteIdpGroupMappingRequest.identityProviderId,\n                \"{mappingId}\": deleteIdpGroupMappingRequest.mappingId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteIdpGroupMappingRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteIdpGroupMappingRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groupMappings/{mappingId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified MFA TOTP device for the specified user.\n     *\n     * @param DeleteMfaTotpDeviceRequest\n     * @return DeleteMfaTotpDeviceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteMfaTotpDevice.ts.html |here} to see how to use DeleteMfaTotpDevice API.\n     */\n    deleteMfaTotpDevice(deleteMfaTotpDeviceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteMfaTotpDevice.\");\n            const pathParams = {\n                \"{userId}\": deleteMfaTotpDeviceRequest.userId,\n                \"{mfaTotpDeviceId}\": deleteMfaTotpDeviceRequest.mfaTotpDeviceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteMfaTotpDeviceRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteMfaTotpDeviceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices/{mfaTotpDeviceId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified network source\n     *\n     * @param DeleteNetworkSourceRequest\n     * @return DeleteNetworkSourceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteNetworkSource.ts.html |here} to see how to use DeleteNetworkSource API.\n     */\n    deleteNetworkSource(deleteNetworkSourceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteNetworkSource.\");\n            const pathParams = {\n                \"{networkSourceId}\": deleteNetworkSourceRequest.networkSourceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteNetworkSourceRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteNetworkSourceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/networkSources/{networkSourceId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Delete Oauth token for the user\n     *\n     * @param DeleteOAuthClientCredentialRequest\n     * @return DeleteOAuthClientCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteOAuthClientCredential.ts.html |here} to see how to use DeleteOAuthClientCredential API.\n     */\n    deleteOAuthClientCredential(deleteOAuthClientCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteOAuthClientCredential.\");\n            const pathParams = {\n                \"{userId}\": deleteOAuthClientCredentialRequest.userId,\n                \"{oauth2ClientCredentialId}\": deleteOAuthClientCredentialRequest.oauth2ClientCredentialId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteOAuthClientCredentialRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteOAuthClientCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/oauth2ClientCredentials/{oauth2ClientCredentialId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified policy. The deletion takes effect typically within 10 seconds.\n     * @param DeletePolicyRequest\n     * @return DeletePolicyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeletePolicy.ts.html |here} to see how to use DeletePolicy API.\n     */\n    deletePolicy(deletePolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deletePolicy.\");\n            const pathParams = {\n                \"{policyId}\": deletePolicyRequest.policyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deletePolicyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deletePolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/policies/{policyId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified SMTP credential for the specified user.\n     *\n     * @param DeleteSmtpCredentialRequest\n     * @return DeleteSmtpCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteSmtpCredential.ts.html |here} to see how to use DeleteSmtpCredential API.\n     */\n    deleteSmtpCredential(deleteSmtpCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteSmtpCredential.\");\n            const pathParams = {\n                \"{userId}\": deleteSmtpCredentialRequest.userId,\n                \"{smtpCredentialId}\": deleteSmtpCredentialRequest.smtpCredentialId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteSmtpCredentialRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteSmtpCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/smtpCredentials/{smtpCredentialId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * **Deprecated. Use {@link #deleteAuthToken(DeleteAuthTokenRequest) deleteAuthToken} instead.**\n  * <p>\n  Deletes the specified Swift password for the specified user.\n  *\n       * @param DeleteSwiftPasswordRequest\n       * @return DeleteSwiftPasswordResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteSwiftPassword.ts.html |here} to see how to use DeleteSwiftPassword API.\n       */\n    deleteSwiftPassword(deleteSwiftPasswordRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteSwiftPassword.\");\n            const pathParams = {\n                \"{userId}\": deleteSwiftPasswordRequest.userId,\n                \"{swiftPasswordId}\": deleteSwiftPasswordRequest.swiftPasswordId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteSwiftPasswordRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteSwiftPasswordRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/swiftPasswords/{swiftPasswordId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Deletes the specified tag definition. This operation triggers a process that removes the\n  * tag from all resources in your tenancy.\n  * <p>\n  These things happen immediately:\n  * \\u00A0\n  *   * If the tag was a cost-tracking tag, it no longer counts against your 10 cost-tracking\n  *   tags limit, whether you first disabled it or not.\n  *   * If the tag was used with dynamic groups, none of the rules that contain the tag will\n  *   be evaluated against the tag.\n  * <p>\n  When you start the delete operation, the state of the tag changes to DELETING and tag removal\n  * from resources begins. This can take up to 48 hours depending on the number of resources that\n  * were tagged as well as the regions in which those resources reside.\n  * <p>\n  When all tags have been removed, the state changes to DELETED. You cannot restore a deleted tag. Once the deleted tag\n  * changes its state to DELETED, you can use the same tag name again.\n  * <p>\n  After you start this operation, you cannot start either the {@link #bulkDeleteTags(BulkDeleteTagsRequest) bulkDeleteTags} or the {@link #cascadeDeleteTagNamespace(CascadeDeleteTagNamespaceRequest) cascadeDeleteTagNamespace} operation until this process completes.\n  * <p>\n  To delete a tag, you must first retire it. Use {@link #updateTag(UpdateTagRequest) updateTag}\n  * to retire a tag.\n  *\n       * @param DeleteTagRequest\n       * @return DeleteTagResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteTag.ts.html |here} to see how to use DeleteTag API.\n       */\n    deleteTag(deleteTagRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteTag.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": deleteTagRequest.tagNamespaceId,\n                \"{tagName}\": deleteTagRequest.tagName\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteTagRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteTagRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/tags/{tagName}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the the specified tag default.\n     *\n     * @param DeleteTagDefaultRequest\n     * @return DeleteTagDefaultResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteTagDefault.ts.html |here} to see how to use DeleteTagDefault API.\n     */\n    deleteTagDefault(deleteTagDefaultRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteTagDefault.\");\n            const pathParams = {\n                \"{tagDefaultId}\": deleteTagDefaultRequest.tagDefaultId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-request-id\": deleteTagDefaultRequest.opcRequestId,\n                \"if-match\": deleteTagDefaultRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteTagDefaultRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults/{tagDefaultId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Deletes the specified tag namespace. Only an empty tag namespace can be deleted with this operation. To use this operation\n  * to delete a tag namespace that contains tag definitions, first delete all of its tag definitions.\n  * <p>\n  Use {@link #cascadeDeleteTagNamespace(CascadeDeleteTagNamespaceRequest) cascadeDeleteTagNamespace} to delete a tag namespace along with all of\n  * the tag definitions contained within that namespace.\n  * <p>\n  Use {@link #deleteTag(DeleteTagRequest) deleteTag} to delete a tag definition.\n  *\n       * @param DeleteTagNamespaceRequest\n       * @return DeleteTagNamespaceResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteTagNamespace.ts.html |here} to see how to use DeleteTagNamespace API.\n       */\n    deleteTagNamespace(deleteTagNamespaceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteTagNamespace.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": deleteTagNamespaceRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteTagNamespaceRequest.ifMatch,\n                \"opc-request-id\": deleteTagNamespaceRequest.opcRequestId\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteTagNamespaceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Deletes the specified user. The user must not be in any groups.\n     * @param DeleteUserRequest\n     * @return DeleteUserResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/DeleteUser.ts.html |here} to see how to use DeleteUser API.\n     */\n    deleteUser(deleteUserRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#deleteUser.\");\n            const pathParams = {\n                \"{userId}\": deleteUserRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": deleteUserRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, deleteUserRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Generate seed for the MFA TOTP device.\n     *\n     * @param GenerateTotpSeedRequest\n     * @return GenerateTotpSeedResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GenerateTotpSeed.ts.html |here} to see how to use GenerateTotpSeed API.\n     */\n    generateTotpSeed(generateTotpSeedRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#generateTotpSeed.\");\n            const pathParams = {\n                \"{userId}\": generateTotpSeedRequest.userId,\n                \"{mfaTotpDeviceId}\": generateTotpSeedRequest.mfaTotpDeviceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": generateTotpSeedRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, generateTotpSeedRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices/{mfaTotpDeviceId}/actions/generateSeed\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"mfaTotpDevice\",\n                    bodyModel: model.MfaTotpDevice,\n                    type: \"model.MfaTotpDevice\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the authentication policy for the given tenancy. You must specify your tenant\\u2019s OCID as the value for\n     * the compartment ID (remember that the tenancy is simply the root compartment).\n     *\n     * @param GetAuthenticationPolicyRequest\n     * @return GetAuthenticationPolicyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetAuthenticationPolicy.ts.html |here} to see how to use GetAuthenticationPolicy API.\n     */\n    getAuthenticationPolicy(getAuthenticationPolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getAuthenticationPolicy.\");\n            const pathParams = {\n                \"{compartmentId}\": getAuthenticationPolicyRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getAuthenticationPolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/authenticationPolicies/{compartmentId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"authenticationPolicy\",\n                    bodyModel: model.AuthenticationPolicy,\n                    type: \"model.AuthenticationPolicy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Gets the specified compartment's information.\n  * <p>\n  This operation does not return a list of all the resources inside the compartment. There is no single\n  * API operation that does that. Compartments can contain multiple types of resources (instances, block\n  * storage volumes, etc.). To find out what's in a compartment, you must call the \\\"List\\\" operation for\n  * each resource type and specify the compartment's OCID as a query parameter in the request. For example,\n  * call the {@link #listInstances(ListInstancesRequest) listInstances} operation in the Cloud Compute\n  * Service or the {@link #listVolumes(ListVolumesRequest) listVolumes} operation in Cloud Block Storage.\n  *\n       * @param GetCompartmentRequest\n       * @return GetCompartmentResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetCompartment.ts.html |here} to see how to use GetCompartment API.\n       */\n    getCompartment(getCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getCompartment.\");\n            const pathParams = {\n                \"{compartmentId}\": getCompartmentRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"compartment\",\n                    bodyModel: model.Compartment,\n                    type: \"model.Compartment\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified dynamic group's information.\n     *\n     * @param GetDynamicGroupRequest\n     * @return GetDynamicGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetDynamicGroup.ts.html |here} to see how to use GetDynamicGroup API.\n     */\n    getDynamicGroup(getDynamicGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getDynamicGroup.\");\n            const pathParams = {\n                \"{dynamicGroupId}\": getDynamicGroupRequest.dynamicGroupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getDynamicGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/dynamicGroups/{dynamicGroupId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"dynamicGroup\",\n                    bodyModel: model.DynamicGroup,\n                    type: \"model.DynamicGroup\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Gets the specified group's information.\n  * <p>\n  This operation does not return a list of all the users in the group. To do that, use\n  * {@link #listUserGroupMemberships(ListUserGroupMembershipsRequest) listUserGroupMemberships} and\n  * provide the group's OCID as a query parameter in the request.\n  *\n       * @param GetGroupRequest\n       * @return GetGroupResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetGroup.ts.html |here} to see how to use GetGroup API.\n       */\n    getGroup(getGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getGroup.\");\n            const pathParams = {\n                \"{groupId}\": getGroupRequest.groupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/groups/{groupId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"group\",\n                    bodyModel: model.Group,\n                    type: \"model.Group\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified identity provider's information.\n     * @param GetIdentityProviderRequest\n     * @return GetIdentityProviderResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetIdentityProvider.ts.html |here} to see how to use GetIdentityProvider API.\n     */\n    getIdentityProvider(getIdentityProviderRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getIdentityProvider.\");\n            const pathParams = {\n                \"{identityProviderId}\": getIdentityProviderRequest.identityProviderId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getIdentityProviderRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"identityProvider\",\n                    bodyModel: model.IdentityProvider,\n                    type: \"model.IdentityProvider\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified group mapping.\n     * @param GetIdpGroupMappingRequest\n     * @return GetIdpGroupMappingResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetIdpGroupMapping.ts.html |here} to see how to use GetIdpGroupMapping API.\n     */\n    getIdpGroupMapping(getIdpGroupMappingRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getIdpGroupMapping.\");\n            const pathParams = {\n                \"{identityProviderId}\": getIdpGroupMappingRequest.identityProviderId,\n                \"{mappingId}\": getIdpGroupMappingRequest.mappingId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getIdpGroupMappingRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groupMappings/{mappingId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"idpGroupMapping\",\n                    bodyModel: model.IdpGroupMapping,\n                    type: \"model.IdpGroupMapping\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get the specified MFA TOTP device for the specified user.\n     *\n     * @param GetMfaTotpDeviceRequest\n     * @return GetMfaTotpDeviceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetMfaTotpDevice.ts.html |here} to see how to use GetMfaTotpDevice API.\n     */\n    getMfaTotpDevice(getMfaTotpDeviceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getMfaTotpDevice.\");\n            const pathParams = {\n                \"{userId}\": getMfaTotpDeviceRequest.userId,\n                \"{mfaTotpDeviceId}\": getMfaTotpDeviceRequest.mfaTotpDeviceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getMfaTotpDeviceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices/{mfaTotpDeviceId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"mfaTotpDeviceSummary\",\n                    bodyModel: model.MfaTotpDeviceSummary,\n                    type: \"model.MfaTotpDeviceSummary\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified network source's information.\n     *\n     * @param GetNetworkSourceRequest\n     * @return GetNetworkSourceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetNetworkSource.ts.html |here} to see how to use GetNetworkSource API.\n     */\n    getNetworkSource(getNetworkSourceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getNetworkSource.\");\n            const pathParams = {\n                \"{networkSourceId}\": getNetworkSourceRequest.networkSourceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getNetworkSourceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/networkSources/{networkSourceId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"networkSources\",\n                    bodyModel: model.NetworkSources,\n                    type: \"model.NetworkSources\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified policy's information.\n     * @param GetPolicyRequest\n     * @return GetPolicyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetPolicy.ts.html |here} to see how to use GetPolicy API.\n     */\n    getPolicy(getPolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getPolicy.\");\n            const pathParams = {\n                \"{policyId}\": getPolicyRequest.policyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getPolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/policies/{policyId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"policy\",\n                    bodyModel: model.Policy,\n                    type: \"model.Policy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified tag's information.\n     * @param GetTagRequest\n     * @return GetTagResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetTag.ts.html |here} to see how to use GetTag API.\n     */\n    getTag(getTagRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getTag.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": getTagRequest.tagNamespaceId,\n                \"{tagName}\": getTagRequest.tagName\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getTagRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/tags/{tagName}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tag\",\n                    bodyModel: model.Tag,\n                    type: \"model.Tag\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieves the specified tag default.\n     *\n     * @param GetTagDefaultRequest\n     * @return GetTagDefaultResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetTagDefault.ts.html |here} to see how to use GetTagDefault API.\n     */\n    getTagDefault(getTagDefaultRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getTagDefault.\");\n            const pathParams = {\n                \"{tagDefaultId}\": getTagDefaultRequest.tagDefaultId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getTagDefaultRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults/{tagDefaultId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagDefault\",\n                    bodyModel: model.TagDefault,\n                    type: \"model.TagDefault\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified tag namespace's information.\n     *\n     * @param GetTagNamespaceRequest\n     * @return GetTagNamespaceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetTagNamespace.ts.html |here} to see how to use GetTagNamespace API.\n     */\n    getTagNamespace(getTagNamespaceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getTagNamespace.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": getTagNamespaceRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getTagNamespaceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagNamespace\",\n                    bodyModel: model.TagNamespace,\n                    type: \"model.TagNamespace\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets details on a specified work request. The workRequestID is returned in the opc-workrequest-id header\n     * for any asynchronous operation in the Identity and Access Management service.\n     *\n     * @param GetTaggingWorkRequestRequest\n     * @return GetTaggingWorkRequestResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetTaggingWorkRequest.ts.html |here} to see how to use GetTaggingWorkRequest API.\n     */\n    getTaggingWorkRequest(getTaggingWorkRequestRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getTaggingWorkRequest.\");\n            const pathParams = {\n                \"{workRequestId}\": getTaggingWorkRequestRequest.workRequestId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getTaggingWorkRequestRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/taggingWorkRequests/{workRequestId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"taggingWorkRequest\",\n                    bodyModel: model.TaggingWorkRequest,\n                    type: \"model.TaggingWorkRequest\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"retry-after\"),\n                            key: \"retryAfter\",\n                            dataType: \"number\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Get the specified tenancy's information.\n     * @param GetTenancyRequest\n     * @return GetTenancyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetTenancy.ts.html |here} to see how to use GetTenancy API.\n     */\n    getTenancy(getTenancyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getTenancy.\");\n            const pathParams = {\n                \"{tenancyId}\": getTenancyRequest.tenancyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getTenancyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tenancies/{tenancyId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tenancy\",\n                    bodyModel: model.Tenancy,\n                    type: \"model.Tenancy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified user's information.\n     * @param GetUserRequest\n     * @return GetUserResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetUser.ts.html |here} to see how to use GetUser API.\n     */\n    getUser(getUserRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getUser.\");\n            const pathParams = {\n                \"{userId}\": getUserRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getUserRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"user\",\n                    bodyModel: model.User,\n                    type: \"model.User\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified UserGroupMembership's information.\n     * @param GetUserGroupMembershipRequest\n     * @return GetUserGroupMembershipResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetUserGroupMembership.ts.html |here} to see how to use GetUserGroupMembership API.\n     */\n    getUserGroupMembership(getUserGroupMembershipRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getUserGroupMembership.\");\n            const pathParams = {\n                \"{userGroupMembershipId}\": getUserGroupMembershipRequest.userGroupMembershipId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getUserGroupMembershipRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/userGroupMemberships/{userGroupMembershipId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"userGroupMembership\",\n                    bodyModel: model.UserGroupMembership,\n                    type: \"model.UserGroupMembership\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets the specified user's console password information. The returned object contains the user's OCID,\n     * but not the password itself. The actual password is returned only when created or reset.\n     *\n     * @param GetUserUIPasswordInformationRequest\n     * @return GetUserUIPasswordInformationResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetUserUIPasswordInformation.ts.html |here} to see how to use GetUserUIPasswordInformation API.\n     */\n    getUserUIPasswordInformation(getUserUIPasswordInformationRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getUserUIPasswordInformation.\");\n            const pathParams = {\n                \"{userId}\": getUserUIPasswordInformationRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getUserUIPasswordInformationRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/uiPassword\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"uIPasswordInformation\",\n                    bodyModel: model.UIPasswordInformation,\n                    type: \"model.UIPasswordInformation\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Gets details on a specified work request. The workRequestID is returned in the opc-workrequest-id header\n     * for any asynchronous operation in the Identity and Access Management service.\n     *\n     * @param GetWorkRequestRequest\n     * @return GetWorkRequestResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/GetWorkRequest.ts.html |here} to see how to use GetWorkRequest API.\n     */\n    getWorkRequest(getWorkRequestRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#getWorkRequest.\");\n            const pathParams = {\n                \"{workRequestId}\": getWorkRequestRequest.workRequestId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, getWorkRequestRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/workRequests/{workRequestId}\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"workRequest\",\n                    bodyModel: model.WorkRequest,\n                    type: \"model.WorkRequest\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"retry-after\"),\n                            key: \"retryAfter\",\n                            dataType: \"number\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Lists the API signing keys for the specified user. A user can have a maximum of three keys.\n  * <p>\n  Every user has permission to use this API call for *their own user ID*.  An administrator in your\n  * organization does not need to write a policy to give users this ability.\n  *\n       * @param ListApiKeysRequest\n       * @return ListApiKeysResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListApiKeys.ts.html |here} to see how to use ListApiKeys API.\n       */\n    listApiKeys(listApiKeysRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listApiKeys.\");\n            const pathParams = {\n                \"{userId}\": listApiKeysRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listApiKeysRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/apiKeys\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.ApiKey,\n                    type: \"Array<model.ApiKey>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the auth tokens for the specified user. The returned object contains the token's OCID, but not\n     * the token itself. The actual token is returned only upon creation.\n     *\n     * @param ListAuthTokensRequest\n     * @return ListAuthTokensResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListAuthTokens.ts.html |here} to see how to use ListAuthTokens API.\n     */\n    listAuthTokens(listAuthTokensRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listAuthTokens.\");\n            const pathParams = {\n                \"{userId}\": listAuthTokensRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listAuthTokensRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/authTokens\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.AuthToken,\n                    type: \"Array<model.AuthToken>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the availability domains in your tenancy. Specify the OCID of either the tenancy or another\n     * of your compartments as the value for the compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     * Note that the order of the results returned can change if availability domains are added or removed; therefore, do not\n     * create a dependency on the list order.\n     *\n     * @param ListAvailabilityDomainsRequest\n     * @return ListAvailabilityDomainsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListAvailabilityDomains.ts.html |here} to see how to use ListAvailabilityDomains API.\n     */\n    listAvailabilityDomains(listAvailabilityDomainsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listAvailabilityDomains.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listAvailabilityDomainsRequest.compartmentId\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listAvailabilityDomainsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/availabilityDomains\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.AvailabilityDomain,\n                    type: \"Array<model.AvailabilityDomain>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the resource-types supported by compartment bulk actions. Use this API to help you provide the correct\n     * resource-type information to the {@link #bulkDeleteResources(BulkDeleteResourcesRequest) bulkDeleteResources}\n     * and {@link #bulkMoveResources(BulkMoveResourcesRequest) bulkMoveResources} operations. The returned list of\n     * resource-types provides the appropriate resource-type names to use with the bulk action operations along with\n     * the type of identifying information you'll need to provide for each resource-type. Most resource-types just\n     * require an [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) to identify a specific resource, but some resource-types,\n     * such as buckets, require you to provide other identifying information.\n     *\n     * @param ListBulkActionResourceTypesRequest\n     * @return ListBulkActionResourceTypesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListBulkActionResourceTypes.ts.html |here} to see how to use ListBulkActionResourceTypes API.\n     */\n    listBulkActionResourceTypes(listBulkActionResourceTypesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listBulkActionResourceTypes.\");\n            const pathParams = {};\n            const queryParams = {\n                \"bulkActionType\": listBulkActionResourceTypesRequest.bulkActionType,\n                \"page\": listBulkActionResourceTypesRequest.page,\n                \"limit\": listBulkActionResourceTypesRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listBulkActionResourceTypesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/bulkActionResourceTypes\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"bulkActionResourceTypeCollection\",\n                    bodyModel: model.BulkActionResourceTypeCollection,\n                    type: \"model.BulkActionResourceTypeCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the resource types that support bulk tag editing.\n     *\n     * @param ListBulkEditTagsResourceTypesRequest\n     * @return ListBulkEditTagsResourceTypesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListBulkEditTagsResourceTypes.ts.html |here} to see how to use ListBulkEditTagsResourceTypes API.\n     */\n    listBulkEditTagsResourceTypes(listBulkEditTagsResourceTypesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listBulkEditTagsResourceTypes.\");\n            const pathParams = {};\n            const queryParams = {\n                \"page\": listBulkEditTagsResourceTypesRequest.page,\n                \"limit\": listBulkEditTagsResourceTypesRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listBulkEditTagsResourceTypesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tags/bulkEditResourceTypes\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"bulkEditTagsResourceTypeCollection\",\n                    bodyModel: model.BulkEditTagsResourceTypeCollection,\n                    type: \"model.BulkEditTagsResourceTypeCollection\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Lists the compartments in a specified compartment. The members of the list\n  * returned depends on the values set for several parameters.\n  * <p>\n  With the exception of the tenancy (root compartment), the ListCompartments operation\n  * returns only the first-level child compartments in the parent compartment specified in\n  * `compartmentId`. The list does not include any subcompartments of the child\n  * compartments (grandchildren).\n  * <p>\n  The parameter `accessLevel` specifies whether to return only those compartments for which the\n  * requestor has INSPECT permissions on at least one resource directly\n  * or indirectly (the resource can be in a subcompartment).\n  * <p>\n  The parameter `compartmentIdInSubtree` applies only when you perform ListCompartments on the\n  * tenancy (root compartment). When set to true, the entire hierarchy of compartments can be returned.\n  * To get a full list of all compartments and subcompartments in the tenancy (root compartment),\n  * set the parameter `compartmentIdInSubtree` to true and `accessLevel` to ANY.\n  * <p>\n  See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n  *\n       * @param ListCompartmentsRequest\n       * @return ListCompartmentsResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListCompartments.ts.html |here} to see how to use ListCompartments API.\n       */\n    listCompartments(listCompartmentsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listCompartments.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listCompartmentsRequest.compartmentId,\n                \"page\": listCompartmentsRequest.page,\n                \"limit\": listCompartmentsRequest.limit,\n                \"accessLevel\": listCompartmentsRequest.accessLevel,\n                \"compartmentIdInSubtree\": listCompartmentsRequest.compartmentIdInSubtree,\n                \"name\": listCompartmentsRequest.name,\n                \"sortBy\": listCompartmentsRequest.sortBy,\n                \"sortOrder\": listCompartmentsRequest.sortOrder,\n                \"lifecycleState\": listCompartmentsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listCompartmentsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.Compartment,\n                    type: \"Array<model.Compartment>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listCompartmentsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.Compartment objects\n     * contained in responses from the listCompartments operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllCompartments(request) {\n        return oci_common_1.paginateRecords(request, req => this.listCompartments(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listCompartmentsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listCompartments operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllCompartmentsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listCompartments(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.Compartment objects\n     * contained in responses from the listCompartments operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listCompartmentsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listCompartments(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listCompartments operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listCompartmentsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listCompartments(req));\n    }\n    /**\n     * Lists all the tags enabled for cost-tracking in the specified tenancy. For information about\n     * cost-tracking tags, see [Using Cost-tracking Tags](https://docs.cloud.oracle.com/Content/Identity/Concepts/taggingoverview.htm#costs).\n     *\n     * @param ListCostTrackingTagsRequest\n     * @return ListCostTrackingTagsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListCostTrackingTags.ts.html |here} to see how to use ListCostTrackingTags API.\n     */\n    listCostTrackingTags(listCostTrackingTagsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listCostTrackingTags.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listCostTrackingTagsRequest.compartmentId,\n                \"page\": listCostTrackingTagsRequest.page,\n                \"limit\": listCostTrackingTagsRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listCostTrackingTagsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/actions/listCostTrackingTags\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.Tag,\n                    type: \"Array<model.Tag>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listCostTrackingTagsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.Tag objects\n     * contained in responses from the listCostTrackingTags operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllCostTrackingTags(request) {\n        return oci_common_1.paginateRecords(request, req => this.listCostTrackingTags(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listCostTrackingTagsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listCostTrackingTags operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllCostTrackingTagsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listCostTrackingTags(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.Tag objects\n     * contained in responses from the listCostTrackingTags operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listCostTrackingTagsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listCostTrackingTags(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listCostTrackingTags operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listCostTrackingTagsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listCostTrackingTags(req));\n    }\n    /**\n     * Lists the secret keys for the specified user. The returned object contains the secret key's OCID, but not\n     * the secret key itself. The actual secret key is returned only upon creation.\n     *\n     * @param ListCustomerSecretKeysRequest\n     * @return ListCustomerSecretKeysResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListCustomerSecretKeys.ts.html |here} to see how to use ListCustomerSecretKeys API.\n     */\n    listCustomerSecretKeys(listCustomerSecretKeysRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listCustomerSecretKeys.\");\n            const pathParams = {\n                \"{userId}\": listCustomerSecretKeysRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listCustomerSecretKeysRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/customerSecretKeys\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.CustomerSecretKeySummary,\n                    type: \"Array<model.CustomerSecretKeySummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the dynamic groups in your tenancy. You must specify your tenancy's OCID as the value for\n     * the compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListDynamicGroupsRequest\n     * @return ListDynamicGroupsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListDynamicGroups.ts.html |here} to see how to use ListDynamicGroups API.\n     */\n    listDynamicGroups(listDynamicGroupsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listDynamicGroups.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listDynamicGroupsRequest.compartmentId,\n                \"page\": listDynamicGroupsRequest.page,\n                \"limit\": listDynamicGroupsRequest.limit,\n                \"name\": listDynamicGroupsRequest.name,\n                \"sortBy\": listDynamicGroupsRequest.sortBy,\n                \"sortOrder\": listDynamicGroupsRequest.sortOrder,\n                \"lifecycleState\": listDynamicGroupsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listDynamicGroupsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/dynamicGroups\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.DynamicGroup,\n                    type: \"Array<model.DynamicGroup>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listDynamicGroupsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.DynamicGroup objects\n     * contained in responses from the listDynamicGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllDynamicGroups(request) {\n        return oci_common_1.paginateRecords(request, req => this.listDynamicGroups(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listDynamicGroupsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listDynamicGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllDynamicGroupsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listDynamicGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.DynamicGroup objects\n     * contained in responses from the listDynamicGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listDynamicGroupsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listDynamicGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listDynamicGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listDynamicGroupsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listDynamicGroups(req));\n    }\n    /**\n     * Lists the Fault Domains in your tenancy. Specify the OCID of either the tenancy or another\n     * of your compartments as the value for the compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListFaultDomainsRequest\n     * @return ListFaultDomainsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListFaultDomains.ts.html |here} to see how to use ListFaultDomains API.\n     */\n    listFaultDomains(listFaultDomainsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listFaultDomains.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listFaultDomainsRequest.compartmentId,\n                \"availabilityDomain\": listFaultDomainsRequest.availabilityDomain\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listFaultDomainsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/faultDomains\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.FaultDomain,\n                    type: \"Array<model.FaultDomain>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the groups in your tenancy. You must specify your tenancy's OCID as the value for\n     * the compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListGroupsRequest\n     * @return ListGroupsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListGroups.ts.html |here} to see how to use ListGroups API.\n     */\n    listGroups(listGroupsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listGroups.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listGroupsRequest.compartmentId,\n                \"page\": listGroupsRequest.page,\n                \"limit\": listGroupsRequest.limit,\n                \"name\": listGroupsRequest.name,\n                \"sortBy\": listGroupsRequest.sortBy,\n                \"sortOrder\": listGroupsRequest.sortOrder,\n                \"lifecycleState\": listGroupsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listGroupsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/groups\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.Group,\n                    type: \"Array<model.Group>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listGroupsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.Group objects\n     * contained in responses from the listGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllGroups(request) {\n        return oci_common_1.paginateRecords(request, req => this.listGroups(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listGroupsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllGroupsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.Group objects\n     * contained in responses from the listGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listGroupsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listGroupsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listGroups(req));\n    }\n    /**\n     * Lists the identity provider groups.\n     * @param ListIdentityProviderGroupsRequest\n     * @return ListIdentityProviderGroupsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListIdentityProviderGroups.ts.html |here} to see how to use ListIdentityProviderGroups API.\n     */\n    listIdentityProviderGroups(listIdentityProviderGroupsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listIdentityProviderGroups.\");\n            const pathParams = {\n                \"{identityProviderId}\": listIdentityProviderGroupsRequest.identityProviderId\n            };\n            const queryParams = {\n                \"page\": listIdentityProviderGroupsRequest.page,\n                \"limit\": listIdentityProviderGroupsRequest.limit,\n                \"name\": listIdentityProviderGroupsRequest.name,\n                \"lifecycleState\": listIdentityProviderGroupsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listIdentityProviderGroupsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groups\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.IdentityProviderGroupSummary,\n                    type: \"Array<model.IdentityProviderGroupSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdentityProviderGroupsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.IdentityProviderGroupSummary objects\n     * contained in responses from the listIdentityProviderGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdentityProviderGroups(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdentityProviderGroups(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdentityProviderGroupsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listIdentityProviderGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdentityProviderGroupsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdentityProviderGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.IdentityProviderGroupSummary objects\n     * contained in responses from the listIdentityProviderGroups operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdentityProviderGroupsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdentityProviderGroups(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listIdentityProviderGroups operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdentityProviderGroupsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdentityProviderGroups(req));\n    }\n    /**\n     * Lists all the identity providers in your tenancy. You must specify the identity provider type (e.g., `SAML2` for\n     * identity providers using the SAML2.0 protocol). You must specify your tenancy's OCID as the value for the\n     * compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListIdentityProvidersRequest\n     * @return ListIdentityProvidersResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListIdentityProviders.ts.html |here} to see how to use ListIdentityProviders API.\n     */\n    listIdentityProviders(listIdentityProvidersRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listIdentityProviders.\");\n            const pathParams = {};\n            const queryParams = {\n                \"protocol\": listIdentityProvidersRequest.protocol,\n                \"compartmentId\": listIdentityProvidersRequest.compartmentId,\n                \"page\": listIdentityProvidersRequest.page,\n                \"limit\": listIdentityProvidersRequest.limit,\n                \"name\": listIdentityProvidersRequest.name,\n                \"sortBy\": listIdentityProvidersRequest.sortBy,\n                \"sortOrder\": listIdentityProvidersRequest.sortOrder,\n                \"lifecycleState\": listIdentityProvidersRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listIdentityProvidersRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.IdentityProvider,\n                    type: \"Array<model.IdentityProvider>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdentityProvidersRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.IdentityProvider objects\n     * contained in responses from the listIdentityProviders operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdentityProviders(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdentityProviders(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdentityProvidersResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listIdentityProviders operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdentityProvidersResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdentityProviders(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.IdentityProvider objects\n     * contained in responses from the listIdentityProviders operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdentityProvidersRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdentityProviders(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listIdentityProviders operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdentityProvidersResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdentityProviders(req));\n    }\n    /**\n     * Lists the group mappings for the specified identity provider.\n     *\n     * @param ListIdpGroupMappingsRequest\n     * @return ListIdpGroupMappingsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListIdpGroupMappings.ts.html |here} to see how to use ListIdpGroupMappings API.\n     */\n    listIdpGroupMappings(listIdpGroupMappingsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listIdpGroupMappings.\");\n            const pathParams = {\n                \"{identityProviderId}\": listIdpGroupMappingsRequest.identityProviderId\n            };\n            const queryParams = {\n                \"page\": listIdpGroupMappingsRequest.page,\n                \"limit\": listIdpGroupMappingsRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listIdpGroupMappingsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groupMappings\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.IdpGroupMapping,\n                    type: \"Array<model.IdpGroupMapping>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdpGroupMappingsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.IdpGroupMapping objects\n     * contained in responses from the listIdpGroupMappings operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdpGroupMappings(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdpGroupMappings(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listIdpGroupMappingsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listIdpGroupMappings operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllIdpGroupMappingsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdpGroupMappings(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.IdpGroupMapping objects\n     * contained in responses from the listIdpGroupMappings operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdpGroupMappingsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listIdpGroupMappings(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listIdpGroupMappings operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listIdpGroupMappingsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listIdpGroupMappings(req));\n    }\n    /**\n     * Lists the MFA TOTP devices for the specified user. The returned object contains the device's OCID, but not\n     * the seed. The seed is returned only upon creation or when the IAM service regenerates the MFA seed for the device.\n     *\n     * @param ListMfaTotpDevicesRequest\n     * @return ListMfaTotpDevicesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListMfaTotpDevices.ts.html |here} to see how to use ListMfaTotpDevices API.\n     */\n    listMfaTotpDevices(listMfaTotpDevicesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listMfaTotpDevices.\");\n            const pathParams = {\n                \"{userId}\": listMfaTotpDevicesRequest.userId\n            };\n            const queryParams = {\n                \"page\": listMfaTotpDevicesRequest.page,\n                \"limit\": listMfaTotpDevicesRequest.limit,\n                \"sortBy\": listMfaTotpDevicesRequest.sortBy,\n                \"sortOrder\": listMfaTotpDevicesRequest.sortOrder\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listMfaTotpDevicesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/mfaTotpDevices\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.MfaTotpDeviceSummary,\n                    type: \"Array<model.MfaTotpDeviceSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listMfaTotpDevicesRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.MfaTotpDeviceSummary objects\n     * contained in responses from the listMfaTotpDevices operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllMfaTotpDevices(request) {\n        return oci_common_1.paginateRecords(request, req => this.listMfaTotpDevices(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listMfaTotpDevicesResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listMfaTotpDevices operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllMfaTotpDevicesResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listMfaTotpDevices(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.MfaTotpDeviceSummary objects\n     * contained in responses from the listMfaTotpDevices operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listMfaTotpDevicesRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listMfaTotpDevices(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listMfaTotpDevices operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listMfaTotpDevicesResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listMfaTotpDevices(req));\n    }\n    /**\n     * Lists the network sources in your tenancy. You must specify your tenancy's OCID as the value for\n     * the compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListNetworkSourcesRequest\n     * @return ListNetworkSourcesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListNetworkSources.ts.html |here} to see how to use ListNetworkSources API.\n     */\n    listNetworkSources(listNetworkSourcesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listNetworkSources.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listNetworkSourcesRequest.compartmentId,\n                \"page\": listNetworkSourcesRequest.page,\n                \"limit\": listNetworkSourcesRequest.limit,\n                \"name\": listNetworkSourcesRequest.name,\n                \"sortBy\": listNetworkSourcesRequest.sortBy,\n                \"sortOrder\": listNetworkSourcesRequest.sortOrder,\n                \"lifecycleState\": listNetworkSourcesRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listNetworkSourcesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/networkSources\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.NetworkSourcesSummary,\n                    type: \"Array<model.NetworkSourcesSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listNetworkSourcesRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.NetworkSourcesSummary objects\n     * contained in responses from the listNetworkSources operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllNetworkSources(request) {\n        return oci_common_1.paginateRecords(request, req => this.listNetworkSources(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listNetworkSourcesResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listNetworkSources operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllNetworkSourcesResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listNetworkSources(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.NetworkSourcesSummary objects\n     * contained in responses from the listNetworkSources operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listNetworkSourcesRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listNetworkSources(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listNetworkSources operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listNetworkSourcesResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listNetworkSources(req));\n    }\n    /**\n     * List of Oauth tokens for the user\n     *\n     * @param ListOAuthClientCredentialsRequest\n     * @return ListOAuthClientCredentialsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListOAuthClientCredentials.ts.html |here} to see how to use ListOAuthClientCredentials API.\n     */\n    listOAuthClientCredentials(listOAuthClientCredentialsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listOAuthClientCredentials.\");\n            const pathParams = {\n                \"{userId}\": listOAuthClientCredentialsRequest.userId\n            };\n            const queryParams = {\n                \"page\": listOAuthClientCredentialsRequest.page,\n                \"limit\": listOAuthClientCredentialsRequest.limit,\n                \"lifecycleState\": listOAuthClientCredentialsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listOAuthClientCredentialsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/oauth2ClientCredentials\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.OAuth2ClientCredentialSummary,\n                    type: \"Array<model.OAuth2ClientCredentialSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listOAuthClientCredentialsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.OAuth2ClientCredentialSummary objects\n     * contained in responses from the listOAuthClientCredentials operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllOAuthClientCredentials(request) {\n        return oci_common_1.paginateRecords(request, req => this.listOAuthClientCredentials(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listOAuthClientCredentialsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listOAuthClientCredentials operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllOAuthClientCredentialsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listOAuthClientCredentials(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.OAuth2ClientCredentialSummary objects\n     * contained in responses from the listOAuthClientCredentials operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listOAuthClientCredentialsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listOAuthClientCredentials(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listOAuthClientCredentials operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listOAuthClientCredentialsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listOAuthClientCredentials(req));\n    }\n    /**\n       * Lists the policies in the specified compartment (either the tenancy or another of your compartments).\n  * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n  * <p>\n  To determine which policies apply to a particular group or compartment, you must view the individual\n  * statements inside all your policies. There isn't a way to automatically obtain that information via the API.\n  *\n       * @param ListPoliciesRequest\n       * @return ListPoliciesResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListPolicies.ts.html |here} to see how to use ListPolicies API.\n       */\n    listPolicies(listPoliciesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listPolicies.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listPoliciesRequest.compartmentId,\n                \"page\": listPoliciesRequest.page,\n                \"limit\": listPoliciesRequest.limit,\n                \"name\": listPoliciesRequest.name,\n                \"sortBy\": listPoliciesRequest.sortBy,\n                \"sortOrder\": listPoliciesRequest.sortOrder,\n                \"lifecycleState\": listPoliciesRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listPoliciesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/policies\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.Policy,\n                    type: \"Array<model.Policy>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listPoliciesRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.Policy objects\n     * contained in responses from the listPolicies operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllPolicies(request) {\n        return oci_common_1.paginateRecords(request, req => this.listPolicies(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listPoliciesResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listPolicies operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllPoliciesResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listPolicies(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.Policy objects\n     * contained in responses from the listPolicies operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listPoliciesRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listPolicies(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listPolicies operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listPoliciesResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listPolicies(req));\n    }\n    /**\n     * Lists the region subscriptions for the specified tenancy.\n     * @param ListRegionSubscriptionsRequest\n     * @return ListRegionSubscriptionsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListRegionSubscriptions.ts.html |here} to see how to use ListRegionSubscriptions API.\n     */\n    listRegionSubscriptions(listRegionSubscriptionsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listRegionSubscriptions.\");\n            const pathParams = {\n                \"{tenancyId}\": listRegionSubscriptionsRequest.tenancyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listRegionSubscriptionsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tenancies/{tenancyId}/regionSubscriptions\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.RegionSubscription,\n                    type: \"Array<model.RegionSubscription>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists all the regions offered by Oracle Cloud Infrastructure.\n     * @param ListRegionsRequest\n     * @return ListRegionsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListRegions.ts.html |here} to see how to use ListRegions API.\n     */\n    listRegions(listRegionsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listRegions.\");\n            const pathParams = {};\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listRegionsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/regions\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.Region,\n                    type: \"Array<model.Region>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the SMTP credentials for the specified user. The returned object contains the credential's OCID,\n     * the SMTP user name but not the SMTP password. The SMTP password is returned only upon creation.\n     *\n     * @param ListSmtpCredentialsRequest\n     * @return ListSmtpCredentialsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListSmtpCredentials.ts.html |here} to see how to use ListSmtpCredentials API.\n     */\n    listSmtpCredentials(listSmtpCredentialsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listSmtpCredentials.\");\n            const pathParams = {\n                \"{userId}\": listSmtpCredentialsRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listSmtpCredentialsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/smtpCredentials\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.SmtpCredentialSummary,\n                    type: \"Array<model.SmtpCredentialSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * **Deprecated. Use {@link #listAuthTokens(ListAuthTokensRequest) listAuthTokens} instead.**\n  * <p>\n  Lists the Swift passwords for the specified user. The returned object contains the password's OCID, but not\n  * the password itself. The actual password is returned only upon creation.\n  *\n       * @param ListSwiftPasswordsRequest\n       * @return ListSwiftPasswordsResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListSwiftPasswords.ts.html |here} to see how to use ListSwiftPasswords API.\n       */\n    listSwiftPasswords(listSwiftPasswordsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listSwiftPasswords.\");\n            const pathParams = {\n                \"{userId}\": listSwiftPasswordsRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listSwiftPasswordsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/swiftPasswords\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.SwiftPassword,\n                    type: \"Array<model.SwiftPassword>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Lists the tag defaults for tag definitions in the specified compartment.\n     *\n     * @param ListTagDefaultsRequest\n     * @return ListTagDefaultsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTagDefaults.ts.html |here} to see how to use ListTagDefaults API.\n     */\n    listTagDefaults(listTagDefaultsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTagDefaults.\");\n            const pathParams = {};\n            const queryParams = {\n                \"page\": listTagDefaultsRequest.page,\n                \"limit\": listTagDefaultsRequest.limit,\n                \"id\": listTagDefaultsRequest.id,\n                \"compartmentId\": listTagDefaultsRequest.compartmentId,\n                \"tagDefinitionId\": listTagDefaultsRequest.tagDefinitionId,\n                \"lifecycleState\": listTagDefaultsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTagDefaultsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TagDefaultSummary,\n                    type: \"Array<model.TagDefaultSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagDefaultsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TagDefaultSummary objects\n     * contained in responses from the listTagDefaults operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTagDefaults(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTagDefaults(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagDefaultsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTagDefaults operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTagDefaultsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTagDefaults(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TagDefaultSummary objects\n     * contained in responses from the listTagDefaults operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagDefaultsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTagDefaults(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTagDefaults operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagDefaultsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTagDefaults(req));\n    }\n    /**\n     * Lists the tag namespaces in the specified compartment.\n     *\n     * @param ListTagNamespacesRequest\n     * @return ListTagNamespacesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTagNamespaces.ts.html |here} to see how to use ListTagNamespaces API.\n     */\n    listTagNamespaces(listTagNamespacesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTagNamespaces.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listTagNamespacesRequest.compartmentId,\n                \"page\": listTagNamespacesRequest.page,\n                \"limit\": listTagNamespacesRequest.limit,\n                \"includeSubcompartments\": listTagNamespacesRequest.includeSubcompartments,\n                \"lifecycleState\": listTagNamespacesRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTagNamespacesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TagNamespaceSummary,\n                    type: \"Array<model.TagNamespaceSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagNamespacesRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TagNamespaceSummary objects\n     * contained in responses from the listTagNamespaces operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTagNamespaces(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTagNamespaces(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagNamespacesResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTagNamespaces operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTagNamespacesResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTagNamespaces(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TagNamespaceSummary objects\n     * contained in responses from the listTagNamespaces operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagNamespacesRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTagNamespaces(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTagNamespaces operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagNamespacesResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTagNamespaces(req));\n    }\n    /**\n     * Gets the errors for a work request.\n     *\n     * @param ListTaggingWorkRequestErrorsRequest\n     * @return ListTaggingWorkRequestErrorsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTaggingWorkRequestErrors.ts.html |here} to see how to use ListTaggingWorkRequestErrors API.\n     */\n    listTaggingWorkRequestErrors(listTaggingWorkRequestErrorsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTaggingWorkRequestErrors.\");\n            const pathParams = {\n                \"{workRequestId}\": listTaggingWorkRequestErrorsRequest.workRequestId\n            };\n            const queryParams = {\n                \"page\": listTaggingWorkRequestErrorsRequest.page,\n                \"limit\": listTaggingWorkRequestErrorsRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTaggingWorkRequestErrorsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/taggingWorkRequests/{workRequestId}/errors\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TaggingWorkRequestErrorSummary,\n                    type: \"Array<model.TaggingWorkRequestErrorSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"retry-after\"),\n                            key: \"retryAfter\",\n                            dataType: \"number\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestErrorsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestErrorSummary objects\n     * contained in responses from the listTaggingWorkRequestErrors operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequestErrors(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequestErrors(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestErrorsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequestErrors operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequestErrorsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequestErrors(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestErrorSummary objects\n     * contained in responses from the listTaggingWorkRequestErrors operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestErrorsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequestErrors(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequestErrors operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestErrorsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequestErrors(req));\n    }\n    /**\n     * Gets the logs for a work request.\n     *\n     * @param ListTaggingWorkRequestLogsRequest\n     * @return ListTaggingWorkRequestLogsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTaggingWorkRequestLogs.ts.html |here} to see how to use ListTaggingWorkRequestLogs API.\n     */\n    listTaggingWorkRequestLogs(listTaggingWorkRequestLogsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTaggingWorkRequestLogs.\");\n            const pathParams = {\n                \"{workRequestId}\": listTaggingWorkRequestLogsRequest.workRequestId\n            };\n            const queryParams = {\n                \"page\": listTaggingWorkRequestLogsRequest.page,\n                \"limit\": listTaggingWorkRequestLogsRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTaggingWorkRequestLogsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/taggingWorkRequests/{workRequestId}/logs\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TaggingWorkRequestLogSummary,\n                    type: \"Array<model.TaggingWorkRequestLogSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"retry-after\"),\n                            key: \"retryAfter\",\n                            dataType: \"number\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestLogsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestLogSummary objects\n     * contained in responses from the listTaggingWorkRequestLogs operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequestLogs(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequestLogs(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestLogsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequestLogs operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequestLogsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequestLogs(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestLogSummary objects\n     * contained in responses from the listTaggingWorkRequestLogs operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestLogsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequestLogs(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequestLogs operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestLogsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequestLogs(req));\n    }\n    /**\n     * Lists the tagging work requests in compartment.\n     *\n     * @param ListTaggingWorkRequestsRequest\n     * @return ListTaggingWorkRequestsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTaggingWorkRequests.ts.html |here} to see how to use ListTaggingWorkRequests API.\n     */\n    listTaggingWorkRequests(listTaggingWorkRequestsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTaggingWorkRequests.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listTaggingWorkRequestsRequest.compartmentId,\n                \"page\": listTaggingWorkRequestsRequest.page,\n                \"limit\": listTaggingWorkRequestsRequest.limit,\n                \"resourceIdentifier\": listTaggingWorkRequestsRequest.resourceIdentifier\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTaggingWorkRequestsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/taggingWorkRequests\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TaggingWorkRequestSummary,\n                    type: \"Array<model.TaggingWorkRequestSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestSummary objects\n     * contained in responses from the listTaggingWorkRequests operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequests(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequests(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTaggingWorkRequestsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequests operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTaggingWorkRequestsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequests(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TaggingWorkRequestSummary objects\n     * contained in responses from the listTaggingWorkRequests operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTaggingWorkRequests(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTaggingWorkRequests operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTaggingWorkRequestsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTaggingWorkRequests(req));\n    }\n    /**\n     * Lists the tag definitions in the specified tag namespace.\n     *\n     * @param ListTagsRequest\n     * @return ListTagsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListTags.ts.html |here} to see how to use ListTags API.\n     */\n    listTags(listTagsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listTags.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": listTagsRequest.tagNamespaceId\n            };\n            const queryParams = {\n                \"page\": listTagsRequest.page,\n                \"limit\": listTagsRequest.limit,\n                \"lifecycleState\": listTagsRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listTagsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/tags\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.TagSummary,\n                    type: \"Array<model.TagSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.TagSummary objects\n     * contained in responses from the listTags operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTags(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTags(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listTagsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listTags operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllTagsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTags(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.TagSummary objects\n     * contained in responses from the listTags operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listTags(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listTags operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listTagsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listTags(req));\n    }\n    /**\n       * Lists the `UserGroupMembership` objects in your tenancy. You must specify your tenancy's OCID\n  * as the value for the compartment ID\n  * (see [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five)).\n  * You must also then filter the list in one of these ways:\n  * <p>\n  - You can limit the results to just the memberships for a given user by specifying a `userId`.\n  * - Similarly, you can limit the results to just the memberships for a given group by specifying a `groupId`.\n  * - You can set both the `userId` and `groupId` to determine if the specified user is in the specified group.\n  * If the answer is no, the response is an empty list.\n  * - Although`userId` and `groupId` are not individually required, you must set one of them.\n  *\n       * @param ListUserGroupMembershipsRequest\n       * @return ListUserGroupMembershipsResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListUserGroupMemberships.ts.html |here} to see how to use ListUserGroupMemberships API.\n       */\n    listUserGroupMemberships(listUserGroupMembershipsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listUserGroupMemberships.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listUserGroupMembershipsRequest.compartmentId,\n                \"userId\": listUserGroupMembershipsRequest.userId,\n                \"groupId\": listUserGroupMembershipsRequest.groupId,\n                \"page\": listUserGroupMembershipsRequest.page,\n                \"limit\": listUserGroupMembershipsRequest.limit\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listUserGroupMembershipsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/userGroupMemberships\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.UserGroupMembership,\n                    type: \"Array<model.UserGroupMembership>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listUserGroupMembershipsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.UserGroupMembership objects\n     * contained in responses from the listUserGroupMemberships operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllUserGroupMemberships(request) {\n        return oci_common_1.paginateRecords(request, req => this.listUserGroupMemberships(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listUserGroupMembershipsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listUserGroupMemberships operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllUserGroupMembershipsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listUserGroupMemberships(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.UserGroupMembership objects\n     * contained in responses from the listUserGroupMemberships operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listUserGroupMembershipsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listUserGroupMemberships(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listUserGroupMemberships operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listUserGroupMembershipsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listUserGroupMemberships(req));\n    }\n    /**\n     * Lists the users in your tenancy. You must specify your tenancy's OCID as the value for the\n     * compartment ID (remember that the tenancy is simply the root compartment).\n     * See [Where to Get the Tenancy's OCID and User's OCID](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm#five).\n     *\n     * @param ListUsersRequest\n     * @return ListUsersResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListUsers.ts.html |here} to see how to use ListUsers API.\n     */\n    listUsers(listUsersRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listUsers.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listUsersRequest.compartmentId,\n                \"page\": listUsersRequest.page,\n                \"limit\": listUsersRequest.limit,\n                \"identityProviderId\": listUsersRequest.identityProviderId,\n                \"externalIdentifier\": listUsersRequest.externalIdentifier,\n                \"name\": listUsersRequest.name,\n                \"sortBy\": listUsersRequest.sortBy,\n                \"sortOrder\": listUsersRequest.sortOrder,\n                \"lifecycleState\": listUsersRequest.lifecycleState\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listUsersRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.User,\n                    type: \"Array<model.User>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listUsersRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.User objects\n     * contained in responses from the listUsers operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllUsers(request) {\n        return oci_common_1.paginateRecords(request, req => this.listUsers(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listUsersResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listUsers operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllUsersResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listUsers(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.User objects\n     * contained in responses from the listUsers operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listUsersRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listUsers(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listUsers operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listUsersResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listUsers(req));\n    }\n    /**\n     * Lists the work requests in compartment.\n     *\n     * @param ListWorkRequestsRequest\n     * @return ListWorkRequestsResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ListWorkRequests.ts.html |here} to see how to use ListWorkRequests API.\n     */\n    listWorkRequests(listWorkRequestsRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#listWorkRequests.\");\n            const pathParams = {};\n            const queryParams = {\n                \"compartmentId\": listWorkRequestsRequest.compartmentId,\n                \"page\": listWorkRequestsRequest.page,\n                \"limit\": listWorkRequestsRequest.limit,\n                \"resourceIdentifier\": listWorkRequestsRequest.resourceIdentifier\n            };\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, listWorkRequestsRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/workRequests\",\n                method: \"GET\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"items\",\n                    bodyModel: model.WorkRequestSummary,\n                    type: \"Array<model.WorkRequestSummary>\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-next-page\"),\n                            key: \"opcNextPage\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listWorkRequestsRecordIterator function.\n     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects\n     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllWorkRequests(request) {\n        return oci_common_1.paginateRecords(request, req => this.listWorkRequests(req));\n    }\n    /**\n     * NOTE: This function is deprecated in favor of listWorkRequestsResponseIterator function.\n     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listAllWorkRequestsResponses(request) {\n        return oci_common_1.paginateResponses(request, req => this.listWorkRequests(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the models.WorkRequestSummary objects\n     * contained in responses from the listWorkRequests operation. This iterator will fetch more data from the\n     * server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listWorkRequestsRecordIterator(request) {\n        return oci_common_1.paginateRecords(request, req => this.listWorkRequests(req));\n    }\n    /**\n     * Creates a new async iterator which will iterate over the responses received from the listWorkRequests operation. This iterator\n     * will fetch more data from the server as needed.\n     *\n     * @param request a request which can be sent to the service operation\n     */\n    listWorkRequestsResponseIterator(request) {\n        return oci_common_1.paginateResponses(request, req => this.listWorkRequests(req));\n    }\n    /**\n     * Move the compartment to a different parent compartment in the same tenancy. When you move a\n     * compartment, all its contents (subcompartments and resources) are moved with it. Note that\n     * the `CompartmentId` that you specify in the path is the compartment that you want to move.\n     * <p>\n     **IMPORTANT**: After you move a compartment to a new parent compartment, the access policies of\n     * the new parent take effect and the policies of the previous parent no longer apply. Ensure that you\n     * are aware of the implications for the compartment contents before you move it. For more\n     * information, see [Moving a Compartment](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingcompartments.htm#MoveCompartment).\n     *\n     * @param MoveCompartmentRequest\n     * @return MoveCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/MoveCompartment.ts.html |here} to see how to use MoveCompartment API.\n     */\n    moveCompartment(moveCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#moveCompartment.\");\n            const pathParams = {\n                \"{compartmentId}\": moveCompartmentRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": moveCompartmentRequest.ifMatch,\n                \"opc-request-id\": moveCompartmentRequest.opcRequestId,\n                \"opc-retry-token\": moveCompartmentRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, moveCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}/actions/moveCompartment\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(moveCompartmentRequest.moveCompartmentDetails, \"MoveCompartmentDetails\", model.MoveCompartmentDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"opc-work-request-id\"),\n                            key: \"opcWorkRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Recover the compartment from DELETED state to ACTIVE state.\n     *\n     * @param RecoverCompartmentRequest\n     * @return RecoverCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/RecoverCompartment.ts.html |here} to see how to use RecoverCompartment API.\n     */\n    recoverCompartment(recoverCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#recoverCompartment.\");\n            const pathParams = {\n                \"{compartmentId}\": recoverCompartmentRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": recoverCompartmentRequest.ifMatch,\n                \"opc-request-id\": recoverCompartmentRequest.opcRequestId\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, recoverCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}/actions/recoverCompartment\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"compartment\",\n                    bodyModel: model.Compartment,\n                    type: \"model.Compartment\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Removes a user from a group by deleting the corresponding `UserGroupMembership`.\n     * @param RemoveUserFromGroupRequest\n     * @return RemoveUserFromGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/RemoveUserFromGroup.ts.html |here} to see how to use RemoveUserFromGroup API.\n     */\n    removeUserFromGroup(removeUserFromGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#removeUserFromGroup.\");\n            const pathParams = {\n                \"{userGroupMembershipId}\": removeUserFromGroupRequest.userGroupMembershipId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": removeUserFromGroupRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, removeUserFromGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/userGroupMemberships/{userGroupMembershipId}\",\n                method: \"DELETE\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Resets the OAuth2 client credentials for the SCIM client associated with this identity provider.\n     *\n     * @param ResetIdpScimClientRequest\n     * @return ResetIdpScimClientResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/ResetIdpScimClient.ts.html |here} to see how to use ResetIdpScimClient API.\n     */\n    resetIdpScimClient(resetIdpScimClientRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#resetIdpScimClient.\");\n            const pathParams = {\n                \"{identityProviderId}\": resetIdpScimClientRequest.identityProviderId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, resetIdpScimClientRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/actions/resetScimClient\",\n                method: \"POST\",\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"scimClientCredentials\",\n                    bodyModel: model.ScimClientCredentials,\n                    type: \"model.ScimClientCredentials\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified auth token's description.\n     *\n     * @param UpdateAuthTokenRequest\n     * @return UpdateAuthTokenResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateAuthToken.ts.html |here} to see how to use UpdateAuthToken API.\n     */\n    updateAuthToken(updateAuthTokenRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateAuthToken.\");\n            const pathParams = {\n                \"{userId}\": updateAuthTokenRequest.userId,\n                \"{authTokenId}\": updateAuthTokenRequest.authTokenId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateAuthTokenRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateAuthTokenRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/authTokens/{authTokenId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateAuthTokenRequest.updateAuthTokenDetails, \"UpdateAuthTokenDetails\", model.UpdateAuthTokenDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"authToken\",\n                    bodyModel: model.AuthToken,\n                    type: \"model.AuthToken\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates authentication policy for the specified tenancy\n     *\n     * @param UpdateAuthenticationPolicyRequest\n     * @return UpdateAuthenticationPolicyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateAuthenticationPolicy.ts.html |here} to see how to use UpdateAuthenticationPolicy API.\n     */\n    updateAuthenticationPolicy(updateAuthenticationPolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateAuthenticationPolicy.\");\n            const pathParams = {\n                \"{compartmentId}\": updateAuthenticationPolicyRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateAuthenticationPolicyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateAuthenticationPolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/authenticationPolicies/{compartmentId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateAuthenticationPolicyRequest.updateAuthenticationPolicyDetails, \"UpdateAuthenticationPolicyDetails\", model.UpdateAuthenticationPolicyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"authenticationPolicy\",\n                    bodyModel: model.AuthenticationPolicy,\n                    type: \"model.AuthenticationPolicy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified compartment's description or name. You can't update the root compartment.\n     * @param UpdateCompartmentRequest\n     * @return UpdateCompartmentResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateCompartment.ts.html |here} to see how to use UpdateCompartment API.\n     */\n    updateCompartment(updateCompartmentRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateCompartment.\");\n            const pathParams = {\n                \"{compartmentId}\": updateCompartmentRequest.compartmentId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateCompartmentRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateCompartmentRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/compartments/{compartmentId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateCompartmentRequest.updateCompartmentDetails, \"UpdateCompartmentDetails\", model.UpdateCompartmentDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"compartment\",\n                    bodyModel: model.Compartment,\n                    type: \"model.Compartment\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified secret key's description.\n     *\n     * @param UpdateCustomerSecretKeyRequest\n     * @return UpdateCustomerSecretKeyResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateCustomerSecretKey.ts.html |here} to see how to use UpdateCustomerSecretKey API.\n     */\n    updateCustomerSecretKey(updateCustomerSecretKeyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateCustomerSecretKey.\");\n            const pathParams = {\n                \"{userId}\": updateCustomerSecretKeyRequest.userId,\n                \"{customerSecretKeyId}\": updateCustomerSecretKeyRequest.customerSecretKeyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateCustomerSecretKeyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateCustomerSecretKeyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/customerSecretKeys/{customerSecretKeyId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateCustomerSecretKeyRequest.updateCustomerSecretKeyDetails, \"UpdateCustomerSecretKeyDetails\", model.UpdateCustomerSecretKeyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"customerSecretKeySummary\",\n                    bodyModel: model.CustomerSecretKeySummary,\n                    type: \"model.CustomerSecretKeySummary\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified dynamic group.\n     * @param UpdateDynamicGroupRequest\n     * @return UpdateDynamicGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateDynamicGroup.ts.html |here} to see how to use UpdateDynamicGroup API.\n     */\n    updateDynamicGroup(updateDynamicGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateDynamicGroup.\");\n            const pathParams = {\n                \"{dynamicGroupId}\": updateDynamicGroupRequest.dynamicGroupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateDynamicGroupRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateDynamicGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/dynamicGroups/{dynamicGroupId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateDynamicGroupRequest.updateDynamicGroupDetails, \"UpdateDynamicGroupDetails\", model.UpdateDynamicGroupDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"dynamicGroup\",\n                    bodyModel: model.DynamicGroup,\n                    type: \"model.DynamicGroup\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified group.\n     * @param UpdateGroupRequest\n     * @return UpdateGroupResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateGroup.ts.html |here} to see how to use UpdateGroup API.\n     */\n    updateGroup(updateGroupRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateGroup.\");\n            const pathParams = {\n                \"{groupId}\": updateGroupRequest.groupId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateGroupRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateGroupRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/groups/{groupId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateGroupRequest.updateGroupDetails, \"UpdateGroupDetails\", model.UpdateGroupDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"group\",\n                    bodyModel: model.Group,\n                    type: \"model.Group\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified identity provider.\n     * @param UpdateIdentityProviderRequest\n     * @return UpdateIdentityProviderResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateIdentityProvider.ts.html |here} to see how to use UpdateIdentityProvider API.\n     */\n    updateIdentityProvider(updateIdentityProviderRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateIdentityProvider.\");\n            const pathParams = {\n                \"{identityProviderId}\": updateIdentityProviderRequest.identityProviderId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateIdentityProviderRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateIdentityProviderRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateIdentityProviderRequest.updateIdentityProviderDetails, \"UpdateIdentityProviderDetails\", model.UpdateIdentityProviderDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"identityProvider\",\n                    bodyModel: model.IdentityProvider,\n                    type: \"model.IdentityProvider\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified group mapping.\n     * @param UpdateIdpGroupMappingRequest\n     * @return UpdateIdpGroupMappingResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateIdpGroupMapping.ts.html |here} to see how to use UpdateIdpGroupMapping API.\n     */\n    updateIdpGroupMapping(updateIdpGroupMappingRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateIdpGroupMapping.\");\n            const pathParams = {\n                \"{identityProviderId}\": updateIdpGroupMappingRequest.identityProviderId,\n                \"{mappingId}\": updateIdpGroupMappingRequest.mappingId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateIdpGroupMappingRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateIdpGroupMappingRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/identityProviders/{identityProviderId}/groupMappings/{mappingId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateIdpGroupMappingRequest.updateIdpGroupMappingDetails, \"UpdateIdpGroupMappingDetails\", model.UpdateIdpGroupMappingDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"idpGroupMapping\",\n                    bodyModel: model.IdpGroupMapping,\n                    type: \"model.IdpGroupMapping\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified network source.\n     * @param UpdateNetworkSourceRequest\n     * @return UpdateNetworkSourceResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateNetworkSource.ts.html |here} to see how to use UpdateNetworkSource API.\n     */\n    updateNetworkSource(updateNetworkSourceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateNetworkSource.\");\n            const pathParams = {\n                \"{networkSourceId}\": updateNetworkSourceRequest.networkSourceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateNetworkSourceRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateNetworkSourceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/networkSources/{networkSourceId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateNetworkSourceRequest.updateNetworkSourceDetails, \"UpdateNetworkSourceDetails\", model.UpdateNetworkSourceDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"networkSources\",\n                    bodyModel: model.NetworkSources,\n                    type: \"model.NetworkSources\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates Oauth token for the user\n     *\n     * @param UpdateOAuthClientCredentialRequest\n     * @return UpdateOAuthClientCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateOAuthClientCredential.ts.html |here} to see how to use UpdateOAuthClientCredential API.\n     */\n    updateOAuthClientCredential(updateOAuthClientCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateOAuthClientCredential.\");\n            const pathParams = {\n                \"{userId}\": updateOAuthClientCredentialRequest.userId,\n                \"{oauth2ClientCredentialId}\": updateOAuthClientCredentialRequest.oauth2ClientCredentialId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateOAuthClientCredentialRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateOAuthClientCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/oauth2ClientCredentials/{oauth2ClientCredentialId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateOAuthClientCredentialRequest.updateOAuth2ClientCredentialDetails, \"UpdateOAuth2ClientCredentialDetails\", model.UpdateOAuth2ClientCredentialDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"oAuth2ClientCredential\",\n                    bodyModel: model.OAuth2ClientCredential,\n                    type: \"model.OAuth2ClientCredential\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Updates the specified policy. You can update the description or the policy statements themselves.\n  * <p>\n  Policy changes take effect typically within 10 seconds.\n  *\n       * @param UpdatePolicyRequest\n       * @return UpdatePolicyResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdatePolicy.ts.html |here} to see how to use UpdatePolicy API.\n       */\n    updatePolicy(updatePolicyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updatePolicy.\");\n            const pathParams = {\n                \"{policyId}\": updatePolicyRequest.policyId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updatePolicyRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updatePolicyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/policies/{policyId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updatePolicyRequest.updatePolicyDetails, \"UpdatePolicyDetails\", model.UpdatePolicyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"policy\",\n                    bodyModel: model.Policy,\n                    type: \"model.Policy\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified SMTP credential's description.\n     *\n     * @param UpdateSmtpCredentialRequest\n     * @return UpdateSmtpCredentialResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateSmtpCredential.ts.html |here} to see how to use UpdateSmtpCredential API.\n     */\n    updateSmtpCredential(updateSmtpCredentialRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateSmtpCredential.\");\n            const pathParams = {\n                \"{userId}\": updateSmtpCredentialRequest.userId,\n                \"{smtpCredentialId}\": updateSmtpCredentialRequest.smtpCredentialId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateSmtpCredentialRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateSmtpCredentialRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/smtpCredentials/{smtpCredentialId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateSmtpCredentialRequest.updateSmtpCredentialDetails, \"UpdateSmtpCredentialDetails\", model.UpdateSmtpCredentialDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"smtpCredentialSummary\",\n                    bodyModel: model.SmtpCredentialSummary,\n                    type: \"model.SmtpCredentialSummary\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * **Deprecated. Use {@link #updateAuthToken(UpdateAuthTokenRequest) updateAuthToken} instead.**\n  * <p>\n  Updates the specified Swift password's description.\n  *\n       * @param UpdateSwiftPasswordRequest\n       * @return UpdateSwiftPasswordResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateSwiftPassword.ts.html |here} to see how to use UpdateSwiftPassword API.\n       */\n    updateSwiftPassword(updateSwiftPasswordRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateSwiftPassword.\");\n            const pathParams = {\n                \"{userId}\": updateSwiftPasswordRequest.userId,\n                \"{swiftPasswordId}\": updateSwiftPasswordRequest.swiftPasswordId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateSwiftPasswordRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateSwiftPasswordRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/swiftPasswords/{swiftPasswordId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateSwiftPasswordRequest.updateSwiftPasswordDetails, \"UpdateSwiftPasswordDetails\", model.UpdateSwiftPasswordDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"swiftPassword\",\n                    bodyModel: model.SwiftPassword,\n                    type: \"model.SwiftPassword\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Updates the specified tag definition.\n  * <p>\n  Setting `validator` determines the value type. Tags can use either a static value or a\n  * list of possible values. Static values are entered by a user applying the tag to a resource.\n  * Lists are created by you and the user must apply a value from the list. On update, any values\n  * in a list that were previously set do not change, but new values must pass validation. Values\n  * already applied to a resource do not change.\n  * <p>\n  You cannot remove list values that appear in a TagDefault. To remove a list value that\n  * appears in a TagDefault, first update the TagDefault to use a different value.\n  *\n       * @param UpdateTagRequest\n       * @return UpdateTagResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateTag.ts.html |here} to see how to use UpdateTag API.\n       */\n    updateTag(updateTagRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateTag.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": updateTagRequest.tagNamespaceId,\n                \"{tagName}\": updateTagRequest.tagName\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateTagRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateTagRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}/tags/{tagName}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateTagRequest.updateTagDetails, \"UpdateTagDetails\", model.UpdateTagDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tag\",\n                    bodyModel: model.Tag,\n                    type: \"model.Tag\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the specified tag default. If you specify that a value is required, a value is set\n     * during resource creation (either by the user creating the resource or another tag defualt).\n     * If no value is set, resource creation is blocked.\n     * <p>\n     * If the `isRequired` flag is set to \\\"true\\\", the value is set during resource creation.\n     * * If the `isRequired` flag is set to \\\"false\\\", the value you enter is set during resource creation.\n     *\n     * @param UpdateTagDefaultRequest\n     * @return UpdateTagDefaultResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateTagDefault.ts.html |here} to see how to use UpdateTagDefault API.\n     */\n    updateTagDefault(updateTagDefaultRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateTagDefault.\");\n            const pathParams = {\n                \"{tagDefaultId}\": updateTagDefaultRequest.tagDefaultId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateTagDefaultRequest.ifMatch,\n                \"opc-request-id\": updateTagDefaultRequest.opcRequestId\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateTagDefaultRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagDefaults/{tagDefaultId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateTagDefaultRequest.updateTagDefaultDetails, \"UpdateTagDefaultDetails\", model.UpdateTagDefaultDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagDefault\",\n                    bodyModel: model.TagDefault,\n                    type: \"model.TagDefault\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Updates the the specified tag namespace. You can't update the namespace name.\n  * <p>\n  Updating `isRetired` to 'true' retires the namespace and all the tag definitions in the namespace. Reactivating a\n  * namespace (changing `isRetired` from 'true' to 'false') does not reactivate tag definitions.\n  * To reactivate the tag definitions, you must reactivate each one individually *after* you reactivate the namespace,\n  * using {@link #updateTag(UpdateTagRequest) updateTag}. For more information about retiring tag namespaces, see\n  * [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/Content/Identity/Concepts/taggingoverview.htm#Retiring).\n  * <p>\n  You can't add a namespace with the same name as a retired namespace in the same tenancy.\n  *\n       * @param UpdateTagNamespaceRequest\n       * @return UpdateTagNamespaceResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateTagNamespace.ts.html |here} to see how to use UpdateTagNamespace API.\n       */\n    updateTagNamespace(updateTagNamespaceRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateTagNamespace.\");\n            const pathParams = {\n                \"{tagNamespaceId}\": updateTagNamespaceRequest.tagNamespaceId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateTagNamespaceRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/tagNamespaces/{tagNamespaceId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateTagNamespaceRequest.updateTagNamespaceDetails, \"UpdateTagNamespaceDetails\", model.UpdateTagNamespaceDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"tagNamespace\",\n                    bodyModel: model.TagNamespace,\n                    type: \"model.TagNamespace\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the description of the specified user.\n     * @param UpdateUserRequest\n     * @return UpdateUserResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateUser.ts.html |here} to see how to use UpdateUser API.\n     */\n    updateUser(updateUserRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateUser.\");\n            const pathParams = {\n                \"{userId}\": updateUserRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateUserRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateUserRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateUserRequest.updateUserDetails, \"UpdateUserDetails\", model.UpdateUserDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"user\",\n                    bodyModel: model.User,\n                    type: \"model.User\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the capabilities of the specified user.\n     *\n     * @param UpdateUserCapabilitiesRequest\n     * @return UpdateUserCapabilitiesResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateUserCapabilities.ts.html |here} to see how to use UpdateUserCapabilities API.\n     */\n    updateUserCapabilities(updateUserCapabilitiesRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateUserCapabilities.\");\n            const pathParams = {\n                \"{userId}\": updateUserCapabilitiesRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateUserCapabilitiesRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateUserCapabilitiesRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/capabilities\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateUserCapabilitiesRequest.updateUserCapabilitiesDetails, \"UpdateUserCapabilitiesDetails\", model.UpdateUserCapabilitiesDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"user\",\n                    bodyModel: model.User,\n                    type: \"model.User\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n     * Updates the state of the specified user.\n     *\n     * @param UpdateUserStateRequest\n     * @return UpdateUserStateResponse\n     * @throws OciError when an error occurs\n     * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UpdateUserState.ts.html |here} to see how to use UpdateUserState API.\n     */\n    updateUserState(updateUserStateRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#updateUserState.\");\n            const pathParams = {\n                \"{userId}\": updateUserStateRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"if-match\": updateUserStateRequest.ifMatch\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, updateUserStateRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/state\",\n                method: \"PUT\",\n                bodyContent: common.ObjectSerializer.serialize(updateUserStateRequest.updateStateDetails, \"UpdateStateDetails\", model.UpdateStateDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"user\",\n                    bodyModel: model.User,\n                    type: \"model.User\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    /**\n       * Uploads an API signing key for the specified user.\n  * <p>\n  Every user has permission to use this operation to upload a key for *their own user ID*. An\n  * administrator in your organization does not need to write a policy to give users this ability.\n  * To compare, administrators who have permission to the tenancy can use this operation to upload a\n  * key for any user, including themselves.\n  * <p>\n  **Important:** Even though you have permission to upload an API key, you might not yet\n  * have permission to do much else. If you try calling an operation unrelated to your own credential\n  * management (e.g., `ListUsers`, `LaunchInstance`) and receive an \\\"unauthorized\\\" error,\n  * check with an administrator to confirm which IAM Service group(s) you're in and what access\n  * you have. Also confirm you're working in the correct compartment.\n  * <p>\n  After you send your request, the new object's `lifecycleState` will temporarily be CREATING. Before using\n  * the object, first make sure its `lifecycleState` has changed to ACTIVE.\n  *\n       * @param UploadApiKeyRequest\n       * @return UploadApiKeyResponse\n       * @throws OciError when an error occurs\n       * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.5.0/identity/UploadApiKey.ts.html |here} to see how to use UploadApiKey API.\n       */\n    uploadApiKey(uploadApiKeyRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.logger)\n                this.logger.debug(\"Calling operation IdentityClient#uploadApiKey.\");\n            const pathParams = {\n                \"{userId}\": uploadApiKeyRequest.userId\n            };\n            const queryParams = {};\n            let headerParams = {\n                \"Content-Type\": common.Constants.APPLICATION_JSON,\n                \"opc-retry-token\": uploadApiKeyRequest.opcRetryToken\n            };\n            const retrier = oci_common_2.GenericRetrier.createPreferredRetrier(this._clientConfiguration ? this._clientConfiguration.retryConfiguration : {}, uploadApiKeyRequest.retryConfiguration);\n            if (this.logger)\n                retrier.logger = this.logger;\n            const request = yield oci_common_2.composeRequest({\n                baseEndpoint: this._endpoint,\n                defaultHeaders: this._defaultHeaders,\n                path: \"/users/{userId}/apiKeys\",\n                method: \"POST\",\n                bodyContent: common.ObjectSerializer.serialize(uploadApiKeyRequest.createApiKeyDetails, \"CreateApiKeyDetails\", model.CreateApiKeyDetails.getJsonObj),\n                pathParams: pathParams,\n                headerParams: headerParams,\n                queryParams: queryParams\n            });\n            try {\n                const response = yield retrier.makeServiceCall(this._httpClient, request);\n                const sdkResponse = oci_common_2.composeResponse({\n                    responseObject: {},\n                    body: yield response.json(),\n                    bodyKey: \"apiKey\",\n                    bodyModel: model.ApiKey,\n                    type: \"model.ApiKey\",\n                    responseHeaders: [\n                        {\n                            value: response.headers.get(\"opc-request-id\"),\n                            key: \"opcRequestId\",\n                            dataType: \"string\"\n                        },\n                        {\n                            value: response.headers.get(\"etag\"),\n                            key: \"etag\",\n                            dataType: \"string\"\n                        }\n                    ]\n                });\n                return sdkResponse;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n}\nexports.IdentityClient = IdentityClient;\nIdentityClient.serviceEndpointTemplate = \"https://identity.{region}.{secondLevelDomain}\";\n//# sourceMappingURL=client.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityWaiter = void 0;\nconst models = __importStar(require(\"./model\"));\nconst oci_common_1 = require(\"oci-common\");\nclass IdentityWaiter {\n    constructor(client, config) {\n        this.client = client;\n        this.config = config;\n    }\n    /**\n     * Waits forCompartment till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetCompartmentResponse | null (null in case of 404 response)\n     */\n    forCompartment(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getCompartment(request), response => targetStates.includes(response.compartment.lifecycleState), targetStates.includes(models.Compartment.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forDynamicGroup till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetDynamicGroupResponse | null (null in case of 404 response)\n     */\n    forDynamicGroup(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getDynamicGroup(request), response => targetStates.includes(response.dynamicGroup.lifecycleState), targetStates.includes(models.DynamicGroup.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forGroup till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetGroupResponse | null (null in case of 404 response)\n     */\n    forGroup(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getGroup(request), response => targetStates.includes(response.group.lifecycleState), targetStates.includes(models.Group.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forIdentityProvider till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetIdentityProviderResponse | null (null in case of 404 response)\n     */\n    forIdentityProvider(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getIdentityProvider(request), response => targetStates.includes(response.identityProvider.lifecycleState), targetStates.includes(models.IdentityProvider.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forIdpGroupMapping till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetIdpGroupMappingResponse | null (null in case of 404 response)\n     */\n    forIdpGroupMapping(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getIdpGroupMapping(request), response => targetStates.includes(response.idpGroupMapping.lifecycleState), targetStates.includes(models.IdpGroupMapping.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forPolicy till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetPolicyResponse | null (null in case of 404 response)\n     */\n    forPolicy(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getPolicy(request), response => targetStates.includes(response.policy.lifecycleState), targetStates.includes(models.Policy.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forTag till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetTagResponse | null (null in case of 404 response)\n     */\n    forTag(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTag(request), response => targetStates.includes(response.tag.lifecycleState), targetStates.includes(models.Tag.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forTagDefault till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetTagDefaultResponse\n     */\n    forTagDefault(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericWaiter(this.config, () => this.client.getTagDefault(request), response => targetStates.includes(response.tagDefault.lifecycleState));\n        });\n    }\n    /**\n     * Waits forTagNamespace till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetTagNamespaceResponse | null (null in case of 404 response)\n     */\n    forTagNamespace(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getTagNamespace(request), response => targetStates.includes(response.tagNamespace.lifecycleState), targetStates.includes(models.TagNamespace.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forTaggingWorkRequest\n     *\n     * @param request the request to send\n     * @return response returns GetTaggingWorkRequestResponse\n     */\n    forTaggingWorkRequest(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericWaiter(this.config, () => this.client.getTaggingWorkRequest(request), response => (response.taggingWorkRequest.timeFinished ? true : false));\n        });\n    }\n    /**\n     * Waits forUser till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetUserResponse | null (null in case of 404 response)\n     */\n    forUser(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getUser(request), response => targetStates.includes(response.user.lifecycleState), targetStates.includes(models.User.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forUserGroupMembership till it reaches any of the provided states\n     *\n     * @param request the request to send\n     * @param targetStates the desired states to wait for. The waiter will return once the resource reaches any of the provided states\n     * @return response returns GetUserGroupMembershipResponse | null (null in case of 404 response)\n     */\n    forUserGroupMembership(request, ...targetStates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericTerminalConditionWaiter(this.config, () => this.client.getUserGroupMembership(request), response => targetStates.includes(response.userGroupMembership.lifecycleState), targetStates.includes(models.UserGroupMembership.LifecycleState.Deleted));\n        });\n    }\n    /**\n     * Waits forWorkRequest\n     *\n     * @param request the request to send\n     * @return response returns GetWorkRequestResponse\n     */\n    forWorkRequest(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return oci_common_1.genericWaiter(this.config, () => this.client.getWorkRequest(request), response => (response.workRequest.timeFinished ? true : false));\n        });\n    }\n}\nexports.IdentityWaiter = IdentityWaiter;\n//# sourceMappingURL=identity-waiter.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddUserToGroupDetails = void 0;\nvar AddUserToGroupDetails;\n(function (AddUserToGroupDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AddUserToGroupDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AddUserToGroupDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(AddUserToGroupDetails = exports.AddUserToGroupDetails || (exports.AddUserToGroupDetails = {}));\n//# sourceMappingURL=add-user-to-group-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApiKey = void 0;\nvar ApiKey;\n(function (ApiKey) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = ApiKey.LifecycleState || (ApiKey.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ApiKey.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ApiKey.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ApiKey = exports.ApiKey || (exports.ApiKey = {}));\n//# sourceMappingURL=api-key.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthToken = void 0;\nvar AuthToken;\n(function (AuthToken) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = AuthToken.LifecycleState || (AuthToken.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AuthToken.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AuthToken.getDeserializedJsonObj = getDeserializedJsonObj;\n})(AuthToken = exports.AuthToken || (exports.AuthToken = {}));\n//# sourceMappingURL=auth-token.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthenticationPolicy = void 0;\nconst model = __importStar(require(\"../model\"));\nvar AuthenticationPolicy;\n(function (AuthenticationPolicy) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"passwordPolicy\": obj.passwordPolicy\n                ? model.PasswordPolicy.getJsonObj(obj.passwordPolicy)\n                : undefined,\n            \"networkPolicy\": obj.networkPolicy\n                ? model.NetworkPolicy.getJsonObj(obj.networkPolicy)\n                : undefined\n        });\n        return jsonObj;\n    }\n    AuthenticationPolicy.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"passwordPolicy\": obj.passwordPolicy\n                ? model.PasswordPolicy.getDeserializedJsonObj(obj.passwordPolicy)\n                : undefined,\n            \"networkPolicy\": obj.networkPolicy\n                ? model.NetworkPolicy.getDeserializedJsonObj(obj.networkPolicy)\n                : undefined\n        });\n        return jsonObj;\n    }\n    AuthenticationPolicy.getDeserializedJsonObj = getDeserializedJsonObj;\n})(AuthenticationPolicy = exports.AuthenticationPolicy || (exports.AuthenticationPolicy = {}));\n//# sourceMappingURL=authentication-policy.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AvailabilityDomain = void 0;\nvar AvailabilityDomain;\n(function (AvailabilityDomain) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AvailabilityDomain.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    AvailabilityDomain.getDeserializedJsonObj = getDeserializedJsonObj;\n})(AvailabilityDomain = exports.AvailabilityDomain || (exports.AvailabilityDomain = {}));\n//# sourceMappingURL=availability-domain.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTagDefinitionValidator = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BaseTagDefinitionValidator;\n(function (BaseTagDefinitionValidator) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"validatorType\" in obj && obj.validatorType) {\n            switch (obj.validatorType) {\n                case \"DEFAULT\":\n                    return model.DefaultTagDefinitionValidator.getJsonObj(jsonObj, true);\n                case \"ENUM\":\n                    return model.EnumTagDefinitionValidator.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.validatorType);\n            }\n        }\n        return jsonObj;\n    }\n    BaseTagDefinitionValidator.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"validatorType\" in obj && obj.validatorType) {\n            switch (obj.validatorType) {\n                case \"DEFAULT\":\n                    return model.DefaultTagDefinitionValidator.getDeserializedJsonObj(jsonObj, true);\n                case \"ENUM\":\n                    return model.EnumTagDefinitionValidator.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.validatorType);\n            }\n        }\n        return jsonObj;\n    }\n    BaseTagDefinitionValidator.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BaseTagDefinitionValidator = exports.BaseTagDefinitionValidator || (exports.BaseTagDefinitionValidator = {}));\n//# sourceMappingURL=base-tag-definition-validator.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkActionResourceTypeCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BulkActionResourceTypeCollection;\n(function (BulkActionResourceTypeCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.BulkActionResourceType.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkActionResourceTypeCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.BulkActionResourceType.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkActionResourceTypeCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkActionResourceTypeCollection = exports.BulkActionResourceTypeCollection || (exports.BulkActionResourceTypeCollection = {}));\n//# sourceMappingURL=bulk-action-resource-type-collection.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkActionResourceType = void 0;\nvar BulkActionResourceType;\n(function (BulkActionResourceType) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkActionResourceType.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkActionResourceType.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkActionResourceType = exports.BulkActionResourceType || (exports.BulkActionResourceType = {}));\n//# sourceMappingURL=bulk-action-resource-type.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkActionResource = void 0;\nvar BulkActionResource;\n(function (BulkActionResource) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkActionResource.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkActionResource.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkActionResource = exports.BulkActionResource || (exports.BulkActionResource = {}));\n//# sourceMappingURL=bulk-action-resource.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkDeleteResourcesDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BulkDeleteResourcesDetails;\n(function (BulkDeleteResourcesDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkActionResource.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkDeleteResourcesDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkActionResource.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkDeleteResourcesDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkDeleteResourcesDetails = exports.BulkDeleteResourcesDetails || (exports.BulkDeleteResourcesDetails = {}));\n//# sourceMappingURL=bulk-delete-resources-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkDeleteTagsDetails = void 0;\nvar BulkDeleteTagsDetails;\n(function (BulkDeleteTagsDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkDeleteTagsDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkDeleteTagsDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkDeleteTagsDetails = exports.BulkDeleteTagsDetails || (exports.BulkDeleteTagsDetails = {}));\n//# sourceMappingURL=bulk-delete-tags-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEditOperationDetails = void 0;\nvar BulkEditOperationDetails;\n(function (BulkEditOperationDetails) {\n    let OperationType;\n    (function (OperationType) {\n        OperationType[\"AddWhereAbsent\"] = \"ADD_WHERE_ABSENT\";\n        OperationType[\"SetWherePresent\"] = \"SET_WHERE_PRESENT\";\n        OperationType[\"AddOrSet\"] = \"ADD_OR_SET\";\n        OperationType[\"Remove\"] = \"REMOVE\";\n    })(OperationType = BulkEditOperationDetails.OperationType || (BulkEditOperationDetails.OperationType = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditOperationDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditOperationDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkEditOperationDetails = exports.BulkEditOperationDetails || (exports.BulkEditOperationDetails = {}));\n//# sourceMappingURL=bulk-edit-operation-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEditResource = void 0;\nvar BulkEditResource;\n(function (BulkEditResource) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditResource.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditResource.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkEditResource = exports.BulkEditResource || (exports.BulkEditResource = {}));\n//# sourceMappingURL=bulk-edit-resource.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEditTagsDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BulkEditTagsDetails;\n(function (BulkEditTagsDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkEditResource.getJsonObj(item);\n                })\n                : undefined,\n            \"bulkEditOperations\": obj.bulkEditOperations\n                ? obj.bulkEditOperations.map(item => {\n                    return model.BulkEditOperationDetails.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkEditTagsDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkEditResource.getDeserializedJsonObj(item);\n                })\n                : undefined,\n            \"bulkEditOperations\": obj.bulkEditOperations\n                ? obj.bulkEditOperations.map(item => {\n                    return model.BulkEditOperationDetails.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkEditTagsDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkEditTagsDetails = exports.BulkEditTagsDetails || (exports.BulkEditTagsDetails = {}));\n//# sourceMappingURL=bulk-edit-tags-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEditTagsResourceTypeCollection = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BulkEditTagsResourceTypeCollection;\n(function (BulkEditTagsResourceTypeCollection) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.BulkEditTagsResourceType.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkEditTagsResourceTypeCollection.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"items\": obj.items\n                ? obj.items.map(item => {\n                    return model.BulkEditTagsResourceType.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkEditTagsResourceTypeCollection.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkEditTagsResourceTypeCollection = exports.BulkEditTagsResourceTypeCollection || (exports.BulkEditTagsResourceTypeCollection = {}));\n//# sourceMappingURL=bulk-edit-tags-resource-type-collection.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkEditTagsResourceType = void 0;\nvar BulkEditTagsResourceType;\n(function (BulkEditTagsResourceType) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditTagsResourceType.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    BulkEditTagsResourceType.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkEditTagsResourceType = exports.BulkEditTagsResourceType || (exports.BulkEditTagsResourceType = {}));\n//# sourceMappingURL=bulk-edit-tags-resource-type.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BulkMoveResourcesDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar BulkMoveResourcesDetails;\n(function (BulkMoveResourcesDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkActionResource.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkMoveResourcesDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.BulkActionResource.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    BulkMoveResourcesDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(BulkMoveResourcesDetails = exports.BulkMoveResourcesDetails || (exports.BulkMoveResourcesDetails = {}));\n//# sourceMappingURL=bulk-move-resources-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeTagNamespaceCompartmentDetail = void 0;\nvar ChangeTagNamespaceCompartmentDetail;\n(function (ChangeTagNamespaceCompartmentDetail) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeTagNamespaceCompartmentDetail.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ChangeTagNamespaceCompartmentDetail.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ChangeTagNamespaceCompartmentDetail = exports.ChangeTagNamespaceCompartmentDetail || (exports.ChangeTagNamespaceCompartmentDetail = {}));\n//# sourceMappingURL=change-tag-namespace-compartment-detail.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Compartment = void 0;\nvar Compartment;\n(function (Compartment) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = Compartment.LifecycleState || (Compartment.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Compartment.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Compartment.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Compartment = exports.Compartment || (exports.Compartment = {}));\n//# sourceMappingURL=compartment.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateApiKeyDetails = void 0;\nvar CreateApiKeyDetails;\n(function (CreateApiKeyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateApiKeyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateApiKeyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateApiKeyDetails = exports.CreateApiKeyDetails || (exports.CreateApiKeyDetails = {}));\n//# sourceMappingURL=create-api-key-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateAuthTokenDetails = void 0;\nvar CreateAuthTokenDetails;\n(function (CreateAuthTokenDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateAuthTokenDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateAuthTokenDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateAuthTokenDetails = exports.CreateAuthTokenDetails || (exports.CreateAuthTokenDetails = {}));\n//# sourceMappingURL=create-auth-token-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCompartmentDetails = void 0;\nvar CreateCompartmentDetails;\n(function (CreateCompartmentDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateCompartmentDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateCompartmentDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateCompartmentDetails = exports.CreateCompartmentDetails || (exports.CreateCompartmentDetails = {}));\n//# sourceMappingURL=create-compartment-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCustomerSecretKeyDetails = void 0;\nvar CreateCustomerSecretKeyDetails;\n(function (CreateCustomerSecretKeyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateCustomerSecretKeyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateCustomerSecretKeyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateCustomerSecretKeyDetails = exports.CreateCustomerSecretKeyDetails || (exports.CreateCustomerSecretKeyDetails = {}));\n//# sourceMappingURL=create-customer-secret-key-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDynamicGroupDetails = void 0;\nvar CreateDynamicGroupDetails;\n(function (CreateDynamicGroupDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateDynamicGroupDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateDynamicGroupDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateDynamicGroupDetails = exports.CreateDynamicGroupDetails || (exports.CreateDynamicGroupDetails = {}));\n//# sourceMappingURL=create-dynamic-group-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateGroupDetails = void 0;\nvar CreateGroupDetails;\n(function (CreateGroupDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateGroupDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateGroupDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateGroupDetails = exports.CreateGroupDetails || (exports.CreateGroupDetails = {}));\n//# sourceMappingURL=create-group-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateIdentityProviderDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateIdentityProviderDetails;\n(function (CreateIdentityProviderDetails) {\n    let ProductType;\n    (function (ProductType) {\n        ProductType[\"Idcs\"] = \"IDCS\";\n        ProductType[\"Adfs\"] = \"ADFS\";\n    })(ProductType = CreateIdentityProviderDetails.ProductType || (CreateIdentityProviderDetails.ProductType = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.CreateSaml2IdentityProviderDetails.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    CreateIdentityProviderDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.CreateSaml2IdentityProviderDetails.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    CreateIdentityProviderDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateIdentityProviderDetails = exports.CreateIdentityProviderDetails || (exports.CreateIdentityProviderDetails = {}));\n//# sourceMappingURL=create-identity-provider-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateIdpGroupMappingDetails = void 0;\nvar CreateIdpGroupMappingDetails;\n(function (CreateIdpGroupMappingDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateIdpGroupMappingDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateIdpGroupMappingDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateIdpGroupMappingDetails = exports.CreateIdpGroupMappingDetails || (exports.CreateIdpGroupMappingDetails = {}));\n//# sourceMappingURL=create-idp-group-mapping-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateNetworkSourceDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateNetworkSourceDetails;\n(function (CreateNetworkSourceDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateNetworkSourceDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateNetworkSourceDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateNetworkSourceDetails = exports.CreateNetworkSourceDetails || (exports.CreateNetworkSourceDetails = {}));\n//# sourceMappingURL=create-network-source-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateOAuth2ClientCredentialDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateOAuth2ClientCredentialDetails;\n(function (CreateOAuth2ClientCredentialDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateOAuth2ClientCredentialDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateOAuth2ClientCredentialDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateOAuth2ClientCredentialDetails = exports.CreateOAuth2ClientCredentialDetails || (exports.CreateOAuth2ClientCredentialDetails = {}));\n//# sourceMappingURL=create-oauth2-client-credential-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreatePolicyDetails = void 0;\nvar CreatePolicyDetails;\n(function (CreatePolicyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreatePolicyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreatePolicyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreatePolicyDetails = exports.CreatePolicyDetails || (exports.CreatePolicyDetails = {}));\n//# sourceMappingURL=create-policy-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateRegionSubscriptionDetails = void 0;\nvar CreateRegionSubscriptionDetails;\n(function (CreateRegionSubscriptionDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateRegionSubscriptionDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateRegionSubscriptionDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateRegionSubscriptionDetails = exports.CreateRegionSubscriptionDetails || (exports.CreateRegionSubscriptionDetails = {}));\n//# sourceMappingURL=create-region-subscription-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateSaml2IdentityProviderDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateSaml2IdentityProviderDetails;\n(function (CreateSaml2IdentityProviderDetails) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.CreateIdentityProviderDetails.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    CreateSaml2IdentityProviderDetails.getJsonObj = getJsonObj;\n    CreateSaml2IdentityProviderDetails.protocol = \"SAML2\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.CreateIdentityProviderDetails.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    CreateSaml2IdentityProviderDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateSaml2IdentityProviderDetails = exports.CreateSaml2IdentityProviderDetails || (exports.CreateSaml2IdentityProviderDetails = {}));\n//# sourceMappingURL=create-saml2-identity-provider-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateSmtpCredentialDetails = void 0;\nvar CreateSmtpCredentialDetails;\n(function (CreateSmtpCredentialDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateSmtpCredentialDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateSmtpCredentialDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateSmtpCredentialDetails = exports.CreateSmtpCredentialDetails || (exports.CreateSmtpCredentialDetails = {}));\n//# sourceMappingURL=create-smtp-credential-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateSwiftPasswordDetails = void 0;\nvar CreateSwiftPasswordDetails;\n(function (CreateSwiftPasswordDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateSwiftPasswordDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateSwiftPasswordDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateSwiftPasswordDetails = exports.CreateSwiftPasswordDetails || (exports.CreateSwiftPasswordDetails = {}));\n//# sourceMappingURL=create-swift-password-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateTagDefaultDetails = void 0;\nvar CreateTagDefaultDetails;\n(function (CreateTagDefaultDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateTagDefaultDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateTagDefaultDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateTagDefaultDetails = exports.CreateTagDefaultDetails || (exports.CreateTagDefaultDetails = {}));\n//# sourceMappingURL=create-tag-default-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateTagDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar CreateTagDetails;\n(function (CreateTagDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateTagDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getDeserializedJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    CreateTagDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateTagDetails = exports.CreateTagDetails || (exports.CreateTagDetails = {}));\n//# sourceMappingURL=create-tag-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateTagNamespaceDetails = void 0;\nvar CreateTagNamespaceDetails;\n(function (CreateTagNamespaceDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateTagNamespaceDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateTagNamespaceDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateTagNamespaceDetails = exports.CreateTagNamespaceDetails || (exports.CreateTagNamespaceDetails = {}));\n//# sourceMappingURL=create-tag-namespace-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateUserDetails = void 0;\nvar CreateUserDetails;\n(function (CreateUserDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateUserDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CreateUserDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CreateUserDetails = exports.CreateUserDetails || (exports.CreateUserDetails = {}));\n//# sourceMappingURL=create-user-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomerSecretKeySummary = void 0;\nvar CustomerSecretKeySummary;\n(function (CustomerSecretKeySummary) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = CustomerSecretKeySummary.LifecycleState || (CustomerSecretKeySummary.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CustomerSecretKeySummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CustomerSecretKeySummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CustomerSecretKeySummary = exports.CustomerSecretKeySummary || (exports.CustomerSecretKeySummary = {}));\n//# sourceMappingURL=customer-secret-key-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomerSecretKey = void 0;\nvar CustomerSecretKey;\n(function (CustomerSecretKey) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = CustomerSecretKey.LifecycleState || (CustomerSecretKey.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CustomerSecretKey.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    CustomerSecretKey.getDeserializedJsonObj = getDeserializedJsonObj;\n})(CustomerSecretKey = exports.CustomerSecretKey || (exports.CustomerSecretKey = {}));\n//# sourceMappingURL=customer-secret-key.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultTagDefinitionValidator = void 0;\nconst model = __importStar(require(\"../model\"));\nvar DefaultTagDefinitionValidator;\n(function (DefaultTagDefinitionValidator) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.BaseTagDefinitionValidator.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    DefaultTagDefinitionValidator.getJsonObj = getJsonObj;\n    DefaultTagDefinitionValidator.validatorType = \"DEFAULT\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.BaseTagDefinitionValidator.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    DefaultTagDefinitionValidator.getDeserializedJsonObj = getDeserializedJsonObj;\n})(DefaultTagDefinitionValidator = exports.DefaultTagDefinitionValidator || (exports.DefaultTagDefinitionValidator = {}));\n//# sourceMappingURL=default-tag-definition-validator.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DynamicGroup = void 0;\nvar DynamicGroup;\n(function (DynamicGroup) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = DynamicGroup.LifecycleState || (DynamicGroup.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    DynamicGroup.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    DynamicGroup.getDeserializedJsonObj = getDeserializedJsonObj;\n})(DynamicGroup = exports.DynamicGroup || (exports.DynamicGroup = {}));\n//# sourceMappingURL=dynamic-group.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnumTagDefinitionValidator = void 0;\nconst model = __importStar(require(\"../model\"));\nvar EnumTagDefinitionValidator;\n(function (EnumTagDefinitionValidator) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.BaseTagDefinitionValidator.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    EnumTagDefinitionValidator.getJsonObj = getJsonObj;\n    EnumTagDefinitionValidator.validatorType = \"ENUM\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.BaseTagDefinitionValidator.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    EnumTagDefinitionValidator.getDeserializedJsonObj = getDeserializedJsonObj;\n})(EnumTagDefinitionValidator = exports.EnumTagDefinitionValidator || (exports.EnumTagDefinitionValidator = {}));\n//# sourceMappingURL=enum-tag-definition-validator.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FaultDomain = void 0;\nvar FaultDomain;\n(function (FaultDomain) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    FaultDomain.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    FaultDomain.getDeserializedJsonObj = getDeserializedJsonObj;\n})(FaultDomain = exports.FaultDomain || (exports.FaultDomain = {}));\n//# sourceMappingURL=fault-domain.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FullyQualifiedScope = void 0;\nvar FullyQualifiedScope;\n(function (FullyQualifiedScope) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    FullyQualifiedScope.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    FullyQualifiedScope.getDeserializedJsonObj = getDeserializedJsonObj;\n})(FullyQualifiedScope = exports.FullyQualifiedScope || (exports.FullyQualifiedScope = {}));\n//# sourceMappingURL=fully-qualified-scope.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Group = void 0;\nvar Group;\n(function (Group) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = Group.LifecycleState || (Group.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Group.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Group.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Group = exports.Group || (exports.Group = {}));\n//# sourceMappingURL=group.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityProviderGroupSummary = void 0;\nvar IdentityProviderGroupSummary;\n(function (IdentityProviderGroupSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    IdentityProviderGroupSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    IdentityProviderGroupSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(IdentityProviderGroupSummary = exports.IdentityProviderGroupSummary || (exports.IdentityProviderGroupSummary = {}));\n//# sourceMappingURL=identity-provider-group-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdentityProvider = void 0;\nconst model = __importStar(require(\"../model\"));\nvar IdentityProvider;\n(function (IdentityProvider) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = IdentityProvider.LifecycleState || (IdentityProvider.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.Saml2IdentityProvider.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    IdentityProvider.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.Saml2IdentityProvider.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    IdentityProvider.getDeserializedJsonObj = getDeserializedJsonObj;\n})(IdentityProvider = exports.IdentityProvider || (exports.IdentityProvider = {}));\n//# sourceMappingURL=identity-provider.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdpGroupMapping = void 0;\nvar IdpGroupMapping;\n(function (IdpGroupMapping) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = IdpGroupMapping.LifecycleState || (IdpGroupMapping.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    IdpGroupMapping.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    IdpGroupMapping.getDeserializedJsonObj = getDeserializedJsonObj;\n})(IdpGroupMapping = exports.IdpGroupMapping || (exports.IdpGroupMapping = {}));\n//# sourceMappingURL=idp-group-mapping.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveCompartmentDetails = exports.MfaTotpToken = exports.MfaTotpDeviceSummary = exports.MfaTotpDevice = exports.IdpGroupMapping = exports.IdentityProviderGroupSummary = exports.IdentityProvider = exports.Group = exports.FullyQualifiedScope = exports.FaultDomain = exports.DynamicGroup = exports.CustomerSecretKeySummary = exports.CustomerSecretKey = exports.CreateUserDetails = exports.CreateTagNamespaceDetails = exports.CreateTagDetails = exports.CreateTagDefaultDetails = exports.CreateSwiftPasswordDetails = exports.CreateSmtpCredentialDetails = exports.CreateRegionSubscriptionDetails = exports.CreatePolicyDetails = exports.CreateOAuth2ClientCredentialDetails = exports.CreateNetworkSourceDetails = exports.CreateIdpGroupMappingDetails = exports.CreateIdentityProviderDetails = exports.CreateGroupDetails = exports.CreateDynamicGroupDetails = exports.CreateCustomerSecretKeyDetails = exports.CreateCompartmentDetails = exports.CreateAuthTokenDetails = exports.CreateApiKeyDetails = exports.Compartment = exports.ChangeTagNamespaceCompartmentDetail = exports.BulkMoveResourcesDetails = exports.BulkEditTagsResourceTypeCollection = exports.BulkEditTagsResourceType = exports.BulkEditTagsDetails = exports.BulkEditResource = exports.BulkEditOperationDetails = exports.BulkDeleteTagsDetails = exports.BulkDeleteResourcesDetails = exports.BulkActionResourceTypeCollection = exports.BulkActionResourceType = exports.BulkActionResource = exports.BaseTagDefinitionValidator = exports.AvailabilityDomain = exports.AuthenticationPolicy = exports.AuthToken = exports.ApiKey = exports.AddUserToGroupDetails = void 0;\nexports.WorkRequest = exports.UserGroupMembership = exports.UserCapabilities = exports.User = exports.UpdateUserDetails = exports.UpdateUserCapabilitiesDetails = exports.UpdateTagNamespaceDetails = exports.UpdateTagDetails = exports.UpdateTagDefaultDetails = exports.UpdateSwiftPasswordDetails = exports.UpdateStateDetails = exports.UpdateSmtpCredentialDetails = exports.UpdatePolicyDetails = exports.UpdateOAuth2ClientCredentialDetails = exports.UpdateNetworkSourceDetails = exports.UpdateIdpGroupMappingDetails = exports.UpdateIdentityProviderDetails = exports.UpdateGroupDetails = exports.UpdateDynamicGroupDetails = exports.UpdateCustomerSecretKeyDetails = exports.UpdateCompartmentDetails = exports.UpdateAuthenticationPolicyDetails = exports.UpdateAuthTokenDetails = exports.UIPasswordInformation = exports.UIPassword = exports.Tenancy = exports.TaggingWorkRequestSummary = exports.TaggingWorkRequestLogSummary = exports.TaggingWorkRequestErrorSummary = exports.TaggingWorkRequest = exports.TagSummary = exports.TagNamespaceSummary = exports.TagNamespace = exports.TagDefaultSummary = exports.TagDefault = exports.Tag = exports.SwiftPassword = exports.SmtpCredentialSummary = exports.SmtpCredential = exports.ScimClientCredentials = exports.RegionSubscription = exports.Region = exports.Policy = exports.PasswordPolicy = exports.OAuth2ClientCredentialSummary = exports.OAuth2ClientCredential = exports.NetworkSourcesVirtualSourceList = exports.NetworkSourcesSummary = exports.NetworkSources = exports.NetworkPolicy = void 0;\nexports.UpdateSaml2IdentityProviderDetails = exports.Saml2IdentityProvider = exports.EnumTagDefinitionValidator = exports.DefaultTagDefinitionValidator = exports.CreateSaml2IdentityProviderDetails = exports.WorkRequestSummary = exports.WorkRequestResource = exports.WorkRequestLogEntry = exports.WorkRequestError = void 0;\nconst AddUserToGroupDetails = __importStar(require(\"./add-user-to-group-details\"));\nexports.AddUserToGroupDetails = AddUserToGroupDetails.AddUserToGroupDetails;\nconst ApiKey = __importStar(require(\"./api-key\"));\nexports.ApiKey = ApiKey.ApiKey;\nconst AuthToken = __importStar(require(\"./auth-token\"));\nexports.AuthToken = AuthToken.AuthToken;\nconst AuthenticationPolicy = __importStar(require(\"./authentication-policy\"));\nexports.AuthenticationPolicy = AuthenticationPolicy.AuthenticationPolicy;\nconst AvailabilityDomain = __importStar(require(\"./availability-domain\"));\nexports.AvailabilityDomain = AvailabilityDomain.AvailabilityDomain;\nconst BaseTagDefinitionValidator = __importStar(require(\"./base-tag-definition-validator\"));\nexports.BaseTagDefinitionValidator = BaseTagDefinitionValidator.BaseTagDefinitionValidator;\nconst BulkActionResource = __importStar(require(\"./bulk-action-resource\"));\nexports.BulkActionResource = BulkActionResource.BulkActionResource;\nconst BulkActionResourceType = __importStar(require(\"./bulk-action-resource-type\"));\nexports.BulkActionResourceType = BulkActionResourceType.BulkActionResourceType;\nconst BulkActionResourceTypeCollection = __importStar(require(\"./bulk-action-resource-type-collection\"));\nexports.BulkActionResourceTypeCollection = BulkActionResourceTypeCollection.BulkActionResourceTypeCollection;\nconst BulkDeleteResourcesDetails = __importStar(require(\"./bulk-delete-resources-details\"));\nexports.BulkDeleteResourcesDetails = BulkDeleteResourcesDetails.BulkDeleteResourcesDetails;\nconst BulkDeleteTagsDetails = __importStar(require(\"./bulk-delete-tags-details\"));\nexports.BulkDeleteTagsDetails = BulkDeleteTagsDetails.BulkDeleteTagsDetails;\nconst BulkEditOperationDetails = __importStar(require(\"./bulk-edit-operation-details\"));\nexports.BulkEditOperationDetails = BulkEditOperationDetails.BulkEditOperationDetails;\nconst BulkEditResource = __importStar(require(\"./bulk-edit-resource\"));\nexports.BulkEditResource = BulkEditResource.BulkEditResource;\nconst BulkEditTagsDetails = __importStar(require(\"./bulk-edit-tags-details\"));\nexports.BulkEditTagsDetails = BulkEditTagsDetails.BulkEditTagsDetails;\nconst BulkEditTagsResourceType = __importStar(require(\"./bulk-edit-tags-resource-type\"));\nexports.BulkEditTagsResourceType = BulkEditTagsResourceType.BulkEditTagsResourceType;\nconst BulkEditTagsResourceTypeCollection = __importStar(require(\"./bulk-edit-tags-resource-type-collection\"));\nexports.BulkEditTagsResourceTypeCollection = BulkEditTagsResourceTypeCollection.BulkEditTagsResourceTypeCollection;\nconst BulkMoveResourcesDetails = __importStar(require(\"./bulk-move-resources-details\"));\nexports.BulkMoveResourcesDetails = BulkMoveResourcesDetails.BulkMoveResourcesDetails;\nconst ChangeTagNamespaceCompartmentDetail = __importStar(require(\"./change-tag-namespace-compartment-detail\"));\nexports.ChangeTagNamespaceCompartmentDetail = ChangeTagNamespaceCompartmentDetail.ChangeTagNamespaceCompartmentDetail;\nconst Compartment = __importStar(require(\"./compartment\"));\nexports.Compartment = Compartment.Compartment;\nconst CreateApiKeyDetails = __importStar(require(\"./create-api-key-details\"));\nexports.CreateApiKeyDetails = CreateApiKeyDetails.CreateApiKeyDetails;\nconst CreateAuthTokenDetails = __importStar(require(\"./create-auth-token-details\"));\nexports.CreateAuthTokenDetails = CreateAuthTokenDetails.CreateAuthTokenDetails;\nconst CreateCompartmentDetails = __importStar(require(\"./create-compartment-details\"));\nexports.CreateCompartmentDetails = CreateCompartmentDetails.CreateCompartmentDetails;\nconst CreateCustomerSecretKeyDetails = __importStar(require(\"./create-customer-secret-key-details\"));\nexports.CreateCustomerSecretKeyDetails = CreateCustomerSecretKeyDetails.CreateCustomerSecretKeyDetails;\nconst CreateDynamicGroupDetails = __importStar(require(\"./create-dynamic-group-details\"));\nexports.CreateDynamicGroupDetails = CreateDynamicGroupDetails.CreateDynamicGroupDetails;\nconst CreateGroupDetails = __importStar(require(\"./create-group-details\"));\nexports.CreateGroupDetails = CreateGroupDetails.CreateGroupDetails;\nconst CreateIdentityProviderDetails = __importStar(require(\"./create-identity-provider-details\"));\nexports.CreateIdentityProviderDetails = CreateIdentityProviderDetails.CreateIdentityProviderDetails;\nconst CreateIdpGroupMappingDetails = __importStar(require(\"./create-idp-group-mapping-details\"));\nexports.CreateIdpGroupMappingDetails = CreateIdpGroupMappingDetails.CreateIdpGroupMappingDetails;\nconst CreateNetworkSourceDetails = __importStar(require(\"./create-network-source-details\"));\nexports.CreateNetworkSourceDetails = CreateNetworkSourceDetails.CreateNetworkSourceDetails;\nconst CreateOAuth2ClientCredentialDetails = __importStar(require(\"./create-oauth2-client-credential-details\"));\nexports.CreateOAuth2ClientCredentialDetails = CreateOAuth2ClientCredentialDetails.CreateOAuth2ClientCredentialDetails;\nconst CreatePolicyDetails = __importStar(require(\"./create-policy-details\"));\nexports.CreatePolicyDetails = CreatePolicyDetails.CreatePolicyDetails;\nconst CreateRegionSubscriptionDetails = __importStar(require(\"./create-region-subscription-details\"));\nexports.CreateRegionSubscriptionDetails = CreateRegionSubscriptionDetails.CreateRegionSubscriptionDetails;\nconst CreateSmtpCredentialDetails = __importStar(require(\"./create-smtp-credential-details\"));\nexports.CreateSmtpCredentialDetails = CreateSmtpCredentialDetails.CreateSmtpCredentialDetails;\nconst CreateSwiftPasswordDetails = __importStar(require(\"./create-swift-password-details\"));\nexports.CreateSwiftPasswordDetails = CreateSwiftPasswordDetails.CreateSwiftPasswordDetails;\nconst CreateTagDefaultDetails = __importStar(require(\"./create-tag-default-details\"));\nexports.CreateTagDefaultDetails = CreateTagDefaultDetails.CreateTagDefaultDetails;\nconst CreateTagDetails = __importStar(require(\"./create-tag-details\"));\nexports.CreateTagDetails = CreateTagDetails.CreateTagDetails;\nconst CreateTagNamespaceDetails = __importStar(require(\"./create-tag-namespace-details\"));\nexports.CreateTagNamespaceDetails = CreateTagNamespaceDetails.CreateTagNamespaceDetails;\nconst CreateUserDetails = __importStar(require(\"./create-user-details\"));\nexports.CreateUserDetails = CreateUserDetails.CreateUserDetails;\nconst CustomerSecretKey = __importStar(require(\"./customer-secret-key\"));\nexports.CustomerSecretKey = CustomerSecretKey.CustomerSecretKey;\nconst CustomerSecretKeySummary = __importStar(require(\"./customer-secret-key-summary\"));\nexports.CustomerSecretKeySummary = CustomerSecretKeySummary.CustomerSecretKeySummary;\nconst DynamicGroup = __importStar(require(\"./dynamic-group\"));\nexports.DynamicGroup = DynamicGroup.DynamicGroup;\nconst FaultDomain = __importStar(require(\"./fault-domain\"));\nexports.FaultDomain = FaultDomain.FaultDomain;\nconst FullyQualifiedScope = __importStar(require(\"./fully-qualified-scope\"));\nexports.FullyQualifiedScope = FullyQualifiedScope.FullyQualifiedScope;\nconst Group = __importStar(require(\"./group\"));\nexports.Group = Group.Group;\nconst IdentityProvider = __importStar(require(\"./identity-provider\"));\nexports.IdentityProvider = IdentityProvider.IdentityProvider;\nconst IdentityProviderGroupSummary = __importStar(require(\"./identity-provider-group-summary\"));\nexports.IdentityProviderGroupSummary = IdentityProviderGroupSummary.IdentityProviderGroupSummary;\nconst IdpGroupMapping = __importStar(require(\"./idp-group-mapping\"));\nexports.IdpGroupMapping = IdpGroupMapping.IdpGroupMapping;\nconst MfaTotpDevice = __importStar(require(\"./mfa-totp-device\"));\nexports.MfaTotpDevice = MfaTotpDevice.MfaTotpDevice;\nconst MfaTotpDeviceSummary = __importStar(require(\"./mfa-totp-device-summary\"));\nexports.MfaTotpDeviceSummary = MfaTotpDeviceSummary.MfaTotpDeviceSummary;\nconst MfaTotpToken = __importStar(require(\"./mfa-totp-token\"));\nexports.MfaTotpToken = MfaTotpToken.MfaTotpToken;\nconst MoveCompartmentDetails = __importStar(require(\"./move-compartment-details\"));\nexports.MoveCompartmentDetails = MoveCompartmentDetails.MoveCompartmentDetails;\nconst NetworkPolicy = __importStar(require(\"./network-policy\"));\nexports.NetworkPolicy = NetworkPolicy.NetworkPolicy;\nconst NetworkSources = __importStar(require(\"./network-sources\"));\nexports.NetworkSources = NetworkSources.NetworkSources;\nconst NetworkSourcesSummary = __importStar(require(\"./network-sources-summary\"));\nexports.NetworkSourcesSummary = NetworkSourcesSummary.NetworkSourcesSummary;\nconst NetworkSourcesVirtualSourceList = __importStar(require(\"./network-sources_virtual-source-list\"));\nexports.NetworkSourcesVirtualSourceList = NetworkSourcesVirtualSourceList.NetworkSourcesVirtualSourceList;\nconst OAuth2ClientCredential = __importStar(require(\"./o-auth2-client-credential\"));\nexports.OAuth2ClientCredential = OAuth2ClientCredential.OAuth2ClientCredential;\nconst OAuth2ClientCredentialSummary = __importStar(require(\"./o-auth2-client-credential-summary\"));\nexports.OAuth2ClientCredentialSummary = OAuth2ClientCredentialSummary.OAuth2ClientCredentialSummary;\nconst PasswordPolicy = __importStar(require(\"./password-policy\"));\nexports.PasswordPolicy = PasswordPolicy.PasswordPolicy;\nconst Policy = __importStar(require(\"./policy\"));\nexports.Policy = Policy.Policy;\nconst Region = __importStar(require(\"./region\"));\nexports.Region = Region.Region;\nconst RegionSubscription = __importStar(require(\"./region-subscription\"));\nexports.RegionSubscription = RegionSubscription.RegionSubscription;\nconst ScimClientCredentials = __importStar(require(\"./scim-client-credentials\"));\nexports.ScimClientCredentials = ScimClientCredentials.ScimClientCredentials;\nconst SmtpCredential = __importStar(require(\"./smtp-credential\"));\nexports.SmtpCredential = SmtpCredential.SmtpCredential;\nconst SmtpCredentialSummary = __importStar(require(\"./smtp-credential-summary\"));\nexports.SmtpCredentialSummary = SmtpCredentialSummary.SmtpCredentialSummary;\nconst SwiftPassword = __importStar(require(\"./swift-password\"));\nexports.SwiftPassword = SwiftPassword.SwiftPassword;\nconst Tag = __importStar(require(\"./tag\"));\nexports.Tag = Tag.Tag;\nconst TagDefault = __importStar(require(\"./tag-default\"));\nexports.TagDefault = TagDefault.TagDefault;\nconst TagDefaultSummary = __importStar(require(\"./tag-default-summary\"));\nexports.TagDefaultSummary = TagDefaultSummary.TagDefaultSummary;\nconst TagNamespace = __importStar(require(\"./tag-namespace\"));\nexports.TagNamespace = TagNamespace.TagNamespace;\nconst TagNamespaceSummary = __importStar(require(\"./tag-namespace-summary\"));\nexports.TagNamespaceSummary = TagNamespaceSummary.TagNamespaceSummary;\nconst TagSummary = __importStar(require(\"./tag-summary\"));\nexports.TagSummary = TagSummary.TagSummary;\nconst TaggingWorkRequest = __importStar(require(\"./tagging-work-request\"));\nexports.TaggingWorkRequest = TaggingWorkRequest.TaggingWorkRequest;\nconst TaggingWorkRequestErrorSummary = __importStar(require(\"./tagging-work-request-error-summary\"));\nexports.TaggingWorkRequestErrorSummary = TaggingWorkRequestErrorSummary.TaggingWorkRequestErrorSummary;\nconst TaggingWorkRequestLogSummary = __importStar(require(\"./tagging-work-request-log-summary\"));\nexports.TaggingWorkRequestLogSummary = TaggingWorkRequestLogSummary.TaggingWorkRequestLogSummary;\nconst TaggingWorkRequestSummary = __importStar(require(\"./tagging-work-request-summary\"));\nexports.TaggingWorkRequestSummary = TaggingWorkRequestSummary.TaggingWorkRequestSummary;\nconst Tenancy = __importStar(require(\"./tenancy\"));\nexports.Tenancy = Tenancy.Tenancy;\nconst UIPassword = __importStar(require(\"./u-ipassword\"));\nexports.UIPassword = UIPassword.UIPassword;\nconst UIPasswordInformation = __importStar(require(\"./u-ipassword-information\"));\nexports.UIPasswordInformation = UIPasswordInformation.UIPasswordInformation;\nconst UpdateAuthTokenDetails = __importStar(require(\"./update-auth-token-details\"));\nexports.UpdateAuthTokenDetails = UpdateAuthTokenDetails.UpdateAuthTokenDetails;\nconst UpdateAuthenticationPolicyDetails = __importStar(require(\"./update-authentication-policy-details\"));\nexports.UpdateAuthenticationPolicyDetails = UpdateAuthenticationPolicyDetails.UpdateAuthenticationPolicyDetails;\nconst UpdateCompartmentDetails = __importStar(require(\"./update-compartment-details\"));\nexports.UpdateCompartmentDetails = UpdateCompartmentDetails.UpdateCompartmentDetails;\nconst UpdateCustomerSecretKeyDetails = __importStar(require(\"./update-customer-secret-key-details\"));\nexports.UpdateCustomerSecretKeyDetails = UpdateCustomerSecretKeyDetails.UpdateCustomerSecretKeyDetails;\nconst UpdateDynamicGroupDetails = __importStar(require(\"./update-dynamic-group-details\"));\nexports.UpdateDynamicGroupDetails = UpdateDynamicGroupDetails.UpdateDynamicGroupDetails;\nconst UpdateGroupDetails = __importStar(require(\"./update-group-details\"));\nexports.UpdateGroupDetails = UpdateGroupDetails.UpdateGroupDetails;\nconst UpdateIdentityProviderDetails = __importStar(require(\"./update-identity-provider-details\"));\nexports.UpdateIdentityProviderDetails = UpdateIdentityProviderDetails.UpdateIdentityProviderDetails;\nconst UpdateIdpGroupMappingDetails = __importStar(require(\"./update-idp-group-mapping-details\"));\nexports.UpdateIdpGroupMappingDetails = UpdateIdpGroupMappingDetails.UpdateIdpGroupMappingDetails;\nconst UpdateNetworkSourceDetails = __importStar(require(\"./update-network-source-details\"));\nexports.UpdateNetworkSourceDetails = UpdateNetworkSourceDetails.UpdateNetworkSourceDetails;\nconst UpdateOAuth2ClientCredentialDetails = __importStar(require(\"./update-oauth2-client-credential-details\"));\nexports.UpdateOAuth2ClientCredentialDetails = UpdateOAuth2ClientCredentialDetails.UpdateOAuth2ClientCredentialDetails;\nconst UpdatePolicyDetails = __importStar(require(\"./update-policy-details\"));\nexports.UpdatePolicyDetails = UpdatePolicyDetails.UpdatePolicyDetails;\nconst UpdateSmtpCredentialDetails = __importStar(require(\"./update-smtp-credential-details\"));\nexports.UpdateSmtpCredentialDetails = UpdateSmtpCredentialDetails.UpdateSmtpCredentialDetails;\nconst UpdateStateDetails = __importStar(require(\"./update-state-details\"));\nexports.UpdateStateDetails = UpdateStateDetails.UpdateStateDetails;\nconst UpdateSwiftPasswordDetails = __importStar(require(\"./update-swift-password-details\"));\nexports.UpdateSwiftPasswordDetails = UpdateSwiftPasswordDetails.UpdateSwiftPasswordDetails;\nconst UpdateTagDefaultDetails = __importStar(require(\"./update-tag-default-details\"));\nexports.UpdateTagDefaultDetails = UpdateTagDefaultDetails.UpdateTagDefaultDetails;\nconst UpdateTagDetails = __importStar(require(\"./update-tag-details\"));\nexports.UpdateTagDetails = UpdateTagDetails.UpdateTagDetails;\nconst UpdateTagNamespaceDetails = __importStar(require(\"./update-tag-namespace-details\"));\nexports.UpdateTagNamespaceDetails = UpdateTagNamespaceDetails.UpdateTagNamespaceDetails;\nconst UpdateUserCapabilitiesDetails = __importStar(require(\"./update-user-capabilities-details\"));\nexports.UpdateUserCapabilitiesDetails = UpdateUserCapabilitiesDetails.UpdateUserCapabilitiesDetails;\nconst UpdateUserDetails = __importStar(require(\"./update-user-details\"));\nexports.UpdateUserDetails = UpdateUserDetails.UpdateUserDetails;\nconst User = __importStar(require(\"./user\"));\nexports.User = User.User;\nconst UserCapabilities = __importStar(require(\"./user-capabilities\"));\nexports.UserCapabilities = UserCapabilities.UserCapabilities;\nconst UserGroupMembership = __importStar(require(\"./user-group-membership\"));\nexports.UserGroupMembership = UserGroupMembership.UserGroupMembership;\nconst WorkRequest = __importStar(require(\"./work-request\"));\nexports.WorkRequest = WorkRequest.WorkRequest;\nconst WorkRequestError = __importStar(require(\"./work-request-error\"));\nexports.WorkRequestError = WorkRequestError.WorkRequestError;\nconst WorkRequestLogEntry = __importStar(require(\"./work-request-log-entry\"));\nexports.WorkRequestLogEntry = WorkRequestLogEntry.WorkRequestLogEntry;\nconst WorkRequestResource = __importStar(require(\"./work-request-resource\"));\nexports.WorkRequestResource = WorkRequestResource.WorkRequestResource;\nconst WorkRequestSummary = __importStar(require(\"./work-request-summary\"));\nexports.WorkRequestSummary = WorkRequestSummary.WorkRequestSummary;\nconst CreateSaml2IdentityProviderDetails = __importStar(require(\"./create-saml2-identity-provider-details\"));\nexports.CreateSaml2IdentityProviderDetails = CreateSaml2IdentityProviderDetails.CreateSaml2IdentityProviderDetails;\nconst DefaultTagDefinitionValidator = __importStar(require(\"./default-tag-definition-validator\"));\nexports.DefaultTagDefinitionValidator = DefaultTagDefinitionValidator.DefaultTagDefinitionValidator;\nconst EnumTagDefinitionValidator = __importStar(require(\"./enum-tag-definition-validator\"));\nexports.EnumTagDefinitionValidator = EnumTagDefinitionValidator.EnumTagDefinitionValidator;\nconst Saml2IdentityProvider = __importStar(require(\"./saml2-identity-provider\"));\nexports.Saml2IdentityProvider = Saml2IdentityProvider.Saml2IdentityProvider;\nconst UpdateSaml2IdentityProviderDetails = __importStar(require(\"./update-saml2-identity-provider-details\"));\nexports.UpdateSaml2IdentityProviderDetails = UpdateSaml2IdentityProviderDetails.UpdateSaml2IdentityProviderDetails;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MfaTotpDeviceSummary = void 0;\nvar MfaTotpDeviceSummary;\n(function (MfaTotpDeviceSummary) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = MfaTotpDeviceSummary.LifecycleState || (MfaTotpDeviceSummary.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpDeviceSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpDeviceSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(MfaTotpDeviceSummary = exports.MfaTotpDeviceSummary || (exports.MfaTotpDeviceSummary = {}));\n//# sourceMappingURL=mfa-totp-device-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MfaTotpDevice = void 0;\nvar MfaTotpDevice;\n(function (MfaTotpDevice) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = MfaTotpDevice.LifecycleState || (MfaTotpDevice.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpDevice.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpDevice.getDeserializedJsonObj = getDeserializedJsonObj;\n})(MfaTotpDevice = exports.MfaTotpDevice || (exports.MfaTotpDevice = {}));\n//# sourceMappingURL=mfa-totp-device.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MfaTotpToken = void 0;\nvar MfaTotpToken;\n(function (MfaTotpToken) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpToken.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MfaTotpToken.getDeserializedJsonObj = getDeserializedJsonObj;\n})(MfaTotpToken = exports.MfaTotpToken || (exports.MfaTotpToken = {}));\n//# sourceMappingURL=mfa-totp-token.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MoveCompartmentDetails = void 0;\nvar MoveCompartmentDetails;\n(function (MoveCompartmentDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MoveCompartmentDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    MoveCompartmentDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(MoveCompartmentDetails = exports.MoveCompartmentDetails || (exports.MoveCompartmentDetails = {}));\n//# sourceMappingURL=move-compartment-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkPolicy = void 0;\nvar NetworkPolicy;\n(function (NetworkPolicy) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    NetworkPolicy.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    NetworkPolicy.getDeserializedJsonObj = getDeserializedJsonObj;\n})(NetworkPolicy = exports.NetworkPolicy || (exports.NetworkPolicy = {}));\n//# sourceMappingURL=network-policy.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkSourcesSummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar NetworkSourcesSummary;\n(function (NetworkSourcesSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    NetworkSourcesSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    NetworkSourcesSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(NetworkSourcesSummary = exports.NetworkSourcesSummary || (exports.NetworkSourcesSummary = {}));\n//# sourceMappingURL=network-sources-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkSources = void 0;\nconst model = __importStar(require(\"../model\"));\nvar NetworkSources;\n(function (NetworkSources) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = NetworkSources.LifecycleState || (NetworkSources.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    NetworkSources.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    NetworkSources.getDeserializedJsonObj = getDeserializedJsonObj;\n})(NetworkSources = exports.NetworkSources || (exports.NetworkSources = {}));\n//# sourceMappingURL=network-sources.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NetworkSourcesVirtualSourceList = void 0;\nvar NetworkSourcesVirtualSourceList;\n(function (NetworkSourcesVirtualSourceList) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    NetworkSourcesVirtualSourceList.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    NetworkSourcesVirtualSourceList.getDeserializedJsonObj = getDeserializedJsonObj;\n})(NetworkSourcesVirtualSourceList = exports.NetworkSourcesVirtualSourceList || (exports.NetworkSourcesVirtualSourceList = {}));\n//# sourceMappingURL=network-sources_virtual-source-list.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2ClientCredentialSummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar OAuth2ClientCredentialSummary;\n(function (OAuth2ClientCredentialSummary) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = OAuth2ClientCredentialSummary.LifecycleState || (OAuth2ClientCredentialSummary.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    OAuth2ClientCredentialSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    OAuth2ClientCredentialSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(OAuth2ClientCredentialSummary = exports.OAuth2ClientCredentialSummary || (exports.OAuth2ClientCredentialSummary = {}));\n//# sourceMappingURL=o-auth2-client-credential-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2ClientCredential = void 0;\nconst model = __importStar(require(\"../model\"));\nvar OAuth2ClientCredential;\n(function (OAuth2ClientCredential) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = OAuth2ClientCredential.LifecycleState || (OAuth2ClientCredential.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    OAuth2ClientCredential.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    OAuth2ClientCredential.getDeserializedJsonObj = getDeserializedJsonObj;\n})(OAuth2ClientCredential = exports.OAuth2ClientCredential || (exports.OAuth2ClientCredential = {}));\n//# sourceMappingURL=o-auth2-client-credential.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PasswordPolicy = void 0;\nvar PasswordPolicy;\n(function (PasswordPolicy) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    PasswordPolicy.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    PasswordPolicy.getDeserializedJsonObj = getDeserializedJsonObj;\n})(PasswordPolicy = exports.PasswordPolicy || (exports.PasswordPolicy = {}));\n//# sourceMappingURL=password-policy.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Policy = void 0;\nvar Policy;\n(function (Policy) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = Policy.LifecycleState || (Policy.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Policy.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Policy.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Policy = exports.Policy || (exports.Policy = {}));\n//# sourceMappingURL=policy.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegionSubscription = void 0;\nvar RegionSubscription;\n(function (RegionSubscription) {\n    let Status;\n    (function (Status) {\n        Status[\"Ready\"] = \"READY\";\n        Status[\"InProgress\"] = \"IN_PROGRESS\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Status[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Status = RegionSubscription.Status || (RegionSubscription.Status = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RegionSubscription.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    RegionSubscription.getDeserializedJsonObj = getDeserializedJsonObj;\n})(RegionSubscription = exports.RegionSubscription || (exports.RegionSubscription = {}));\n//# sourceMappingURL=region-subscription.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Region = void 0;\nvar Region;\n(function (Region) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Region.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Region.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Region = exports.Region || (exports.Region = {}));\n//# sourceMappingURL=region.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Saml2IdentityProvider = void 0;\nconst model = __importStar(require(\"../model\"));\nvar Saml2IdentityProvider;\n(function (Saml2IdentityProvider) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.IdentityProvider.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    Saml2IdentityProvider.getJsonObj = getJsonObj;\n    Saml2IdentityProvider.protocol = \"SAML2\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.IdentityProvider.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    Saml2IdentityProvider.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Saml2IdentityProvider = exports.Saml2IdentityProvider || (exports.Saml2IdentityProvider = {}));\n//# sourceMappingURL=saml2-identity-provider.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScimClientCredentials = void 0;\nvar ScimClientCredentials;\n(function (ScimClientCredentials) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ScimClientCredentials.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    ScimClientCredentials.getDeserializedJsonObj = getDeserializedJsonObj;\n})(ScimClientCredentials = exports.ScimClientCredentials || (exports.ScimClientCredentials = {}));\n//# sourceMappingURL=scim-client-credentials.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmtpCredentialSummary = void 0;\nvar SmtpCredentialSummary;\n(function (SmtpCredentialSummary) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = SmtpCredentialSummary.LifecycleState || (SmtpCredentialSummary.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SmtpCredentialSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SmtpCredentialSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(SmtpCredentialSummary = exports.SmtpCredentialSummary || (exports.SmtpCredentialSummary = {}));\n//# sourceMappingURL=smtp-credential-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SmtpCredential = void 0;\nvar SmtpCredential;\n(function (SmtpCredential) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = SmtpCredential.LifecycleState || (SmtpCredential.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SmtpCredential.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SmtpCredential.getDeserializedJsonObj = getDeserializedJsonObj;\n})(SmtpCredential = exports.SmtpCredential || (exports.SmtpCredential = {}));\n//# sourceMappingURL=smtp-credential.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SwiftPassword = void 0;\nvar SwiftPassword;\n(function (SwiftPassword) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = SwiftPassword.LifecycleState || (SwiftPassword.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SwiftPassword.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    SwiftPassword.getDeserializedJsonObj = getDeserializedJsonObj;\n})(SwiftPassword = exports.SwiftPassword || (exports.SwiftPassword = {}));\n//# sourceMappingURL=swift-password.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagDefaultSummary = void 0;\nvar TagDefaultSummary;\n(function (TagDefaultSummary) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = TagDefaultSummary.LifecycleState || (TagDefaultSummary.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagDefaultSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagDefaultSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TagDefaultSummary = exports.TagDefaultSummary || (exports.TagDefaultSummary = {}));\n//# sourceMappingURL=tag-default-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagDefault = void 0;\nvar TagDefault;\n(function (TagDefault) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = TagDefault.LifecycleState || (TagDefault.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagDefault.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagDefault.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TagDefault = exports.TagDefault || (exports.TagDefault = {}));\n//# sourceMappingURL=tag-default.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagNamespaceSummary = void 0;\nvar TagNamespaceSummary;\n(function (TagNamespaceSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagNamespaceSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagNamespaceSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TagNamespaceSummary = exports.TagNamespaceSummary || (exports.TagNamespaceSummary = {}));\n//# sourceMappingURL=tag-namespace-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagNamespace = void 0;\nvar TagNamespace;\n(function (TagNamespace) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = TagNamespace.LifecycleState || (TagNamespace.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagNamespace.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagNamespace.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TagNamespace = exports.TagNamespace || (exports.TagNamespace = {}));\n//# sourceMappingURL=tag-namespace.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagSummary = void 0;\nvar TagSummary;\n(function (TagSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TagSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TagSummary = exports.TagSummary || (exports.TagSummary = {}));\n//# sourceMappingURL=tag-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = void 0;\nconst model = __importStar(require(\"../model\"));\nvar Tag;\n(function (Tag) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = Tag.LifecycleState || (Tag.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    Tag.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getDeserializedJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    Tag.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tag.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaggingWorkRequestErrorSummary = void 0;\nvar TaggingWorkRequestErrorSummary;\n(function (TaggingWorkRequestErrorSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TaggingWorkRequestErrorSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TaggingWorkRequestErrorSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TaggingWorkRequestErrorSummary = exports.TaggingWorkRequestErrorSummary || (exports.TaggingWorkRequestErrorSummary = {}));\n//# sourceMappingURL=tagging-work-request-error-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaggingWorkRequestLogSummary = void 0;\nvar TaggingWorkRequestLogSummary;\n(function (TaggingWorkRequestLogSummary) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TaggingWorkRequestLogSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    TaggingWorkRequestLogSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TaggingWorkRequestLogSummary = exports.TaggingWorkRequestLogSummary || (exports.TaggingWorkRequestLogSummary = {}));\n//# sourceMappingURL=tagging-work-request-log-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaggingWorkRequestSummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar TaggingWorkRequestSummary;\n(function (TaggingWorkRequestSummary) {\n    let OperationType;\n    (function (OperationType) {\n        OperationType[\"DeleteTagDefinition\"] = \"DELETE_TAG_DEFINITION\";\n        OperationType[\"DeleteNonEmptyTagNamespace\"] = \"DELETE_NON_EMPTY_TAG_NAMESPACE\";\n        OperationType[\"BulkDeleteTagDefinition\"] = \"BULK_DELETE_TAG_DEFINITION\";\n        OperationType[\"BulkEditOfTags\"] = \"BULK_EDIT_OF_TAGS\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        OperationType[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(OperationType = TaggingWorkRequestSummary.OperationType || (TaggingWorkRequestSummary.OperationType = {}));\n    let Status;\n    (function (Status) {\n        Status[\"Accepted\"] = \"ACCEPTED\";\n        Status[\"InProgress\"] = \"IN_PROGRESS\";\n        Status[\"Failed\"] = \"FAILED\";\n        Status[\"Succeeded\"] = \"SUCCEEDED\";\n        Status[\"PartiallySucceeded\"] = \"PARTIALLY_SUCCEEDED\";\n        Status[\"Canceling\"] = \"CANCELING\";\n        Status[\"Canceled\"] = \"CANCELED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Status[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Status = TaggingWorkRequestSummary.Status || (TaggingWorkRequestSummary.Status = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    TaggingWorkRequestSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    TaggingWorkRequestSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TaggingWorkRequestSummary = exports.TaggingWorkRequestSummary || (exports.TaggingWorkRequestSummary = {}));\n//# sourceMappingURL=tagging-work-request-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaggingWorkRequest = void 0;\nconst model = __importStar(require(\"../model\"));\nvar TaggingWorkRequest;\n(function (TaggingWorkRequest) {\n    let OperationType;\n    (function (OperationType) {\n        OperationType[\"DeleteTagDefinition\"] = \"DELETE_TAG_DEFINITION\";\n        OperationType[\"DeleteNonEmptyTagNamespace\"] = \"DELETE_NON_EMPTY_TAG_NAMESPACE\";\n        OperationType[\"BulkDeleteTagDefinition\"] = \"BULK_DELETE_TAG_DEFINITION\";\n        OperationType[\"BulkEditOfTags\"] = \"BULK_EDIT_OF_TAGS\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        OperationType[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(OperationType = TaggingWorkRequest.OperationType || (TaggingWorkRequest.OperationType = {}));\n    let Status;\n    (function (Status) {\n        Status[\"Accepted\"] = \"ACCEPTED\";\n        Status[\"InProgress\"] = \"IN_PROGRESS\";\n        Status[\"Failed\"] = \"FAILED\";\n        Status[\"Succeeded\"] = \"SUCCEEDED\";\n        Status[\"PartiallySucceeded\"] = \"PARTIALLY_SUCCEEDED\";\n        Status[\"Canceling\"] = \"CANCELING\";\n        Status[\"Canceled\"] = \"CANCELED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Status[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Status = TaggingWorkRequest.Status || (TaggingWorkRequest.Status = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    TaggingWorkRequest.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    TaggingWorkRequest.getDeserializedJsonObj = getDeserializedJsonObj;\n})(TaggingWorkRequest = exports.TaggingWorkRequest || (exports.TaggingWorkRequest = {}));\n//# sourceMappingURL=tagging-work-request.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tenancy = void 0;\nvar Tenancy;\n(function (Tenancy) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Tenancy.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    Tenancy.getDeserializedJsonObj = getDeserializedJsonObj;\n})(Tenancy = exports.Tenancy || (exports.Tenancy = {}));\n//# sourceMappingURL=tenancy.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UIPasswordInformation = void 0;\nvar UIPasswordInformation;\n(function (UIPasswordInformation) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = UIPasswordInformation.LifecycleState || (UIPasswordInformation.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UIPasswordInformation.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UIPasswordInformation.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UIPasswordInformation = exports.UIPasswordInformation || (exports.UIPasswordInformation = {}));\n//# sourceMappingURL=u-ipassword-information.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UIPassword = void 0;\nvar UIPassword;\n(function (UIPassword) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = UIPassword.LifecycleState || (UIPassword.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UIPassword.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UIPassword.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UIPassword = exports.UIPassword || (exports.UIPassword = {}));\n//# sourceMappingURL=u-ipassword.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateAuthTokenDetails = void 0;\nvar UpdateAuthTokenDetails;\n(function (UpdateAuthTokenDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateAuthTokenDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateAuthTokenDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateAuthTokenDetails = exports.UpdateAuthTokenDetails || (exports.UpdateAuthTokenDetails = {}));\n//# sourceMappingURL=update-auth-token-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateAuthenticationPolicyDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateAuthenticationPolicyDetails;\n(function (UpdateAuthenticationPolicyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"passwordPolicy\": obj.passwordPolicy\n                ? model.PasswordPolicy.getJsonObj(obj.passwordPolicy)\n                : undefined,\n            \"networkPolicy\": obj.networkPolicy\n                ? model.NetworkPolicy.getJsonObj(obj.networkPolicy)\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateAuthenticationPolicyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"passwordPolicy\": obj.passwordPolicy\n                ? model.PasswordPolicy.getDeserializedJsonObj(obj.passwordPolicy)\n                : undefined,\n            \"networkPolicy\": obj.networkPolicy\n                ? model.NetworkPolicy.getDeserializedJsonObj(obj.networkPolicy)\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateAuthenticationPolicyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateAuthenticationPolicyDetails = exports.UpdateAuthenticationPolicyDetails || (exports.UpdateAuthenticationPolicyDetails = {}));\n//# sourceMappingURL=update-authentication-policy-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCompartmentDetails = void 0;\nvar UpdateCompartmentDetails;\n(function (UpdateCompartmentDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateCompartmentDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateCompartmentDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateCompartmentDetails = exports.UpdateCompartmentDetails || (exports.UpdateCompartmentDetails = {}));\n//# sourceMappingURL=update-compartment-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCustomerSecretKeyDetails = void 0;\nvar UpdateCustomerSecretKeyDetails;\n(function (UpdateCustomerSecretKeyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateCustomerSecretKeyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateCustomerSecretKeyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateCustomerSecretKeyDetails = exports.UpdateCustomerSecretKeyDetails || (exports.UpdateCustomerSecretKeyDetails = {}));\n//# sourceMappingURL=update-customer-secret-key-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateDynamicGroupDetails = void 0;\nvar UpdateDynamicGroupDetails;\n(function (UpdateDynamicGroupDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateDynamicGroupDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateDynamicGroupDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateDynamicGroupDetails = exports.UpdateDynamicGroupDetails || (exports.UpdateDynamicGroupDetails = {}));\n//# sourceMappingURL=update-dynamic-group-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateGroupDetails = void 0;\nvar UpdateGroupDetails;\n(function (UpdateGroupDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGroupDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateGroupDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateGroupDetails = exports.UpdateGroupDetails || (exports.UpdateGroupDetails = {}));\n//# sourceMappingURL=update-group-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateIdentityProviderDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateIdentityProviderDetails;\n(function (UpdateIdentityProviderDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.UpdateSaml2IdentityProviderDetails.getJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    UpdateIdentityProviderDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        if (\"protocol\" in obj && obj.protocol) {\n            switch (obj.protocol) {\n                case \"SAML2\":\n                    return model.UpdateSaml2IdentityProviderDetails.getDeserializedJsonObj(jsonObj, true);\n                default:\n                    throw Error(\"Unknown value for: \" + obj.protocol);\n            }\n        }\n        return jsonObj;\n    }\n    UpdateIdentityProviderDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateIdentityProviderDetails = exports.UpdateIdentityProviderDetails || (exports.UpdateIdentityProviderDetails = {}));\n//# sourceMappingURL=update-identity-provider-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateIdpGroupMappingDetails = void 0;\nvar UpdateIdpGroupMappingDetails;\n(function (UpdateIdpGroupMappingDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateIdpGroupMappingDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateIdpGroupMappingDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateIdpGroupMappingDetails = exports.UpdateIdpGroupMappingDetails || (exports.UpdateIdpGroupMappingDetails = {}));\n//# sourceMappingURL=update-idp-group-mapping-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateNetworkSourceDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateNetworkSourceDetails;\n(function (UpdateNetworkSourceDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateNetworkSourceDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"virtualSourceList\": obj.virtualSourceList\n                ? obj.virtualSourceList.map(item => {\n                    return model.NetworkSourcesVirtualSourceList.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateNetworkSourceDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateNetworkSourceDetails = exports.UpdateNetworkSourceDetails || (exports.UpdateNetworkSourceDetails = {}));\n//# sourceMappingURL=update-network-source-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateOAuth2ClientCredentialDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateOAuth2ClientCredentialDetails;\n(function (UpdateOAuth2ClientCredentialDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateOAuth2ClientCredentialDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"scopes\": obj.scopes\n                ? obj.scopes.map(item => {\n                    return model.FullyQualifiedScope.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateOAuth2ClientCredentialDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateOAuth2ClientCredentialDetails = exports.UpdateOAuth2ClientCredentialDetails || (exports.UpdateOAuth2ClientCredentialDetails = {}));\n//# sourceMappingURL=update-oauth2-client-credential-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdatePolicyDetails = void 0;\nvar UpdatePolicyDetails;\n(function (UpdatePolicyDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdatePolicyDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdatePolicyDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdatePolicyDetails = exports.UpdatePolicyDetails || (exports.UpdatePolicyDetails = {}));\n//# sourceMappingURL=update-policy-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateSaml2IdentityProviderDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateSaml2IdentityProviderDetails;\n(function (UpdateSaml2IdentityProviderDetails) {\n    function getJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.UpdateIdentityProviderDetails.getJsonObj(obj))), {});\n        return jsonObj;\n    }\n    UpdateSaml2IdentityProviderDetails.getJsonObj = getJsonObj;\n    UpdateSaml2IdentityProviderDetails.protocol = \"SAML2\";\n    function getDeserializedJsonObj(obj, isParentJsonObj) {\n        const jsonObj = Object.assign(Object.assign({}, (isParentJsonObj\n            ? obj\n            : model.UpdateIdentityProviderDetails.getDeserializedJsonObj(obj))), {});\n        return jsonObj;\n    }\n    UpdateSaml2IdentityProviderDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateSaml2IdentityProviderDetails = exports.UpdateSaml2IdentityProviderDetails || (exports.UpdateSaml2IdentityProviderDetails = {}));\n//# sourceMappingURL=update-saml2-identity-provider-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateSmtpCredentialDetails = void 0;\nvar UpdateSmtpCredentialDetails;\n(function (UpdateSmtpCredentialDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateSmtpCredentialDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateSmtpCredentialDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateSmtpCredentialDetails = exports.UpdateSmtpCredentialDetails || (exports.UpdateSmtpCredentialDetails = {}));\n//# sourceMappingURL=update-smtp-credential-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStateDetails = void 0;\nvar UpdateStateDetails;\n(function (UpdateStateDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateStateDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateStateDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateStateDetails = exports.UpdateStateDetails || (exports.UpdateStateDetails = {}));\n//# sourceMappingURL=update-state-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateSwiftPasswordDetails = void 0;\nvar UpdateSwiftPasswordDetails;\n(function (UpdateSwiftPasswordDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateSwiftPasswordDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateSwiftPasswordDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateSwiftPasswordDetails = exports.UpdateSwiftPasswordDetails || (exports.UpdateSwiftPasswordDetails = {}));\n//# sourceMappingURL=update-swift-password-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateTagDefaultDetails = void 0;\nvar UpdateTagDefaultDetails;\n(function (UpdateTagDefaultDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateTagDefaultDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateTagDefaultDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateTagDefaultDetails = exports.UpdateTagDefaultDetails || (exports.UpdateTagDefaultDetails = {}));\n//# sourceMappingURL=update-tag-default-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateTagDetails = void 0;\nconst model = __importStar(require(\"../model\"));\nvar UpdateTagDetails;\n(function (UpdateTagDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateTagDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"validator\": obj.validator\n                ? model.BaseTagDefinitionValidator.getDeserializedJsonObj(obj.validator)\n                : undefined\n        });\n        return jsonObj;\n    }\n    UpdateTagDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateTagDetails = exports.UpdateTagDetails || (exports.UpdateTagDetails = {}));\n//# sourceMappingURL=update-tag-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateTagNamespaceDetails = void 0;\nvar UpdateTagNamespaceDetails;\n(function (UpdateTagNamespaceDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateTagNamespaceDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateTagNamespaceDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateTagNamespaceDetails = exports.UpdateTagNamespaceDetails || (exports.UpdateTagNamespaceDetails = {}));\n//# sourceMappingURL=update-tag-namespace-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateUserCapabilitiesDetails = void 0;\nvar UpdateUserCapabilitiesDetails;\n(function (UpdateUserCapabilitiesDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateUserCapabilitiesDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateUserCapabilitiesDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateUserCapabilitiesDetails = exports.UpdateUserCapabilitiesDetails || (exports.UpdateUserCapabilitiesDetails = {}));\n//# sourceMappingURL=update-user-capabilities-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateUserDetails = void 0;\nvar UpdateUserDetails;\n(function (UpdateUserDetails) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateUserDetails.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UpdateUserDetails.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UpdateUserDetails = exports.UpdateUserDetails || (exports.UpdateUserDetails = {}));\n//# sourceMappingURL=update-user-details.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserCapabilities = void 0;\nvar UserCapabilities;\n(function (UserCapabilities) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UserCapabilities.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UserCapabilities.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UserCapabilities = exports.UserCapabilities || (exports.UserCapabilities = {}));\n//# sourceMappingURL=user-capabilities.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserGroupMembership = void 0;\nvar UserGroupMembership;\n(function (UserGroupMembership) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = UserGroupMembership.LifecycleState || (UserGroupMembership.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UserGroupMembership.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    UserGroupMembership.getDeserializedJsonObj = getDeserializedJsonObj;\n})(UserGroupMembership = exports.UserGroupMembership || (exports.UserGroupMembership = {}));\n//# sourceMappingURL=user-group-membership.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nconst model = __importStar(require(\"../model\"));\nvar User;\n(function (User) {\n    let LifecycleState;\n    (function (LifecycleState) {\n        LifecycleState[\"Creating\"] = \"CREATING\";\n        LifecycleState[\"Active\"] = \"ACTIVE\";\n        LifecycleState[\"Inactive\"] = \"INACTIVE\";\n        LifecycleState[\"Deleting\"] = \"DELETING\";\n        LifecycleState[\"Deleted\"] = \"DELETED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        LifecycleState[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(LifecycleState = User.LifecycleState || (User.LifecycleState = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"capabilities\": obj.capabilities\n                ? model.UserCapabilities.getJsonObj(obj.capabilities)\n                : undefined\n        });\n        return jsonObj;\n    }\n    User.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"capabilities\": obj.capabilities\n                ? model.UserCapabilities.getDeserializedJsonObj(obj.capabilities)\n                : undefined\n        });\n        return jsonObj;\n    }\n    User.getDeserializedJsonObj = getDeserializedJsonObj;\n})(User = exports.User || (exports.User = {}));\n//# sourceMappingURL=user.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkRequestError = void 0;\nvar WorkRequestError;\n(function (WorkRequestError) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestError.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestError.getDeserializedJsonObj = getDeserializedJsonObj;\n})(WorkRequestError = exports.WorkRequestError || (exports.WorkRequestError = {}));\n//# sourceMappingURL=work-request-error.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkRequestLogEntry = void 0;\nvar WorkRequestLogEntry;\n(function (WorkRequestLogEntry) {\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestLogEntry.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestLogEntry.getDeserializedJsonObj = getDeserializedJsonObj;\n})(WorkRequestLogEntry = exports.WorkRequestLogEntry || (exports.WorkRequestLogEntry = {}));\n//# sourceMappingURL=work-request-log-entry.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkRequestResource = void 0;\nvar WorkRequestResource;\n(function (WorkRequestResource) {\n    let ActionType;\n    (function (ActionType) {\n        ActionType[\"Created\"] = \"CREATED\";\n        ActionType[\"Updated\"] = \"UPDATED\";\n        ActionType[\"Deleted\"] = \"DELETED\";\n        ActionType[\"Related\"] = \"RELATED\";\n        ActionType[\"InProgress\"] = \"IN_PROGRESS\";\n        ActionType[\"Failed\"] = \"FAILED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        ActionType[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(ActionType = WorkRequestResource.ActionType || (WorkRequestResource.ActionType = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestResource.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {});\n        return jsonObj;\n    }\n    WorkRequestResource.getDeserializedJsonObj = getDeserializedJsonObj;\n})(WorkRequestResource = exports.WorkRequestResource || (exports.WorkRequestResource = {}));\n//# sourceMappingURL=work-request-resource.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkRequestSummary = void 0;\nconst model = __importStar(require(\"../model\"));\nvar WorkRequestSummary;\n(function (WorkRequestSummary) {\n    let OperationType;\n    (function (OperationType) {\n        OperationType[\"DeleteCompartment\"] = \"DELETE_COMPARTMENT\";\n        OperationType[\"DeleteTagDefinition\"] = \"DELETE_TAG_DEFINITION\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        OperationType[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(OperationType = WorkRequestSummary.OperationType || (WorkRequestSummary.OperationType = {}));\n    let Status;\n    (function (Status) {\n        Status[\"Accepted\"] = \"ACCEPTED\";\n        Status[\"InProgress\"] = \"IN_PROGRESS\";\n        Status[\"Failed\"] = \"FAILED\";\n        Status[\"Succeeded\"] = \"SUCCEEDED\";\n        Status[\"Canceling\"] = \"CANCELING\";\n        Status[\"Canceled\"] = \"CANCELED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Status[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Status = WorkRequestSummary.Status || (WorkRequestSummary.Status = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getJsonObj(item);\n                })\n                : undefined,\n            \"errors\": obj.errors\n                ? obj.errors.map(item => {\n                    return model.WorkRequestError.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    WorkRequestSummary.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getDeserializedJsonObj(item);\n                })\n                : undefined,\n            \"errors\": obj.errors\n                ? obj.errors.map(item => {\n                    return model.WorkRequestError.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    WorkRequestSummary.getDeserializedJsonObj = getDeserializedJsonObj;\n})(WorkRequestSummary = exports.WorkRequestSummary || (exports.WorkRequestSummary = {}));\n//# sourceMappingURL=work-request-summary.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkRequest = void 0;\nconst model = __importStar(require(\"../model\"));\nvar WorkRequest;\n(function (WorkRequest) {\n    let OperationType;\n    (function (OperationType) {\n        OperationType[\"DeleteCompartment\"] = \"DELETE_COMPARTMENT\";\n        OperationType[\"DeleteTagDefinition\"] = \"DELETE_TAG_DEFINITION\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        OperationType[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(OperationType = WorkRequest.OperationType || (WorkRequest.OperationType = {}));\n    let Status;\n    (function (Status) {\n        Status[\"Accepted\"] = \"ACCEPTED\";\n        Status[\"InProgress\"] = \"IN_PROGRESS\";\n        Status[\"Failed\"] = \"FAILED\";\n        Status[\"Succeeded\"] = \"SUCCEEDED\";\n        Status[\"Canceling\"] = \"CANCELING\";\n        Status[\"Canceled\"] = \"CANCELED\";\n        /**\n         * This value is used if a service returns a value for this enum that is not recognized by this\n         * version of the SDK.\n         */\n        Status[\"UnknownValue\"] = \"UNKNOWN_VALUE\";\n    })(Status = WorkRequest.Status || (WorkRequest.Status = {}));\n    function getJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getJsonObj(item);\n                })\n                : undefined,\n            \"errors\": obj.errors\n                ? obj.errors.map(item => {\n                    return model.WorkRequestError.getJsonObj(item);\n                })\n                : undefined,\n            \"logs\": obj.logs\n                ? obj.logs.map(item => {\n                    return model.WorkRequestLogEntry.getJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    WorkRequest.getJsonObj = getJsonObj;\n    function getDeserializedJsonObj(obj) {\n        const jsonObj = Object.assign(Object.assign({}, obj), {\n            \"resources\": obj.resources\n                ? obj.resources.map(item => {\n                    return model.WorkRequestResource.getDeserializedJsonObj(item);\n                })\n                : undefined,\n            \"errors\": obj.errors\n                ? obj.errors.map(item => {\n                    return model.WorkRequestError.getDeserializedJsonObj(item);\n                })\n                : undefined,\n            \"logs\": obj.logs\n                ? obj.logs.map(item => {\n                    return model.WorkRequestLogEntry.getDeserializedJsonObj(item);\n                })\n                : undefined\n        });\n        return jsonObj;\n    }\n    WorkRequest.getDeserializedJsonObj = getDeserializedJsonObj;\n})(WorkRequest = exports.WorkRequest || (exports.WorkRequest = {}));\n//# sourceMappingURL=work-request.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListUsersRequest = exports.ListPoliciesRequest = exports.ListNetworkSourcesRequest = exports.ListMfaTotpDevicesRequest = exports.ListIdentityProvidersRequest = exports.ListGroupsRequest = exports.ListDynamicGroupsRequest = exports.ListCompartmentsRequest = exports.ListBulkActionResourceTypesRequest = void 0;\nconst ListBulkActionResourceTypesRequest = __importStar(require(\"./list-bulk-action-resource-types-request\"));\nexports.ListBulkActionResourceTypesRequest = ListBulkActionResourceTypesRequest.ListBulkActionResourceTypesRequest;\nconst ListCompartmentsRequest = __importStar(require(\"./list-compartments-request\"));\nexports.ListCompartmentsRequest = ListCompartmentsRequest.ListCompartmentsRequest;\nconst ListDynamicGroupsRequest = __importStar(require(\"./list-dynamic-groups-request\"));\nexports.ListDynamicGroupsRequest = ListDynamicGroupsRequest.ListDynamicGroupsRequest;\nconst ListGroupsRequest = __importStar(require(\"./list-groups-request\"));\nexports.ListGroupsRequest = ListGroupsRequest.ListGroupsRequest;\nconst ListIdentityProvidersRequest = __importStar(require(\"./list-identity-providers-request\"));\nexports.ListIdentityProvidersRequest = ListIdentityProvidersRequest.ListIdentityProvidersRequest;\nconst ListMfaTotpDevicesRequest = __importStar(require(\"./list-mfa-totp-devices-request\"));\nexports.ListMfaTotpDevicesRequest = ListMfaTotpDevicesRequest.ListMfaTotpDevicesRequest;\nconst ListNetworkSourcesRequest = __importStar(require(\"./list-network-sources-request\"));\nexports.ListNetworkSourcesRequest = ListNetworkSourcesRequest.ListNetworkSourcesRequest;\nconst ListPoliciesRequest = __importStar(require(\"./list-policies-request\"));\nexports.ListPoliciesRequest = ListPoliciesRequest.ListPoliciesRequest;\nconst ListUsersRequest = __importStar(require(\"./list-users-request\"));\nexports.ListUsersRequest = ListUsersRequest.ListUsersRequest;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListBulkActionResourceTypesRequest = void 0;\nvar ListBulkActionResourceTypesRequest;\n(function (ListBulkActionResourceTypesRequest) {\n    let BulkActionType;\n    (function (BulkActionType) {\n        BulkActionType[\"BulkMoveResources\"] = \"BULK_MOVE_RESOURCES\";\n        BulkActionType[\"BulkDeleteResources\"] = \"BULK_DELETE_RESOURCES\";\n    })(BulkActionType = ListBulkActionResourceTypesRequest.BulkActionType || (ListBulkActionResourceTypesRequest.BulkActionType = {}));\n})(ListBulkActionResourceTypesRequest = exports.ListBulkActionResourceTypesRequest || (exports.ListBulkActionResourceTypesRequest = {}));\n//# sourceMappingURL=list-bulk-action-resource-types-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCompartmentsRequest = void 0;\nvar ListCompartmentsRequest;\n(function (ListCompartmentsRequest) {\n    let AccessLevel;\n    (function (AccessLevel) {\n        AccessLevel[\"Any\"] = \"ANY\";\n        AccessLevel[\"Accessible\"] = \"ACCESSIBLE\";\n    })(AccessLevel = ListCompartmentsRequest.AccessLevel || (ListCompartmentsRequest.AccessLevel = {}));\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListCompartmentsRequest.SortBy || (ListCompartmentsRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListCompartmentsRequest.SortOrder || (ListCompartmentsRequest.SortOrder = {}));\n})(ListCompartmentsRequest = exports.ListCompartmentsRequest || (exports.ListCompartmentsRequest = {}));\n//# sourceMappingURL=list-compartments-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDynamicGroupsRequest = void 0;\nvar ListDynamicGroupsRequest;\n(function (ListDynamicGroupsRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListDynamicGroupsRequest.SortBy || (ListDynamicGroupsRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListDynamicGroupsRequest.SortOrder || (ListDynamicGroupsRequest.SortOrder = {}));\n})(ListDynamicGroupsRequest = exports.ListDynamicGroupsRequest || (exports.ListDynamicGroupsRequest = {}));\n//# sourceMappingURL=list-dynamic-groups-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListGroupsRequest = void 0;\nvar ListGroupsRequest;\n(function (ListGroupsRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListGroupsRequest.SortBy || (ListGroupsRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListGroupsRequest.SortOrder || (ListGroupsRequest.SortOrder = {}));\n})(ListGroupsRequest = exports.ListGroupsRequest || (exports.ListGroupsRequest = {}));\n//# sourceMappingURL=list-groups-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListIdentityProvidersRequest = void 0;\nvar ListIdentityProvidersRequest;\n(function (ListIdentityProvidersRequest) {\n    let Protocol;\n    (function (Protocol) {\n        Protocol[\"Saml2\"] = \"SAML2\";\n    })(Protocol = ListIdentityProvidersRequest.Protocol || (ListIdentityProvidersRequest.Protocol = {}));\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListIdentityProvidersRequest.SortBy || (ListIdentityProvidersRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListIdentityProvidersRequest.SortOrder || (ListIdentityProvidersRequest.SortOrder = {}));\n})(ListIdentityProvidersRequest = exports.ListIdentityProvidersRequest || (exports.ListIdentityProvidersRequest = {}));\n//# sourceMappingURL=list-identity-providers-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListMfaTotpDevicesRequest = void 0;\nvar ListMfaTotpDevicesRequest;\n(function (ListMfaTotpDevicesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListMfaTotpDevicesRequest.SortBy || (ListMfaTotpDevicesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListMfaTotpDevicesRequest.SortOrder || (ListMfaTotpDevicesRequest.SortOrder = {}));\n})(ListMfaTotpDevicesRequest = exports.ListMfaTotpDevicesRequest || (exports.ListMfaTotpDevicesRequest = {}));\n//# sourceMappingURL=list-mfa-totp-devices-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListNetworkSourcesRequest = void 0;\nvar ListNetworkSourcesRequest;\n(function (ListNetworkSourcesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListNetworkSourcesRequest.SortBy || (ListNetworkSourcesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListNetworkSourcesRequest.SortOrder || (ListNetworkSourcesRequest.SortOrder = {}));\n})(ListNetworkSourcesRequest = exports.ListNetworkSourcesRequest || (exports.ListNetworkSourcesRequest = {}));\n//# sourceMappingURL=list-network-sources-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPoliciesRequest = void 0;\nvar ListPoliciesRequest;\n(function (ListPoliciesRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListPoliciesRequest.SortBy || (ListPoliciesRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListPoliciesRequest.SortOrder || (ListPoliciesRequest.SortOrder = {}));\n})(ListPoliciesRequest = exports.ListPoliciesRequest || (exports.ListPoliciesRequest = {}));\n//# sourceMappingURL=list-policies-request.js.map","\"use strict\";\n/**\n *\n *\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListUsersRequest = void 0;\nvar ListUsersRequest;\n(function (ListUsersRequest) {\n    let SortBy;\n    (function (SortBy) {\n        SortBy[\"Timecreated\"] = \"TIMECREATED\";\n        SortBy[\"Name\"] = \"NAME\";\n    })(SortBy = ListUsersRequest.SortBy || (ListUsersRequest.SortBy = {}));\n    let SortOrder;\n    (function (SortOrder) {\n        SortOrder[\"Asc\"] = \"ASC\";\n        SortOrder[\"Desc\"] = \"DESC\";\n    })(SortOrder = ListUsersRequest.SortOrder || (ListUsersRequest.SortOrder = {}));\n})(ListUsersRequest = exports.ListUsersRequest || (exports.ListUsersRequest = {}));\n//# sourceMappingURL=list-users-request.js.map","\"use strict\";\n/**\n * Identity and Access Management Service API\n * APIs for managing users, groups, compartments, and policies.\n * OpenAPI spec version: 20160918\n *\n *\n * NOTE: This class is auto generated by OracleSDKGenerator.\n * Do not edit the class manually.\n *\n * Copyright (c) 2020, 2021, Oracle and/or its affiliates.  All rights reserved.\n * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=index.js.map","'use strict';\n\nmodule.exports = exports = require('./lib/circuit');\n","'use strict';\n\nconst EventEmitter = require('events');\nconst Status = require('./status');\nconst Semaphore = require('./semaphore');\n\nconst STATE = Symbol('state');\nconst OPEN = Symbol('open');\nconst CLOSED = Symbol('closed');\nconst HALF_OPEN = Symbol('half-open');\nconst PENDING_CLOSE = Symbol('pending-close');\nconst SHUTDOWN = Symbol('shutdown');\nconst FALLBACK_FUNCTION = Symbol('fallback');\nconst STATUS = Symbol('status');\nconst NAME = Symbol('name');\nconst GROUP = Symbol('group');\nconst CACHE = new WeakMap();\nconst ENABLED = Symbol('Enabled');\nconst WARMING_UP = Symbol('warming-up');\nconst VOLUME_THRESHOLD = Symbol('volume-threshold');\nconst OUR_ERROR = Symbol('our-error');\nconst RESET_TIMEOUT = Symbol('reset-timeout');\nconst WARMUP_TIMEOUT = Symbol('warmup-timeout');\nconst deprecation = `options.maxFailures is deprecated. \\\nPlease use options.errorThresholdPercentage`;\n\n/**\n * Constructs a {@link CircuitBreaker}.\n *\n * @class CircuitBreaker\n * @extends EventEmitter\n * @param {Function} action The action to fire for this {@link CircuitBreaker}\n * @param {Object} options Options for the {@link CircuitBreaker}\n * @param {Number} options.timeout The time in milliseconds that action should\n * be allowed to execute before timing out. Timeout can be disabled by setting\n * this to `false`. Default 10000 (10 seconds)\n * @param {Number} options.maxFailures (Deprecated) The number of times the\n * circuit can fail before opening. Default 10.\n * @param {Number} options.resetTimeout The time in milliseconds to wait before\n * setting the breaker to `halfOpen` state, and trying the action again.\n * Default: 30000 (30 seconds)\n * @param {Number} options.rollingCountTimeout Sets the duration of the\n * statistical rolling window, in milliseconds. This is how long Opossum keeps\n * metrics for the circuit breaker to use and for publishing. Default: 10000\n * @param {Number} options.rollingCountBuckets Sets the number of buckets the\n * rolling statistical window is divided into. So, if\n * options.rollingCountTimeout is 10000, and options.rollingCountBuckets is 10,\n * then the statistical window will be 1000 1 second snapshots in the\n * statistical window. Default: 10\n * @param {String} options.name the circuit name to use when reporting stats.\n * Default: the name of the function this circuit controls.\n * @param {boolean} options.rollingPercentilesEnabled This property indicates\n * whether execution latencies should be tracked and calculated as percentiles.\n * If they are disabled, all summary statistics (mean, percentiles) are\n * returned as -1. Default: false\n * @param {Number} options.capacity the number of concurrent requests allowed.\n * If the number currently executing function calls is equal to\n * options.capacity, further calls to `fire()` are rejected until at least one\n * of the current requests completes. Default: `Number.MAX_SAFE_INTEGER`.\n * @param {Number} options.errorThresholdPercentage the error percentage at\n * which to open the circuit and start short-circuiting requests to fallback.\n * Default: 50\n * @param {boolean} options.enabled whether this circuit is enabled upon\n * construction. Default: true\n * @param {boolean} options.allowWarmUp determines whether to allow failures\n * without opening the circuit during a brief warmup period (this is the\n * `rollingCountTimeout` property). Default: false\n * allow before enabling the circuit. This can help in situations where no\n * matter what your `errorThresholdPercentage` is, if the first execution\n * times out or fails, the circuit immediately opens.\n * @param {Number} options.volumeThreshold the minimum number of requests within\n * the rolling statistical window that must exist before the circuit breaker\n * can open. This is similar to `options.allowWarmUp` in that no matter how many\n * failures there are, if the number of requests within the statistical window\n * does not exceed this threshold, the circuit will remain closed. Default: 0\n * @param {Function} options.errorFilter an optional function that will be\n * called when the circuit's function fails (returns a rejected Promise). If\n * this function returns truthy, the circuit's failPure statistics will not be\n * incremented. This is useful, for example, when you don't want HTTP 404 to\n * trip the circuit, but still want to handle it as a failure case.\n * @param {boolean} options.cache whether the return value of the first\n * successful execution of the circuit's function will be cached. Once a value\n * has been cached that value will be returned for every subsequent execution:\n * the cache can be cleared using `clearCache`. (The metrics `cacheHit` and\n * `cacheMiss` reflect cache activity.) Default: false\n *\n *\n * @fires CircuitBreaker#halfOpen\n * @fires CircuitBreaker#close\n * @fires CircuitBreaker#open\n * @fires CircuitBreaker#fire\n * @fires CircuitBreaker#cacheHit\n * @fires CircuitBreaker#cacheMiss\n * @fires CircuitBreaker#reject\n * @fires CircuitBreaker#timeout\n * @fires CircuitBreaker#success\n * @fires CircuitBreaker#semaphoreLocked\n * @fires CircuitBreaker#healthCheckFailed\n * @fires CircuitBreaker#fallback\n * @fires CircuitBreaker#failure\n */\nclass CircuitBreaker extends EventEmitter {\n  /**\n   * Returns true if the provided error was generated here. It will be false\n   * if the error came from the action itself.\n   * @param {Error} error The Error to check.\n   * @returns {Boolean} true if the error was generated here\n   */\n  static isOurError (error) {\n    return !!error[OUR_ERROR];\n  }\n\n  constructor (action, options = {}) {\n    super();\n    this.options = options;\n    this.options.timeout =\n      options.timeout === false ? false : options.timeout || 10000;\n    this.options.resetTimeout = options.resetTimeout || 30000;\n    this.options.errorThresholdPercentage =\n      options.errorThresholdPercentage || 50;\n    this.options.rollingCountTimeout = options.rollingCountTimeout || 10000;\n    this.options.rollingCountBuckets = options.rollingCountBuckets || 10;\n    this.options.rollingPercentilesEnabled =\n      options.rollingPercentilesEnabled !== false;\n    this.options.capacity = Number.isInteger(options.capacity)\n      ? options.capacity : Number.MAX_SAFE_INTEGER;\n    this.options.errorFilter = options.errorFilter || (_ => false);\n\n    this.semaphore = new Semaphore(this.options.capacity);\n\n    this[VOLUME_THRESHOLD] = Number.isInteger(options.volumeThreshold)\n      ? options.volumeThreshold : 0;\n    this[WARMING_UP] = options.allowWarmUp === true;\n    this[STATUS] = new Status(this.options);\n    this[STATE] = CLOSED;\n    this[FALLBACK_FUNCTION] = null;\n    this[PENDING_CLOSE] = false;\n    this[NAME] = options.name || action.name || nextName();\n    this[GROUP] = options.group || this[NAME];\n    this[ENABLED] = options.enabled !== false;\n\n    if (this[WARMING_UP]) {\n      const timer = this[WARMUP_TIMEOUT] = setTimeout(\n        _ => (this[WARMING_UP] = false),\n        this.options.rollingCountTimeout\n      );\n      if (typeof timer.unref === 'function') {\n        timer.unref();\n      }\n    }\n\n    if (typeof action !== 'function') {\n      this.action = _ => Promise.resolve(action);\n    } else this.action = action;\n\n    if (options.maxFailures) console.error(deprecation);\n\n    const increment = property =>\n      (result, runTime) => this[STATUS].increment(property, runTime);\n\n    this.on('success', increment('successes'));\n    this.on('failure', increment('failures'));\n    this.on('fallback', increment('fallbacks'));\n    this.on('timeout', increment('timeouts'));\n    this.on('fire', increment('fires'));\n    this.on('reject', increment('rejects'));\n    this.on('cacheHit', increment('cacheHits'));\n    this.on('cacheMiss', increment('cacheMisses'));\n    this.on('open', _ => this[STATUS].open());\n    this.on('close', _ => this[STATUS].close());\n    this.on('semaphoreLocked', increment('semaphoreRejections'));\n\n    /**\n     * @param {CircuitBreaker} circuit This current circuit\n     * @returns {function(): void} A bound reset callback\n     * @private\n     */\n    function _startTimer (circuit) {\n      return _ => {\n        const timer = circuit[RESET_TIMEOUT] = setTimeout(() => {\n          circuit[STATE] = HALF_OPEN;\n          circuit[PENDING_CLOSE] = true;\n          /**\n           * Emitted after `options.resetTimeout` has elapsed, allowing for\n           * a single attempt to call the service again. If that attempt is\n           * successful, the circuit will be closed. Otherwise it remains open.\n           *\n           * @event CircuitBreaker#halfOpen\n           * @type {Number} how long the circuit remained open\n           */\n          circuit.emit('halfOpen', circuit.options.resetTimeout);\n        }, circuit.options.resetTimeout);\n        if (typeof timer.unref === 'function') {\n          timer.unref();\n        }\n      };\n    }\n\n    this.on('open', _startTimer(this));\n    this.on('success', _ => {\n      if (this.halfOpen) {\n        this.close();\n      }\n    });\n    if (this.options.cache) {\n      CACHE.set(this, undefined);\n    }\n  }\n\n  /**\n   * Closes the breaker, allowing the action to execute again\n   * @fires CircuitBreaker#close\n   * @returns {void}\n   */\n  close () {\n    if (this[STATE] !== CLOSED) {\n      if (this[RESET_TIMEOUT]) {\n        clearTimeout(this[RESET_TIMEOUT]);\n      }\n      this[STATE] = CLOSED;\n      this[PENDING_CLOSE] = false;\n      /**\n       * Emitted when the breaker is reset allowing the action to execute again\n       * @event CircuitBreaker#close\n       */\n      this.emit('close');\n    }\n  }\n\n  /**\n   * Opens the breaker. Each time the breaker is fired while the circuit is\n   * opened, a failed Promise is returned, or if any fallback function\n   * has been provided, it is invoked.\n   *\n   * If the breaker is already open this call does nothing.\n   * @fires CircuitBreaker#open\n   * @returns {void}\n   */\n  open () {\n    if (this[STATE] !== OPEN) {\n      this[STATE] = OPEN;\n      this[PENDING_CLOSE] = false;\n      /**\n       * Emitted when the breaker opens because the action has\n       * failed more than `options.maxFailures` number of times.\n       * @event CircuitBreaker#open\n       */\n      this.emit('open');\n    }\n  }\n\n  /**\n   * Shuts down this circuit breaker. All subsequent calls to the\n   * circuit will fail, returning a rejected promise.\n   * @returns {void}\n   */\n  shutdown () {\n    this.disable();\n    this.removeAllListeners();\n    if (this[RESET_TIMEOUT]) {\n      clearTimeout(this[RESET_TIMEOUT]);\n    }\n    if (this[WARMUP_TIMEOUT]) {\n      clearTimeout(this[WARMUP_TIMEOUT]);\n    }\n    this.status.shutdown();\n    this[STATE] = SHUTDOWN;\n    /**\n     * Emitted when the circuit breaker has been shut down.\n     * @event CircuitBreaker#shutdown\n     */\n    this.emit('shutdown');\n  }\n\n  /**\n   * Determines if the circuit has been shutdown.\n   * @type {Boolean}\n   */\n  get isShutdown () {\n    return this[STATE] === SHUTDOWN;\n  }\n\n  /**\n   * Gets the name of this circuit\n   * @type {String}\n   */\n  get name () {\n    return this[NAME];\n  }\n\n  /**\n   * Gets the name of this circuit group\n   * @type {String}\n   */\n  get group () {\n    return this[GROUP];\n  }\n\n  /**\n   * Gets whether this circuit is in the `pendingClosed` state\n   * @type {Boolean}\n   */\n  get pendingClose () {\n    return this[PENDING_CLOSE];\n  }\n\n  /**\n   * True if the circuit is currently closed. False otherwise.\n   * @type {Boolean}\n   */\n  get closed () {\n    return this[STATE] === CLOSED;\n  }\n\n  /**\n   * True if the circuit is currently opened. False otherwise.\n   * @type {Boolean}\n   */\n  get opened () {\n    return this[STATE] === OPEN;\n  }\n\n  /**\n   * True if the circuit is currently half opened. False otherwise.\n   * @type {Boolean}\n   */\n  get halfOpen () {\n    return this[STATE] === HALF_OPEN;\n  }\n\n  /**\n   * The current {@link Status} of this {@link CircuitBreaker}\n   * @type {Status}\n   */\n  get status () {\n    return this[STATUS];\n  }\n\n  /**\n   * Get the current stats for the circuit.\n   * @see Status#stats\n   * @type {Object}\n   */\n  get stats () {\n    return this[STATUS].stats;\n  }\n\n  /**\n   * Gets whether the circuit is enabled or not\n   * @type {Boolean}\n   */\n  get enabled () {\n    return this[ENABLED];\n  }\n\n  /**\n   * Gets whether the circuit is currently in warm up phase\n   * @type {Boolean}\n   */\n  get warmUp () {\n    return this[WARMING_UP];\n  }\n\n  /**\n   * Gets the volume threshold for this circuit\n   * @type {Boolean}\n   */\n  get volumeThreshold () {\n    return this[VOLUME_THRESHOLD];\n  }\n\n  /**\n   * Provide a fallback function for this {@link CircuitBreaker}. This\n   * function will be executed when the circuit is `fire`d and fails.\n   * It will always be preceded by a `failure` event, and `breaker.fire` returns\n   * a rejected Promise.\n   * @param {Function | CircuitBreaker} func the fallback function to execute\n   * when the breaker has opened or when a timeout or error occurs.\n   * @return {CircuitBreaker} this\n   */\n  fallback (func) {\n    let fb = func;\n    if (func instanceof CircuitBreaker) {\n      fb = function () {\n        return func.fire.apply(func, arguments);\n      };\n    }\n    this[FALLBACK_FUNCTION] = fb;\n    return this;\n  }\n\n  /**\n   * Execute the action for this circuit. If the action fails or times out, the\n   * returned promise will be rejected. If the action succeeds, the promise will\n   * resolve with the resolved value from action. If a fallback function was\n   * provided, it will be invoked in the event of any failure or timeout.\n   *\n   * Any parameters passed to this function will be proxied to the circuit\n   * function.\n   *\n   * @return {Promise<any>} promise resolves with the circuit function's return\n   * value on success or is rejected on failure of the action. Use isOurError()\n   * to determine if a rejection was a result of the circuit breaker or the\n   * action.\n   *\n   * @fires CircuitBreaker#failure\n   * @fires CircuitBreaker#fallback\n   * @fires CircuitBreaker#fire\n   * @fires CircuitBreaker#reject\n   * @fires CircuitBreaker#success\n   * @fires CircuitBreaker#timeout\n   * @fires CircuitBreaker#semaphoreLocked\n   */\n  fire (...args) {\n    return this.call.apply(this, [this.action].concat(args));\n  }\n\n  /**\n   * Execute the action for this circuit using `context` as `this`.\n   * If the action fails or times out, the\n   * returned promise will be rejected. If the action succeeds, the promise will\n   * resolve with the resolved value from action. If a fallback function was\n   * provided, it will be invoked in the event of any failure or timeout.\n   *\n   * Any parameters in addition to `context will be passed to the\n   * circuit function.\n   *\n   * @param {any} context the `this` context used for function execution\n   * @param {any} rest the arguments passed to the action\n   *\n   * @return {Promise<any>} promise resolves with the circuit function's return\n   * value on success or is rejected on failure of the action.\n   *\n   * @fires CircuitBreaker#failure\n   * @fires CircuitBreaker#fallback\n   * @fires CircuitBreaker#fire\n   * @fires CircuitBreaker#reject\n   * @fires CircuitBreaker#success\n   * @fires CircuitBreaker#timeout\n   * @fires CircuitBreaker#semaphoreLocked\n   */\n  call (context, ...rest) {\n    if (this.isShutdown) {\n      const err = buildError('The circuit has been shutdown.', 'ESHUTDOWN');\n      return Promise.reject(err);\n    }\n    const args = Array.prototype.slice.call(rest);\n\n    /**\n     * Emitted when the circuit breaker action is executed\n     * @event CircuitBreaker#fire\n     * @type {any} the arguments passed to the fired function\n     */\n    this.emit('fire', args);\n\n    if (CACHE.get(this) !== undefined) {\n      /**\n       * Emitted when the circuit breaker is using the cache\n       * and finds a value.\n       * @event CircuitBreaker#cacheHit\n       */\n      this.emit('cacheHit');\n      return CACHE.get(this);\n    } else if (this.options.cache) {\n      /**\n       * Emitted when the circuit breaker does not find a value in\n       * the cache, but the cache option is enabled.\n       * @event CircuitBreaker#cacheMiss\n       */\n      this.emit('cacheMiss');\n    }\n\n    if (!this[ENABLED]) {\n      const result = this.action.apply(context, args);\n      return (typeof result.then === 'function')\n        ? result\n        : Promise.resolve(result);\n    }\n\n    if (!this.closed && !this.pendingClose) {\n      /**\n       * Emitted when the circuit breaker is open and failing fast\n       * @event CircuitBreaker#reject\n       * @type {Error}\n       */\n      const error = buildError('Breaker is open', 'EOPENBREAKER');\n\n      this.emit('reject', error);\n\n      return fallback(this, error, args) ||\n        Promise.reject(error);\n    }\n    this[PENDING_CLOSE] = false;\n\n    let timeout;\n    let timeoutError = false;\n    return new Promise((resolve, reject) => {\n      const latencyStartTime = Date.now();\n      if (this.semaphore.test()) {\n        if (this.options.timeout) {\n          timeout = setTimeout(\n            () => {\n              timeoutError = true;\n              const error = buildError(\n                `Timed out after ${this.options.timeout}ms`, 'ETIMEDOUT'\n              );\n              const latency = Date.now() - latencyStartTime;\n              this.semaphore.release();\n              /**\n               * Emitted when the circuit breaker action takes longer than\n               * `options.timeout`\n               * @event CircuitBreaker#timeout\n               * @type {Error}\n               */\n              this.emit('timeout', error, latency, args);\n              handleError(error, this, timeout, args, latency, resolve, reject);\n            }, this.options.timeout);\n        }\n\n        try {\n          const result = this.action.apply(context, args);\n          const promise = (typeof result.then === 'function')\n            ? result\n            : Promise.resolve(result);\n\n          promise.then(result => {\n            if (!timeoutError) {\n              clearTimeout(timeout);\n              /**\n               * Emitted when the circuit breaker action succeeds\n               * @event CircuitBreaker#success\n               * @type {any} the return value from the circuit\n               */\n              this.emit('success', result, (Date.now() - latencyStartTime));\n              this.semaphore.release();\n              resolve(result);\n              if (this.options.cache) {\n                CACHE.set(this, promise);\n              }\n            }\n          })\n            .catch(error => {\n              if (!timeoutError) {\n                this.semaphore.release();\n                const latencyEndTime = Date.now() - latencyStartTime;\n                handleError(\n                  error, this, timeout, args, latencyEndTime, resolve, reject);\n              }\n            });\n        } catch (error) {\n          this.semaphore.release();\n          const latency = Date.now() - latencyStartTime;\n          handleError(error, this, timeout, args, latency, resolve, reject);\n        }\n      } else {\n        const latency = Date.now() - latencyStartTime;\n        const err = buildError('Semaphore locked', 'ESEMLOCKED');\n        /**\n         * Emitted when the rate limit has been reached and there\n         * are no more locks to be obtained.\n         * @event CircuitBreaker#semaphoreLocked\n         * @type {Error}\n         */\n        this.emit('semaphoreLocked', err, latency);\n        handleError(err, this, timeout, args, latency, resolve, reject);\n      }\n    });\n  }\n\n  /**\n   * Clears the cache of this {@link CircuitBreaker}\n   * @returns {void}\n   */\n  clearCache () {\n    CACHE.set(this, undefined);\n  }\n\n  /**\n   * Provide a health check function to be called periodically. The function\n   * should return a Promise. If the promise is rejected the circuit will open.\n   * This is in addition to the existing circuit behavior as defined by\n   * `options.errorThresholdPercentage` in the constructor. For example, if the\n   * health check function provided here always returns a resolved promise, the\n   * circuit can still trip and open if there are failures exceeding the\n   * configured threshold. The health check function is executed within the\n   * circuit breaker's execution context, so `this` within the function is the\n   * circuit breaker itself.\n   *\n   * @param {Function} func a health check function which returns a promise.\n   * @param {Number} [interval] the amount of time between calls to the health\n   * check function. Default: 5000 (5 seconds)\n   *\n   * @returns {void}\n   *\n   * @fires CircuitBreaker#healthCheckFailed\n   * @throws {TypeError} if `interval` is supplied but not a number\n   */\n  healthCheck (func, interval) {\n    interval = interval || 5000;\n    if (typeof func !== 'function') {\n      throw new TypeError('Health check function must be a function');\n    }\n    if (isNaN(interval)) {\n      throw new TypeError('Health check interval must be a number');\n    }\n\n    const check = _ => {\n      func.apply(this).catch(e => {\n        /**\n         * Emitted with the user-supplied health check function\n         * returns a rejected promise.\n         * @event CircuitBreaker#healthCheckFailed\n         * @type {Error}\n         */\n        this.emit('healthCheckFailed', e);\n        this.open();\n      });\n    };\n\n    const timer = setInterval(check, interval);\n    if (typeof timer.unref === 'function') {\n      timer.unref();\n    }\n\n    check();\n  }\n\n  /**\n   * Enables this circuit. If the circuit is the  disabled\n   * state, it will be re-enabled. If not, this is essentially\n   * a noop.\n   * @returns {void}\n   */\n  enable () {\n    this[ENABLED] = true;\n  }\n\n  /**\n   * Disables this circuit, causing all calls to the circuit's function\n   * to be executed without circuit or fallback protection.\n   * @returns {void}\n   */\n  disable () {\n    this[ENABLED] = false;\n  }\n}\n\nfunction handleError (error, circuit, timeout, args, latency, resolve, reject) {\n  clearTimeout(timeout);\n\n  if (circuit.options.errorFilter(error)) {\n    circuit.emit('success', error, latency);\n  } else {\n    fail(circuit, error, args, latency);\n  }\n\n  const fb = fallback(circuit, error, args);\n  if (fb) resolve(fb);\n  else reject(error);\n}\n\nfunction fallback (circuit, err, args) {\n  if (circuit[FALLBACK_FUNCTION]) {\n    const result =\n      circuit[FALLBACK_FUNCTION]\n        .apply(circuit[FALLBACK_FUNCTION], [...args, err]);\n    /**\n     * Emitted when the circuit breaker executes a fallback function\n     * @event CircuitBreaker#fallback\n     * @type {any} the return value of the fallback function\n     */\n    circuit.emit('fallback', result, err);\n    if (result instanceof Promise) return result;\n    return Promise.resolve(result);\n  }\n}\n\nfunction fail (circuit, err, args, latency) {\n  /**\n   * Emitted when the circuit breaker action fails\n   * @event CircuitBreaker#failure\n   * @type {Error}\n   */\n  circuit.emit('failure', err, latency, args);\n  if (circuit.warmUp) return;\n\n  // check stats to see if the circuit should be opened\n  const stats = circuit.stats;\n  if ((stats.fires < circuit.volumeThreshold) && !circuit.halfOpen) return;\n  const errorRate = stats.failures / stats.fires * 100;\n  if (errorRate > circuit.options.errorThresholdPercentage ||\n    stats.failures >= circuit.options.maxFailures ||\n    circuit.halfOpen) {\n    circuit.open();\n  }\n}\n\nfunction buildError (msg, code) {\n  const error = new Error(msg);\n  error.code = code;\n  error[OUR_ERROR] = true;\n  return error;\n}\n\n// http://stackoverflow.com/a/2117523\nconst nextName = () =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n\nmodule.exports = exports = CircuitBreaker;\n","'use strict';\n\nmodule.exports = exports = semaphore;\n\nfunction semaphore (count) {\n  const resolvers = [];\n  let counter = count;\n\n  const sem = {\n    take,\n    release,\n    test\n  };\n\n  Object.defineProperty(sem, 'count', {\n    get: _ => counter,\n    enumerable: true\n  });\n\n  return sem;\n\n  function take (timeout) {\n    if (counter > 0) {\n      --counter;\n      return Promise.resolve(release);\n    }\n    return new Promise((resolve, reject) => {\n      resolvers.push(_ => {\n        --counter;\n        resolve(release);\n      });\n      if (timeout) {\n        setTimeout(_ => {\n          resolvers.shift();\n          const err = new Error(`Timed out after ${timeout}ms`);\n          err.code = 'ETIMEDOUT';\n          reject(err);\n        }, timeout);\n      }\n    });\n  }\n\n  function release () {\n    counter++;\n    if (resolvers.length > 0) {\n      resolvers.shift()();\n    }\n  }\n\n  function test () {\n    if (counter < 1) return false;\n    return take() && true;\n  }\n}\n","'use strict';\n\nconst WINDOW = Symbol('window');\nconst BUCKETS = Symbol('buckets');\nconst TIMEOUT = Symbol('timeout');\nconst PERCENTILES = Symbol('percentiles');\nconst BUCKET_INTERVAL = Symbol('bucket-interval');\nconst SNAPSHOT_INTERVAL = Symbol('snapshot-interval');\n\nconst EventEmitter = require('events').EventEmitter;\n\n/**\n * Tracks execution status for a given {@link CircuitBreaker}.\n * A Status instance is created for every {@link CircuitBreaker}\n * and does not typically need to be created by a user.\n *\n * A Status instance will listen for all events on the {@link CircuitBreaker}\n * and track them in a rolling statistical window. The window duration is\n * determined by the `rollingCountTimeout` option provided to the\n * {@link CircuitBreaker}. The window consists of an array of Objects,\n * each representing the counts for a {@link CircuitBreaker}'s events.\n *\n * The array's length is determined by the {@link CircuitBreaker}'s\n * `rollingCountBuckets` option. The duration of each slice of the window\n * is determined by dividing the `rollingCountTimeout` by\n * `rollingCountBuckets`.\n *\n * @class Status\n * @extends EventEmitter\n * @param {Object} options for the status window\n * @param {Number} options.rollingCountBuckets number of buckets in the window\n * @param {Number} options.rollingCountTimeout the duration of the window\n * @param {Boolean} options.rollingPercentilesEnabled whether to calculate\n * percentiles\n * @example\n * // Creates a 1 second window consisting of ten time slices,\n * // each 100ms long.\n * const circuit = circuitBreaker(fs.readFile,\n *  { rollingCountBuckets: 10, rollingCountTimeout: 1000});\n *\n * // get the cumulative statistics for the last second\n * circuit.status.stats;\n *\n * // get the array of 10, 1 second time slices for the last second\n * circuit.status.window;\n * @fires Status#snapshot\n * @see CircuitBreaker#status\n */\nclass Status extends EventEmitter {\n  constructor (options) {\n    super();\n\n    // Set up our statistical rolling window\n    this[BUCKETS] = options.rollingCountBuckets;\n    this[TIMEOUT] = options.rollingCountTimeout;\n    this[WINDOW] = new Array(this[BUCKETS]);\n    this[PERCENTILES] = [0.0, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.995, 1];\n\n    // Default this value to true\n    this.rollingPercentilesEnabled = options.rollingPercentilesEnabled;\n\n    // prime the window with buckets\n    for (let i = 0; i < this[BUCKETS]; i++) this[WINDOW][i] = bucket();\n\n    // rotate the buckets periodically\n    const bucketInterval = Math.floor(this[TIMEOUT] / this[BUCKETS]);\n    this[BUCKET_INTERVAL] = setInterval(nextBucket(this[WINDOW]),\n      bucketInterval);\n\n    // No unref() in the browser\n    if (typeof this[BUCKET_INTERVAL].unref === 'function') {\n      this[BUCKET_INTERVAL].unref();\n    }\n\n    /**\n     * Emitted at each time-slice. Listeners for this\n     * event will receive a cumulative snapshot of the current status window.\n     * @event Status#snapshot\n     * @type {Object}\n     */\n    this[SNAPSHOT_INTERVAL] = setInterval(\n      _ => this.emit('snapshot', this.stats),\n      bucketInterval);\n    if (typeof this[SNAPSHOT_INTERVAL].unref === 'function') {\n      this[SNAPSHOT_INTERVAL].unref();\n    }\n  }\n\n  /**\n   * Get the cumulative stats for the current window\n   * @type {Object}\n   */\n  get stats () {\n    const totals = this[WINDOW].reduce((acc, val) => {\n      if (!val) { return acc; }\n      Object.keys(acc).forEach(key => {\n        if (key !== 'latencyTimes' && key !== 'percentiles') {\n          (acc[key] += val[key] || 0);\n        }\n      });\n\n      if (this.rollingPercentilesEnabled) {\n        acc.latencyTimes.push.apply(acc.latencyTimes, val.latencyTimes || []);\n      }\n      return acc;\n    }, bucket());\n\n    if (this.rollingPercentilesEnabled) {\n      // Sort the latencyTimes\n      totals.latencyTimes.sort((a, b) => a - b);\n\n      // Get the mean latency\n      // Mean = sum of all values in the array/length of array\n      if (totals.latencyTimes.length) {\n        totals.latencyMean =\n          (totals\n            .latencyTimes\n            .reduce((a, b) => a + b, 0)) / totals.latencyTimes.length;\n      } else {\n        totals.latencyMean = 0;\n      }\n\n      // Calculate Percentiles\n      this[PERCENTILES].forEach(percentile => {\n        totals.percentiles[percentile] =\n          calculatePercentile(percentile, totals.latencyTimes);\n      });\n    } else {\n      totals.latencyMean = -1;\n      this[PERCENTILES].forEach(percentile => {\n        totals.percentiles[percentile] = -1;\n      });\n    }\n\n    return totals;\n  }\n\n  /**\n   * Gets the stats window as an array of time-sliced objects.\n   * @type {Array}\n   */\n  get window () {\n    return this[WINDOW].slice();\n  }\n\n  increment (property, latencyRunTime) {\n    this[WINDOW][0][property]++;\n    if (property === 'successes' ||\n        property === 'failures' ||\n        property === 'timeouts') {\n      this[WINDOW][0].latencyTimes.push(latencyRunTime || 0);\n    }\n  }\n\n  open () {\n    this[WINDOW][0].isCircuitBreakerOpen = true;\n  }\n\n  close () {\n    this[WINDOW][0].isCircuitBreakerOpen = false;\n  }\n\n  shutdown () {\n    this.removeAllListeners();\n    clearInterval(this[BUCKET_INTERVAL]);\n    clearInterval(this[SNAPSHOT_INTERVAL]);\n  }\n}\n\nconst nextBucket = window => _ => {\n  window.pop();\n  window.unshift(bucket());\n};\n\nconst bucket = _ => ({\n  failures: 0,\n  fallbacks: 0,\n  successes: 0,\n  rejects: 0,\n  fires: 0,\n  timeouts: 0,\n  cacheHits: 0,\n  cacheMisses: 0,\n  semaphoreRejections: 0,\n  percentiles: {},\n  latencyTimes: []\n});\n\nfunction calculatePercentile (percentile, arr) {\n  if (percentile === 0) {\n    return arr[0] || 0;\n  }\n  const idx = Math.ceil(percentile * arr.length);\n  return arr[idx - 1] || 0;\n}\n\nmodule.exports = exports = Status;\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar R = 0\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\nvar NUMERICIDENTIFIERLOOSE = R++\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')'\n\nvar MAINVERSIONLOOSE = R++\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')'\n\nvar PRERELEASEIDENTIFIERLOOSE = R++\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))'\n\nvar PRERELEASELOOSE = R++\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?'\n\nsrc[FULL] = '^' + FULLPLAIN + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?'\n\nvar LOOSE = R++\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$'\n\nvar GTLT = R++\nsrc[GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\nvar XRANGEIDENTIFIER = R++\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\nvar XRANGEPLAIN = R++\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?'\n\nvar XRANGEPLAINLOOSE = R++\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?'\n\nvar XRANGE = R++\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$'\nvar XRANGELOOSE = R++\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++\nsrc[LONETILDE] = '(?:~>?)'\n\nvar TILDETRIM = R++\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+'\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\nvar TILDE = R++\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'\nvar TILDELOOSE = R++\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++\nsrc[LONECARET] = '(?:\\\\^)'\n\nvar CARETTRIM = R++\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+'\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\nvar CARET = R++\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'\nvar CARETLOOSE = R++\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$'\nvar COMPARATOR = R++\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\nvar HYPHENRANGELOOSE = R++\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[LOOSE] : re[FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compare(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.rcompare(a, b, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1]\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return thisComparators.every(function (thisComparator) {\n      return range.set.some(function (rangeComparators) {\n        return rangeComparators.every(function (rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options)\n        })\n      })\n    })\n  })\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[CARETLOOSE] : re[CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '')\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    version = new SemVer(version, this.options)\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  var match = version.match(re[COERCE])\n\n  if (match == null) {\n    return null\n  }\n\n  return parse(match[1] +\n    '.' + (match[2] || '0') +\n    '.' + (match[3] || '0'))\n}\n","// Copyright 2015 Joyent, Inc.\n\nvar Buffer = require('safer-buffer').Buffer;\n\nvar algInfo = {\n\t'dsa': {\n\t\tparts: ['p', 'q', 'g', 'y'],\n\t\tsizePart: 'p'\n\t},\n\t'rsa': {\n\t\tparts: ['e', 'n'],\n\t\tsizePart: 'n'\n\t},\n\t'ecdsa': {\n\t\tparts: ['curve', 'Q'],\n\t\tsizePart: 'Q'\n\t},\n\t'ed25519': {\n\t\tparts: ['A'],\n\t\tsizePart: 'A'\n\t}\n};\nalgInfo['curve25519'] = algInfo['ed25519'];\n\nvar algPrivInfo = {\n\t'dsa': {\n\t\tparts: ['p', 'q', 'g', 'y', 'x']\n\t},\n\t'rsa': {\n\t\tparts: ['n', 'e', 'd', 'iqmp', 'p', 'q']\n\t},\n\t'ecdsa': {\n\t\tparts: ['curve', 'Q', 'd']\n\t},\n\t'ed25519': {\n\t\tparts: ['A', 'k']\n\t}\n};\nalgPrivInfo['curve25519'] = algPrivInfo['ed25519'];\n\nvar hashAlgs = {\n\t'md5': true,\n\t'sha1': true,\n\t'sha256': true,\n\t'sha384': true,\n\t'sha512': true\n};\n\n/*\n * Taken from\n * http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf\n */\nvar curves = {\n\t'nistp256': {\n\t\tsize: 256,\n\t\tpkcs8oid: '1.2.840.10045.3.1.7',\n\t\tp: Buffer.from(('00' +\n\t\t    'ffffffff 00000001 00000000 00000000' +\n\t\t    '00000000 ffffffff ffffffff ffffffff').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\ta: Buffer.from(('00' +\n\t\t    'FFFFFFFF 00000001 00000000 00000000' +\n\t\t    '00000000 FFFFFFFF FFFFFFFF FFFFFFFC').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tb: Buffer.from((\n\t\t    '5ac635d8 aa3a93e7 b3ebbd55 769886bc' +\n\t\t    '651d06b0 cc53b0f6 3bce3c3e 27d2604b').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\ts: Buffer.from(('00' +\n\t\t    'c49d3608 86e70493 6a6678e1 139d26b7' +\n\t\t    '819f7e90').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tn: Buffer.from(('00' +\n\t\t    'ffffffff 00000000 ffffffff ffffffff' +\n\t\t    'bce6faad a7179e84 f3b9cac2 fc632551').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tG: Buffer.from(('04' +\n\t\t    '6b17d1f2 e12c4247 f8bce6e5 63a440f2' +\n\t\t    '77037d81 2deb33a0 f4a13945 d898c296' +\n\t\t    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16' +\n\t\t    '2bce3357 6b315ece cbb64068 37bf51f5').\n\t\t    replace(/ /g, ''), 'hex')\n\t},\n\t'nistp384': {\n\t\tsize: 384,\n\t\tpkcs8oid: '1.3.132.0.34',\n\t\tp: Buffer.from(('00' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff ffffffff fffffffe' +\n\t\t    'ffffffff 00000000 00000000 ffffffff').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\ta: Buffer.from(('00' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFE' +\n\t\t    'FFFFFFFF 00000000 00000000 FFFFFFFC').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tb: Buffer.from((\n\t\t    'b3312fa7 e23ee7e4 988e056b e3f82d19' +\n\t\t    '181d9c6e fe814112 0314088f 5013875a' +\n\t\t    'c656398d 8a2ed19d 2a85c8ed d3ec2aef').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\ts: Buffer.from(('00' +\n\t\t    'a335926a a319a27a 1d00896a 6773a482' +\n\t\t    '7acdac73').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tn: Buffer.from(('00' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff c7634d81 f4372ddf' +\n\t\t    '581a0db2 48b0a77a ecec196a ccc52973').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tG: Buffer.from(('04' +\n\t\t    'aa87ca22 be8b0537 8eb1c71e f320ad74' +\n\t\t    '6e1d3b62 8ba79b98 59f741e0 82542a38' +\n\t\t    '5502f25d bf55296c 3a545e38 72760ab7' +\n\t\t    '3617de4a 96262c6f 5d9e98bf 9292dc29' +\n\t\t    'f8f41dbd 289a147c e9da3113 b5f0b8c0' +\n\t\t    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f').\n\t\t    replace(/ /g, ''), 'hex')\n\t},\n\t'nistp521': {\n\t\tsize: 521,\n\t\tpkcs8oid: '1.3.132.0.35',\n\t\tp: Buffer.from((\n\t\t    '01ffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffff').replace(/ /g, ''), 'hex'),\n\t\ta: Buffer.from(('01FF' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF' +\n\t\t    'FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFC').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tb: Buffer.from(('51' +\n\t\t    '953eb961 8e1c9a1f 929a21a0 b68540ee' +\n\t\t    'a2da725b 99b315f3 b8b48991 8ef109e1' +\n\t\t    '56193951 ec7e937b 1652c0bd 3bb1bf07' +\n\t\t    '3573df88 3d2c34f1 ef451fd4 6b503f00').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\ts: Buffer.from(('00' +\n\t\t    'd09e8800 291cb853 96cc6717 393284aa' +\n\t\t    'a0da64ba').replace(/ /g, ''), 'hex'),\n\t\tn: Buffer.from(('01ff' +\n\t\t    'ffffffff ffffffff ffffffff ffffffff' +\n\t\t    'ffffffff ffffffff ffffffff fffffffa' +\n\t\t    '51868783 bf2f966b 7fcc0148 f709a5d0' +\n\t\t    '3bb5c9b8 899c47ae bb6fb71e 91386409').\n\t\t    replace(/ /g, ''), 'hex'),\n\t\tG: Buffer.from(('04' +\n\t\t    '00c6 858e06b7 0404e9cd 9e3ecb66 2395b442' +\n\t\t         '9c648139 053fb521 f828af60 6b4d3dba' +\n\t\t         'a14b5e77 efe75928 fe1dc127 a2ffa8de' +\n\t\t         '3348b3c1 856a429b f97e7e31 c2e5bd66' +\n\t\t    '0118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9' +\n\t\t         '98f54449 579b4468 17afbd17 273e662c' +\n\t\t         '97ee7299 5ef42640 c550b901 3fad0761' +\n\t\t         '353c7086 a272c240 88be9476 9fd16650').\n\t\t    replace(/ /g, ''), 'hex')\n\t}\n};\n\nmodule.exports = {\n\tinfo: algInfo,\n\tprivInfo: algPrivInfo,\n\thashAlgs: hashAlgs,\n\tcurves: curves\n};\n","// Copyright 2016 Joyent, Inc.\n\nmodule.exports = Certificate;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar Key = require('./key');\nvar PrivateKey = require('./private-key');\nvar Identity = require('./identity');\n\nvar formats = {};\nformats['openssh'] = require('./formats/openssh-cert');\nformats['x509'] = require('./formats/x509');\nformats['pem'] = require('./formats/x509-pem');\n\nvar CertificateParseError = errs.CertificateParseError;\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\n\nfunction Certificate(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.subjects, 'options.subjects');\n\tutils.assertCompatible(opts.subjects[0], Identity, [1, 0],\n\t    'options.subjects');\n\tutils.assertCompatible(opts.subjectKey, Key, [1, 0],\n\t    'options.subjectKey');\n\tutils.assertCompatible(opts.issuer, Identity, [1, 0], 'options.issuer');\n\tif (opts.issuerKey !== undefined) {\n\t\tutils.assertCompatible(opts.issuerKey, Key, [1, 0],\n\t\t    'options.issuerKey');\n\t}\n\tassert.object(opts.signatures, 'options.signatures');\n\tassert.buffer(opts.serial, 'options.serial');\n\tassert.date(opts.validFrom, 'options.validFrom');\n\tassert.date(opts.validUntil, 'optons.validUntil');\n\n\tassert.optionalArrayOfString(opts.purposes, 'options.purposes');\n\n\tthis._hashCache = {};\n\n\tthis.subjects = opts.subjects;\n\tthis.issuer = opts.issuer;\n\tthis.subjectKey = opts.subjectKey;\n\tthis.issuerKey = opts.issuerKey;\n\tthis.signatures = opts.signatures;\n\tthis.serial = opts.serial;\n\tthis.validFrom = opts.validFrom;\n\tthis.validUntil = opts.validUntil;\n\tthis.purposes = opts.purposes;\n}\n\nCertificate.formats = formats;\n\nCertificate.prototype.toBuffer = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'x509';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\tassert.optionalObject(options, 'options');\n\n\treturn (formats[format].write(this, options));\n};\n\nCertificate.prototype.toString = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'pem';\n\treturn (this.toBuffer(format, options).toString());\n};\n\nCertificate.prototype.fingerprint = function (algo) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tassert.string(algo, 'algorithm');\n\tvar opts = {\n\t\ttype: 'certificate',\n\t\thash: this.hash(algo),\n\t\talgorithm: algo\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nCertificate.prototype.hash = function (algo) {\n\tassert.string(algo, 'algorithm');\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tif (this._hashCache[algo])\n\t\treturn (this._hashCache[algo]);\n\n\tvar hash = crypto.createHash(algo).\n\t    update(this.toBuffer('x509')).digest();\n\tthis._hashCache[algo] = hash;\n\treturn (hash);\n};\n\nCertificate.prototype.isExpired = function (when) {\n\tif (when === undefined)\n\t\twhen = new Date();\n\treturn (!((when.getTime() >= this.validFrom.getTime()) &&\n\t\t(when.getTime() < this.validUntil.getTime())));\n};\n\nCertificate.prototype.isSignedBy = function (issuerCert) {\n\tutils.assertCompatible(issuerCert, Certificate, [1, 0], 'issuer');\n\n\tif (!this.issuer.equals(issuerCert.subjects[0]))\n\t\treturn (false);\n\tif (this.issuer.purposes && this.issuer.purposes.length > 0 &&\n\t    this.issuer.purposes.indexOf('ca') === -1) {\n\t\treturn (false);\n\t}\n\n\treturn (this.isSignedByKey(issuerCert.subjectKey));\n};\n\nCertificate.prototype.getExtension = function (keyOrOid) {\n\tassert.string(keyOrOid, 'keyOrOid');\n\tvar ext = this.getExtensions().filter(function (maybeExt) {\n\t\tif (maybeExt.format === 'x509')\n\t\t\treturn (maybeExt.oid === keyOrOid);\n\t\tif (maybeExt.format === 'openssh')\n\t\t\treturn (maybeExt.name === keyOrOid);\n\t\treturn (false);\n\t})[0];\n\treturn (ext);\n};\n\nCertificate.prototype.getExtensions = function () {\n\tvar exts = [];\n\tvar x509 = this.signatures.x509;\n\tif (x509 && x509.extras && x509.extras.exts) {\n\t\tx509.extras.exts.forEach(function (ext) {\n\t\t\text.format = 'x509';\n\t\t\texts.push(ext);\n\t\t});\n\t}\n\tvar openssh = this.signatures.openssh;\n\tif (openssh && openssh.exts) {\n\t\topenssh.exts.forEach(function (ext) {\n\t\t\text.format = 'openssh';\n\t\t\texts.push(ext);\n\t\t});\n\t}\n\treturn (exts);\n};\n\nCertificate.prototype.isSignedByKey = function (issuerKey) {\n\tutils.assertCompatible(issuerKey, Key, [1, 2], 'issuerKey');\n\n\tif (this.issuerKey !== undefined) {\n\t\treturn (this.issuerKey.\n\t\t    fingerprint('sha512').matches(issuerKey));\n\t}\n\n\tvar fmt = Object.keys(this.signatures)[0];\n\tvar valid = formats[fmt].verify(this, issuerKey);\n\tif (valid)\n\t\tthis.issuerKey = issuerKey;\n\treturn (valid);\n};\n\nCertificate.prototype.signWith = function (key) {\n\tutils.assertCompatible(key, PrivateKey, [1, 2], 'key');\n\tvar fmts = Object.keys(formats);\n\tvar didOne = false;\n\tfor (var i = 0; i < fmts.length; ++i) {\n\t\tif (fmts[i] !== 'pem') {\n\t\t\tvar ret = formats[fmts[i]].sign(this, key);\n\t\t\tif (ret === true)\n\t\t\t\tdidOne = true;\n\t\t}\n\t}\n\tif (!didOne) {\n\t\tthrow (new Error('Failed to sign the certificate for any ' +\n\t\t    'available certificate formats'));\n\t}\n};\n\nCertificate.createSelfSigned = function (subjectOrSubjects, key, options) {\n\tvar subjects;\n\tif (Array.isArray(subjectOrSubjects))\n\t\tsubjects = subjectOrSubjects;\n\telse\n\t\tsubjects = [subjectOrSubjects];\n\n\tassert.arrayOfObject(subjects);\n\tsubjects.forEach(function (subject) {\n\t\tutils.assertCompatible(subject, Identity, [1, 0], 'subject');\n\t});\n\n\tutils.assertCompatible(key, PrivateKey, [1, 2], 'private key');\n\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalObject(options.validFrom, 'options.validFrom');\n\tassert.optionalObject(options.validUntil, 'options.validUntil');\n\tvar validFrom = options.validFrom;\n\tvar validUntil = options.validUntil;\n\tif (validFrom === undefined)\n\t\tvalidFrom = new Date();\n\tif (validUntil === undefined) {\n\t\tassert.optionalNumber(options.lifetime, 'options.lifetime');\n\t\tvar lifetime = options.lifetime;\n\t\tif (lifetime === undefined)\n\t\t\tlifetime = 10*365*24*3600;\n\t\tvalidUntil = new Date();\n\t\tvalidUntil.setTime(validUntil.getTime() + lifetime*1000);\n\t}\n\tassert.optionalBuffer(options.serial, 'options.serial');\n\tvar serial = options.serial;\n\tif (serial === undefined)\n\t\tserial = Buffer.from('0000000000000001', 'hex');\n\n\tvar purposes = options.purposes;\n\tif (purposes === undefined)\n\t\tpurposes = [];\n\n\tif (purposes.indexOf('signature') === -1)\n\t\tpurposes.push('signature');\n\n\t/* Self-signed certs are always CAs. */\n\tif (purposes.indexOf('ca') === -1)\n\t\tpurposes.push('ca');\n\tif (purposes.indexOf('crl') === -1)\n\t\tpurposes.push('crl');\n\n\t/*\n\t * If we weren't explicitly given any other purposes, do the sensible\n\t * thing and add some basic ones depending on the subject type.\n\t */\n\tif (purposes.length <= 3) {\n\t\tvar hostSubjects = subjects.filter(function (subject) {\n\t\t\treturn (subject.type === 'host');\n\t\t});\n\t\tvar userSubjects = subjects.filter(function (subject) {\n\t\t\treturn (subject.type === 'user');\n\t\t});\n\t\tif (hostSubjects.length > 0) {\n\t\t\tif (purposes.indexOf('serverAuth') === -1)\n\t\t\t\tpurposes.push('serverAuth');\n\t\t}\n\t\tif (userSubjects.length > 0) {\n\t\t\tif (purposes.indexOf('clientAuth') === -1)\n\t\t\t\tpurposes.push('clientAuth');\n\t\t}\n\t\tif (userSubjects.length > 0 || hostSubjects.length > 0) {\n\t\t\tif (purposes.indexOf('keyAgreement') === -1)\n\t\t\t\tpurposes.push('keyAgreement');\n\t\t\tif (key.type === 'rsa' &&\n\t\t\t    purposes.indexOf('encryption') === -1)\n\t\t\t\tpurposes.push('encryption');\n\t\t}\n\t}\n\n\tvar cert = new Certificate({\n\t\tsubjects: subjects,\n\t\tissuer: subjects[0],\n\t\tsubjectKey: key.toPublic(),\n\t\tissuerKey: key.toPublic(),\n\t\tsignatures: {},\n\t\tserial: serial,\n\t\tvalidFrom: validFrom,\n\t\tvalidUntil: validUntil,\n\t\tpurposes: purposes\n\t});\n\tcert.signWith(key);\n\n\treturn (cert);\n};\n\nCertificate.create =\n    function (subjectOrSubjects, key, issuer, issuerKey, options) {\n\tvar subjects;\n\tif (Array.isArray(subjectOrSubjects))\n\t\tsubjects = subjectOrSubjects;\n\telse\n\t\tsubjects = [subjectOrSubjects];\n\n\tassert.arrayOfObject(subjects);\n\tsubjects.forEach(function (subject) {\n\t\tutils.assertCompatible(subject, Identity, [1, 0], 'subject');\n\t});\n\n\tutils.assertCompatible(key, Key, [1, 0], 'key');\n\tif (PrivateKey.isPrivateKey(key))\n\t\tkey = key.toPublic();\n\tutils.assertCompatible(issuer, Identity, [1, 0], 'issuer');\n\tutils.assertCompatible(issuerKey, PrivateKey, [1, 2], 'issuer key');\n\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalObject(options.validFrom, 'options.validFrom');\n\tassert.optionalObject(options.validUntil, 'options.validUntil');\n\tvar validFrom = options.validFrom;\n\tvar validUntil = options.validUntil;\n\tif (validFrom === undefined)\n\t\tvalidFrom = new Date();\n\tif (validUntil === undefined) {\n\t\tassert.optionalNumber(options.lifetime, 'options.lifetime');\n\t\tvar lifetime = options.lifetime;\n\t\tif (lifetime === undefined)\n\t\t\tlifetime = 10*365*24*3600;\n\t\tvalidUntil = new Date();\n\t\tvalidUntil.setTime(validUntil.getTime() + lifetime*1000);\n\t}\n\tassert.optionalBuffer(options.serial, 'options.serial');\n\tvar serial = options.serial;\n\tif (serial === undefined)\n\t\tserial = Buffer.from('0000000000000001', 'hex');\n\n\tvar purposes = options.purposes;\n\tif (purposes === undefined)\n\t\tpurposes = [];\n\n\tif (purposes.indexOf('signature') === -1)\n\t\tpurposes.push('signature');\n\n\tif (options.ca === true) {\n\t\tif (purposes.indexOf('ca') === -1)\n\t\t\tpurposes.push('ca');\n\t\tif (purposes.indexOf('crl') === -1)\n\t\t\tpurposes.push('crl');\n\t}\n\n\tvar hostSubjects = subjects.filter(function (subject) {\n\t\treturn (subject.type === 'host');\n\t});\n\tvar userSubjects = subjects.filter(function (subject) {\n\t\treturn (subject.type === 'user');\n\t});\n\tif (hostSubjects.length > 0) {\n\t\tif (purposes.indexOf('serverAuth') === -1)\n\t\t\tpurposes.push('serverAuth');\n\t}\n\tif (userSubjects.length > 0) {\n\t\tif (purposes.indexOf('clientAuth') === -1)\n\t\t\tpurposes.push('clientAuth');\n\t}\n\tif (userSubjects.length > 0 || hostSubjects.length > 0) {\n\t\tif (purposes.indexOf('keyAgreement') === -1)\n\t\t\tpurposes.push('keyAgreement');\n\t\tif (key.type === 'rsa' &&\n\t\t    purposes.indexOf('encryption') === -1)\n\t\t\tpurposes.push('encryption');\n\t}\n\n\tvar cert = new Certificate({\n\t\tsubjects: subjects,\n\t\tissuer: issuer,\n\t\tsubjectKey: key,\n\t\tissuerKey: issuerKey.toPublic(),\n\t\tsignatures: {},\n\t\tserial: serial,\n\t\tvalidFrom: validFrom,\n\t\tvalidUntil: validUntil,\n\t\tpurposes: purposes\n\t});\n\tcert.signWith(issuerKey);\n\n\treturn (cert);\n};\n\nCertificate.parse = function (data, format, options) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (typeof (options) === 'string')\n\t\toptions = { filename: options };\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalString(options.filename, 'options.filename');\n\tif (options.filename === undefined)\n\t\toptions.filename = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data, options);\n\t\treturn (k);\n\t} catch (e) {\n\t\tthrow (new CertificateParseError(options.filename, format, e));\n\t}\n};\n\nCertificate.isCertificate = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Certificate, ver));\n};\n\n/*\n * API versions for Certificate:\n * [1,0] -- initial ver\n * [1,1] -- openssh format now unpacks extensions\n */\nCertificate.prototype._sshpkApiVersion = [1, 1];\n\nCertificate._oldVersionDetect = function (obj) {\n\treturn ([1, 0]);\n};\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = {\n\tDiffieHellman: DiffieHellman,\n\tgenerateECDSA: generateECDSA,\n\tgenerateED25519: generateED25519\n};\n\nvar assert = require('assert-plus');\nvar crypto = require('crypto');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar utils = require('./utils');\nvar nacl = require('tweetnacl');\n\nvar Key = require('./key');\nvar PrivateKey = require('./private-key');\n\nvar CRYPTO_HAVE_ECDH = (crypto.createECDH !== undefined);\n\nvar ecdh = require('ecc-jsbn');\nvar ec = require('ecc-jsbn/lib/ec');\nvar jsbn = require('jsbn').BigInteger;\n\nfunction DiffieHellman(key) {\n\tutils.assertCompatible(key, Key, [1, 4], 'key');\n\tthis._isPriv = PrivateKey.isPrivateKey(key, [1, 3]);\n\tthis._algo = key.type;\n\tthis._curve = key.curve;\n\tthis._key = key;\n\tif (key.type === 'dsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tthrow (new Error('Due to bugs in the node 0.10 ' +\n\t\t\t    'crypto API, node 0.12.x or later is required ' +\n\t\t\t    'to use DH'));\n\t\t}\n\t\tthis._dh = crypto.createDiffieHellman(\n\t\t    key.part.p.data, undefined,\n\t\t    key.part.g.data, undefined);\n\t\tthis._p = key.part.p;\n\t\tthis._g = key.part.g;\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.x.data);\n\t\tthis._dh.setPublicKey(key.part.y.data);\n\n\t} else if (key.type === 'ecdsa') {\n\t\tif (!CRYPTO_HAVE_ECDH) {\n\t\t\tthis._ecParams = new X9ECParameters(this._curve);\n\n\t\t\tif (this._isPriv) {\n\t\t\t\tthis._priv = new ECPrivate(\n\t\t\t\t    this._ecParams, key.part.d.data);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tvar curve = {\n\t\t\t'nistp256': 'prime256v1',\n\t\t\t'nistp384': 'secp384r1',\n\t\t\t'nistp521': 'secp521r1'\n\t\t}[key.curve];\n\t\tthis._dh = crypto.createECDH(curve);\n\t\tif (typeof (this._dh) !== 'object' ||\n\t\t    typeof (this._dh.setPrivateKey) !== 'function') {\n\t\t\tCRYPTO_HAVE_ECDH = false;\n\t\t\tDiffieHellman.call(this, key);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPriv)\n\t\t\tthis._dh.setPrivateKey(key.part.d.data);\n\t\tthis._dh.setPublicKey(key.part.Q.data);\n\n\t} else if (key.type === 'curve25519') {\n\t\tif (this._isPriv) {\n\t\t\tutils.assertCompatible(key, PrivateKey, [1, 5], 'key');\n\t\t\tthis._priv = key.part.k.data;\n\t\t}\n\n\t} else {\n\t\tthrow (new Error('DH not supported for ' + key.type + ' keys'));\n\t}\n}\n\nDiffieHellman.prototype.getPublicKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key.toPublic());\n\treturn (this._key);\n};\n\nDiffieHellman.prototype.getPrivateKey = function () {\n\tif (this._isPriv)\n\t\treturn (this._key);\n\telse\n\t\treturn (undefined);\n};\nDiffieHellman.prototype.getKey = DiffieHellman.prototype.getPrivateKey;\n\nDiffieHellman.prototype._keyCheck = function (pk, isPub) {\n\tassert.object(pk, 'key');\n\tif (!isPub)\n\t\tutils.assertCompatible(pk, PrivateKey, [1, 3], 'key');\n\tutils.assertCompatible(pk, Key, [1, 4], 'key');\n\n\tif (pk.type !== this._algo) {\n\t\tthrow (new Error('A ' + pk.type + ' key cannot be used in ' +\n\t\t    this._algo + ' Diffie-Hellman'));\n\t}\n\n\tif (pk.curve !== this._curve) {\n\t\tthrow (new Error('A key from the ' + pk.curve + ' curve ' +\n\t\t    'cannot be used with a ' + this._curve +\n\t\t    ' Diffie-Hellman'));\n\t}\n\n\tif (pk.type === 'dsa') {\n\t\tassert.deepEqual(pk.part.p, this._p,\n\t\t    'DSA key prime does not match');\n\t\tassert.deepEqual(pk.part.g, this._g,\n\t\t    'DSA key generator does not match');\n\t}\n};\n\nDiffieHellman.prototype.setKey = function (pk) {\n\tthis._keyCheck(pk);\n\n\tif (pk.type === 'dsa') {\n\t\tthis._dh.setPrivateKey(pk.part.x.data);\n\t\tthis._dh.setPublicKey(pk.part.y.data);\n\n\t} else if (pk.type === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.setPrivateKey(pk.part.d.data);\n\t\t\tthis._dh.setPublicKey(pk.part.Q.data);\n\t\t} else {\n\t\t\tthis._priv = new ECPrivate(\n\t\t\t    this._ecParams, pk.part.d.data);\n\t\t}\n\n\t} else if (pk.type === 'curve25519') {\n\t\tvar k = pk.part.k;\n\t\tif (!pk.part.k)\n\t\t\tk = pk.part.r;\n\t\tthis._priv = k.data;\n\t\tif (this._priv[0] === 0x00)\n\t\t\tthis._priv = this._priv.slice(1);\n\t\tthis._priv = this._priv.slice(0, 32);\n\t}\n\tthis._key = pk;\n\tthis._isPriv = true;\n};\nDiffieHellman.prototype.setPrivateKey = DiffieHellman.prototype.setKey;\n\nDiffieHellman.prototype.computeSecret = function (otherpk) {\n\tthis._keyCheck(otherpk, true);\n\tif (!this._isPriv)\n\t\tthrow (new Error('DH exchange has not been initialized with ' +\n\t\t    'a private key yet'));\n\n\tvar pub;\n\tif (this._algo === 'dsa') {\n\t\treturn (this._dh.computeSecret(\n\t\t    otherpk.part.y.data));\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\treturn (this._dh.computeSecret(\n\t\t\t    otherpk.part.Q.data));\n\t\t} else {\n\t\t\tpub = new ECPublic(\n\t\t\t    this._ecParams, otherpk.part.Q.data);\n\t\t\treturn (this._priv.deriveSharedSecret(pub));\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tpub = otherpk.part.A.data;\n\t\twhile (pub[0] === 0x00 && pub.length > 32)\n\t\t\tpub = pub.slice(1);\n\t\tvar priv = this._priv;\n\t\tassert.strictEqual(pub.length, 32);\n\t\tassert.strictEqual(priv.length, 32);\n\n\t\tvar secret = nacl.box.before(new Uint8Array(pub),\n\t\t    new Uint8Array(priv));\n\n\t\treturn (Buffer.from(secret));\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\n\nDiffieHellman.prototype.generateKey = function () {\n\tvar parts = [];\n\tvar priv, pub;\n\tif (this._algo === 'dsa') {\n\t\tthis._dh.generateKeys();\n\n\t\tparts.push({name: 'p', data: this._p.data});\n\t\tparts.push({name: 'q', data: this._key.part.q.data});\n\t\tparts.push({name: 'g', data: this._g.data});\n\t\tparts.push({name: 'y', data: this._dh.getPublicKey()});\n\t\tparts.push({name: 'x', data: this._dh.getPrivateKey()});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'dsa',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\n\t} else if (this._algo === 'ecdsa') {\n\t\tif (CRYPTO_HAVE_ECDH) {\n\t\t\tthis._dh.generateKeys();\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: Buffer.from(this._curve)});\n\t\t\tparts.push({name: 'Q', data: this._dh.getPublicKey()});\n\t\t\tparts.push({name: 'd', data: this._dh.getPrivateKey()});\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\n\t\t} else {\n\t\t\tvar n = this._ecParams.getN();\n\t\t\tvar r = new jsbn(crypto.randomBytes(n.bitLength()));\n\t\t\tvar n1 = n.subtract(jsbn.ONE);\n\t\t\tpriv = r.mod(n1).add(jsbn.ONE);\n\t\t\tpub = this._ecParams.getG().multiply(priv);\n\n\t\t\tpriv = Buffer.from(priv.toByteArray());\n\t\t\tpub = Buffer.from(this._ecParams.getCurve().\n\t\t\t    encodePointHex(pub), 'hex');\n\n\t\t\tthis._priv = new ECPrivate(this._ecParams, priv);\n\n\t\t\tparts.push({name: 'curve',\n\t\t\t    data: Buffer.from(this._curve)});\n\t\t\tparts.push({name: 'Q', data: pub});\n\t\t\tparts.push({name: 'd', data: priv});\n\n\t\t\tthis._key = new PrivateKey({\n\t\t\t\ttype: 'ecdsa',\n\t\t\t\tcurve: this._curve,\n\t\t\t\tparts: parts\n\t\t\t});\n\t\t\tthis._isPriv = true;\n\t\t\treturn (this._key);\n\t\t}\n\n\t} else if (this._algo === 'curve25519') {\n\t\tvar pair = nacl.box.keyPair();\n\t\tpriv = Buffer.from(pair.secretKey);\n\t\tpub = Buffer.from(pair.publicKey);\n\t\tpriv = Buffer.concat([priv, pub]);\n\t\tassert.strictEqual(priv.length, 64);\n\t\tassert.strictEqual(pub.length, 32);\n\n\t\tparts.push({name: 'A', data: pub});\n\t\tparts.push({name: 'k', data: priv});\n\t\tthis._key = new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: parts\n\t\t});\n\t\tthis._isPriv = true;\n\t\treturn (this._key);\n\t}\n\n\tthrow (new Error('Invalid algorithm: ' + this._algo));\n};\nDiffieHellman.prototype.generateKeys = DiffieHellman.prototype.generateKey;\n\n/* These are helpers for using ecc-jsbn (for node 0.10 compatibility). */\n\nfunction X9ECParameters(name) {\n\tvar params = algs.curves[name];\n\tassert.object(params);\n\n\tvar p = new jsbn(params.p);\n\tvar a = new jsbn(params.a);\n\tvar b = new jsbn(params.b);\n\tvar n = new jsbn(params.n);\n\tvar h = jsbn.ONE;\n\tvar curve = new ec.ECCurveFp(p, a, b);\n\tvar G = curve.decodePointHex(params.G.toString('hex'));\n\n\tthis.curve = curve;\n\tthis.g = G;\n\tthis.n = n;\n\tthis.h = h;\n}\nX9ECParameters.prototype.getCurve = function () { return (this.curve); };\nX9ECParameters.prototype.getG = function () { return (this.g); };\nX9ECParameters.prototype.getN = function () { return (this.n); };\nX9ECParameters.prototype.getH = function () { return (this.h); };\n\nfunction ECPublic(params, buffer) {\n\tthis._params = params;\n\tif (buffer[0] === 0x00)\n\t\tbuffer = buffer.slice(1);\n\tthis._pub = params.getCurve().decodePointHex(buffer.toString('hex'));\n}\n\nfunction ECPrivate(params, buffer) {\n\tthis._params = params;\n\tthis._priv = new jsbn(utils.mpNormalize(buffer));\n}\nECPrivate.prototype.deriveSharedSecret = function (pubKey) {\n\tassert.ok(pubKey instanceof ECPublic);\n\tvar S = pubKey._pub.multiply(this._priv);\n\treturn (Buffer.from(S.getX().toBigInteger().toByteArray()));\n};\n\nfunction generateED25519() {\n\tvar pair = nacl.sign.keyPair();\n\tvar priv = Buffer.from(pair.secretKey);\n\tvar pub = Buffer.from(pair.publicKey);\n\tassert.strictEqual(priv.length, 64);\n\tassert.strictEqual(pub.length, 32);\n\n\tvar parts = [];\n\tparts.push({name: 'A', data: pub});\n\tparts.push({name: 'k', data: priv.slice(0, 32)});\n\tvar key = new PrivateKey({\n\t\ttype: 'ed25519',\n\t\tparts: parts\n\t});\n\treturn (key);\n}\n\n/* Generates a new ECDSA private key on a given curve. */\nfunction generateECDSA(curve) {\n\tvar parts = [];\n\tvar key;\n\n\tif (CRYPTO_HAVE_ECDH) {\n\t\t/*\n\t\t * Node crypto doesn't expose key generation directly, but the\n\t\t * ECDH instances can generate keys. It turns out this just\n\t\t * calls into the OpenSSL generic key generator, and we can\n\t\t * read its output happily without doing an actual DH. So we\n\t\t * use that here.\n\t\t */\n\t\tvar osCurve = {\n\t\t\t'nistp256': 'prime256v1',\n\t\t\t'nistp384': 'secp384r1',\n\t\t\t'nistp521': 'secp521r1'\n\t\t}[curve];\n\n\t\tvar dh = crypto.createECDH(osCurve);\n\t\tdh.generateKeys();\n\n\t\tparts.push({name: 'curve',\n\t\t    data: Buffer.from(curve)});\n\t\tparts.push({name: 'Q', data: dh.getPublicKey()});\n\t\tparts.push({name: 'd', data: dh.getPrivateKey()});\n\n\t\tkey = new PrivateKey({\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tparts: parts\n\t\t});\n\t\treturn (key);\n\t} else {\n\n\t\tvar ecParams = new X9ECParameters(curve);\n\n\t\t/* This algorithm taken from FIPS PUB 186-4 (section B.4.1) */\n\t\tvar n = ecParams.getN();\n\t\t/*\n\t\t * The crypto.randomBytes() function can only give us whole\n\t\t * bytes, so taking a nod from X9.62, we round up.\n\t\t */\n\t\tvar cByteLen = Math.ceil((n.bitLength() + 64) / 8);\n\t\tvar c = new jsbn(crypto.randomBytes(cByteLen));\n\n\t\tvar n1 = n.subtract(jsbn.ONE);\n\t\tvar priv = c.mod(n1).add(jsbn.ONE);\n\t\tvar pub = ecParams.getG().multiply(priv);\n\n\t\tpriv = Buffer.from(priv.toByteArray());\n\t\tpub = Buffer.from(ecParams.getCurve().\n\t\t    encodePointHex(pub), 'hex');\n\n\t\tparts.push({name: 'curve', data: Buffer.from(curve)});\n\t\tparts.push({name: 'Q', data: pub});\n\t\tparts.push({name: 'd', data: priv});\n\n\t\tkey = new PrivateKey({\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tparts: parts\n\t\t});\n\t\treturn (key);\n\t}\n}\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tVerifier: Verifier,\n\tSigner: Signer\n};\n\nvar nacl = require('tweetnacl');\nvar stream = require('stream');\nvar util = require('util');\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar Signature = require('./signature');\n\nfunction Verifier(key, hashAlgo) {\n\tif (hashAlgo.toLowerCase() !== 'sha512')\n\t\tthrow (new Error('ED25519 only supports the use of ' +\n\t\t    'SHA-512 hashes'));\n\n\tthis.key = key;\n\tthis.chunks = [];\n\n\tstream.Writable.call(this, {});\n}\nutil.inherits(Verifier, stream.Writable);\n\nVerifier.prototype._write = function (chunk, enc, cb) {\n\tthis.chunks.push(chunk);\n\tcb();\n};\n\nVerifier.prototype.update = function (chunk) {\n\tif (typeof (chunk) === 'string')\n\t\tchunk = Buffer.from(chunk, 'binary');\n\tthis.chunks.push(chunk);\n};\n\nVerifier.prototype.verify = function (signature, fmt) {\n\tvar sig;\n\tif (Signature.isSignature(signature, [2, 0])) {\n\t\tif (signature.type !== 'ed25519')\n\t\t\treturn (false);\n\t\tsig = signature.toBuffer('raw');\n\n\t} else if (typeof (signature) === 'string') {\n\t\tsig = Buffer.from(signature, 'base64');\n\n\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\tthrow (new Error('signature was created by too old ' +\n\t\t    'a version of sshpk and cannot be verified'));\n\t}\n\n\tassert.buffer(sig);\n\treturn (nacl.sign.detached.verify(\n\t    new Uint8Array(Buffer.concat(this.chunks)),\n\t    new Uint8Array(sig),\n\t    new Uint8Array(this.key.part.A.data)));\n};\n\nfunction Signer(key, hashAlgo) {\n\tif (hashAlgo.toLowerCase() !== 'sha512')\n\t\tthrow (new Error('ED25519 only supports the use of ' +\n\t\t    'SHA-512 hashes'));\n\n\tthis.key = key;\n\tthis.chunks = [];\n\n\tstream.Writable.call(this, {});\n}\nutil.inherits(Signer, stream.Writable);\n\nSigner.prototype._write = function (chunk, enc, cb) {\n\tthis.chunks.push(chunk);\n\tcb();\n};\n\nSigner.prototype.update = function (chunk) {\n\tif (typeof (chunk) === 'string')\n\t\tchunk = Buffer.from(chunk, 'binary');\n\tthis.chunks.push(chunk);\n};\n\nSigner.prototype.sign = function () {\n\tvar sig = nacl.sign.detached(\n\t    new Uint8Array(Buffer.concat(this.chunks)),\n\t    new Uint8Array(Buffer.concat([\n\t\tthis.key.part.k.data, this.key.part.A.data])));\n\tvar sigBuf = Buffer.from(sig);\n\tvar sigObj = Signature.parse(sigBuf, 'ed25519', 'raw');\n\tsigObj.hashAlgorithm = 'sha512';\n\treturn (sigObj);\n};\n","// Copyright 2015 Joyent, Inc.\n\nvar assert = require('assert-plus');\nvar util = require('util');\n\nfunction FingerprintFormatError(fp, format) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, FingerprintFormatError);\n\tthis.name = 'FingerprintFormatError';\n\tthis.fingerprint = fp;\n\tthis.format = format;\n\tthis.message = 'Fingerprint format is not supported, or is invalid: ';\n\tif (fp !== undefined)\n\t\tthis.message += ' fingerprint = ' + fp;\n\tif (format !== undefined)\n\t\tthis.message += ' format = ' + format;\n}\nutil.inherits(FingerprintFormatError, Error);\n\nfunction InvalidAlgorithmError(alg) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, InvalidAlgorithmError);\n\tthis.name = 'InvalidAlgorithmError';\n\tthis.algorithm = alg;\n\tthis.message = 'Algorithm \"' + alg + '\" is not supported';\n}\nutil.inherits(InvalidAlgorithmError, Error);\n\nfunction KeyParseError(name, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, KeyParseError);\n\tthis.name = 'KeyParseError';\n\tthis.format = format;\n\tthis.keyName = name;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse ' + name + ' as a valid ' + format +\n\t    ' format key: ' + innerErr.message;\n}\nutil.inherits(KeyParseError, Error);\n\nfunction SignatureParseError(type, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, SignatureParseError);\n\tthis.name = 'SignatureParseError';\n\tthis.type = type;\n\tthis.format = format;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse the given data as a ' + type +\n\t    ' signature in ' + format + ' format: ' + innerErr.message;\n}\nutil.inherits(SignatureParseError, Error);\n\nfunction CertificateParseError(name, format, innerErr) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, CertificateParseError);\n\tthis.name = 'CertificateParseError';\n\tthis.format = format;\n\tthis.certName = name;\n\tthis.innerErr = innerErr;\n\tthis.message = 'Failed to parse ' + name + ' as a valid ' + format +\n\t    ' format certificate: ' + innerErr.message;\n}\nutil.inherits(CertificateParseError, Error);\n\nfunction KeyEncryptedError(name, format) {\n\tif (Error.captureStackTrace)\n\t\tError.captureStackTrace(this, KeyEncryptedError);\n\tthis.name = 'KeyEncryptedError';\n\tthis.format = format;\n\tthis.keyName = name;\n\tthis.message = 'The ' + format + ' format key ' + name + ' is ' +\n\t    'encrypted (password-protected), and no passphrase was ' +\n\t    'provided in `options`';\n}\nutil.inherits(KeyEncryptedError, Error);\n\nmodule.exports = {\n\tFingerprintFormatError: FingerprintFormatError,\n\tInvalidAlgorithmError: InvalidAlgorithmError,\n\tKeyParseError: KeyParseError,\n\tSignatureParseError: SignatureParseError,\n\tKeyEncryptedError: KeyEncryptedError,\n\tCertificateParseError: CertificateParseError\n};\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = Fingerprint;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar Key = require('./key');\nvar PrivateKey = require('./private-key');\nvar Certificate = require('./certificate');\nvar utils = require('./utils');\n\nvar FingerprintFormatError = errs.FingerprintFormatError;\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\n\nfunction Fingerprint(opts) {\n\tassert.object(opts, 'options');\n\tassert.string(opts.type, 'options.type');\n\tassert.buffer(opts.hash, 'options.hash');\n\tassert.string(opts.algorithm, 'options.algorithm');\n\n\tthis.algorithm = opts.algorithm.toLowerCase();\n\tif (algs.hashAlgs[this.algorithm] !== true)\n\t\tthrow (new InvalidAlgorithmError(this.algorithm));\n\n\tthis.hash = opts.hash;\n\tthis.type = opts.type;\n\tthis.hashType = opts.hashType;\n}\n\nFingerprint.prototype.toString = function (format) {\n\tif (format === undefined) {\n\t\tif (this.algorithm === 'md5' || this.hashType === 'spki')\n\t\t\tformat = 'hex';\n\t\telse\n\t\t\tformat = 'base64';\n\t}\n\tassert.string(format);\n\n\tswitch (format) {\n\tcase 'hex':\n\t\tif (this.hashType === 'spki')\n\t\t\treturn (this.hash.toString('hex'));\n\t\treturn (addColons(this.hash.toString('hex')));\n\tcase 'base64':\n\t\tif (this.hashType === 'spki')\n\t\t\treturn (this.hash.toString('base64'));\n\t\treturn (sshBase64Format(this.algorithm,\n\t\t    this.hash.toString('base64')));\n\tdefault:\n\t\tthrow (new FingerprintFormatError(undefined, format));\n\t}\n};\n\nFingerprint.prototype.matches = function (other) {\n\tassert.object(other, 'key or certificate');\n\tif (this.type === 'key' && this.hashType !== 'ssh') {\n\t\tutils.assertCompatible(other, Key, [1, 7], 'key with spki');\n\t\tif (PrivateKey.isPrivateKey(other)) {\n\t\t\tutils.assertCompatible(other, PrivateKey, [1, 6],\n\t\t\t    'privatekey with spki support');\n\t\t}\n\t} else if (this.type === 'key') {\n\t\tutils.assertCompatible(other, Key, [1, 0], 'key');\n\t} else {\n\t\tutils.assertCompatible(other, Certificate, [1, 0],\n\t\t    'certificate');\n\t}\n\n\tvar theirHash = other.hash(this.algorithm, this.hashType);\n\tvar theirHash2 = crypto.createHash(this.algorithm).\n\t    update(theirHash).digest('base64');\n\n\tif (this.hash2 === undefined)\n\t\tthis.hash2 = crypto.createHash(this.algorithm).\n\t\t    update(this.hash).digest('base64');\n\n\treturn (this.hash2 === theirHash2);\n};\n\n/*JSSTYLED*/\nvar base64RE = /^[A-Za-z0-9+\\/=]+$/;\n/*JSSTYLED*/\nvar hexRE = /^[a-fA-F0-9]+$/;\n\nFingerprint.parse = function (fp, options) {\n\tassert.string(fp, 'fingerprint');\n\n\tvar alg, hash, enAlgs;\n\tif (Array.isArray(options)) {\n\t\tenAlgs = options;\n\t\toptions = {};\n\t}\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tif (options.enAlgs !== undefined)\n\t\tenAlgs = options.enAlgs;\n\tif (options.algorithms !== undefined)\n\t\tenAlgs = options.algorithms;\n\tassert.optionalArrayOfString(enAlgs, 'algorithms');\n\n\tvar hashType = 'ssh';\n\tif (options.hashType !== undefined)\n\t\thashType = options.hashType;\n\tassert.string(hashType, 'options.hashType');\n\n\tvar parts = fp.split(':');\n\tif (parts.length == 2) {\n\t\talg = parts[0].toLowerCase();\n\t\tif (!base64RE.test(parts[1]))\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\ttry {\n\t\t\thash = Buffer.from(parts[1], 'base64');\n\t\t} catch (e) {\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\t} else if (parts.length > 2) {\n\t\talg = 'md5';\n\t\tif (parts[0].toLowerCase() === 'md5')\n\t\t\tparts = parts.slice(1);\n\t\tparts = parts.map(function (p) {\n\t\t\twhile (p.length < 2)\n\t\t\t\tp = '0' + p;\n\t\t\tif (p.length > 2)\n\t\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t\treturn (p);\n\t\t});\n\t\tparts = parts.join('');\n\t\tif (!hexRE.test(parts) || parts.length % 2 !== 0)\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\ttry {\n\t\t\thash = Buffer.from(parts, 'hex');\n\t\t} catch (e) {\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\t} else {\n\t\tif (hexRE.test(fp)) {\n\t\t\thash = Buffer.from(fp, 'hex');\n\t\t} else if (base64RE.test(fp)) {\n\t\t\thash = Buffer.from(fp, 'base64');\n\t\t} else {\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\n\t\tswitch (hash.length) {\n\t\tcase 32:\n\t\t\talg = 'sha256';\n\t\t\tbreak;\n\t\tcase 16:\n\t\t\talg = 'md5';\n\t\t\tbreak;\n\t\tcase 20:\n\t\t\talg = 'sha1';\n\t\t\tbreak;\n\t\tcase 64:\n\t\t\talg = 'sha512';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow (new FingerprintFormatError(fp));\n\t\t}\n\n\t\t/* Plain hex/base64: guess it's probably SPKI unless told. */\n\t\tif (options.hashType === undefined)\n\t\t\thashType = 'spki';\n\t}\n\n\tif (alg === undefined)\n\t\tthrow (new FingerprintFormatError(fp));\n\n\tif (algs.hashAlgs[alg] === undefined)\n\t\tthrow (new InvalidAlgorithmError(alg));\n\n\tif (enAlgs !== undefined) {\n\t\tenAlgs = enAlgs.map(function (a) { return a.toLowerCase(); });\n\t\tif (enAlgs.indexOf(alg) === -1)\n\t\t\tthrow (new InvalidAlgorithmError(alg));\n\t}\n\n\treturn (new Fingerprint({\n\t\talgorithm: alg,\n\t\thash: hash,\n\t\ttype: options.type || 'key',\n\t\thashType: hashType\n\t}));\n};\n\nfunction addColons(s) {\n\t/*JSSTYLED*/\n\treturn (s.replace(/(.{2})(?=.)/g, '$1:'));\n}\n\nfunction base64Strip(s) {\n\t/*JSSTYLED*/\n\treturn (s.replace(/=*$/, ''));\n}\n\nfunction sshBase64Format(alg, h) {\n\treturn (alg.toUpperCase() + ':' + base64Strip(h));\n}\n\nFingerprint.isFingerprint = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Fingerprint, ver));\n};\n\n/*\n * API versions for Fingerprint:\n * [1,0] -- initial ver\n * [1,1] -- first tagged ver\n * [1,2] -- hashType and spki support\n */\nFingerprint.prototype._sshpkApiVersion = [1, 2];\n\nFingerprint._oldVersionDetect = function (obj) {\n\tassert.func(obj.toString);\n\tassert.func(obj.matches);\n\treturn ([1, 0]);\n};\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pem = require('./pem');\nvar ssh = require('./ssh');\nvar rfc4253 = require('./rfc4253');\nvar dnssec = require('./dnssec');\nvar putty = require('./putty');\n\nvar DNSSEC_PRIVKEY_HEADER_PREFIX = 'Private-key-format: v1';\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tif (buf.trim().match(/^[-]+[ ]*BEGIN/))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (buf.match(/^\\s*ssh-[a-z]/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^\\s*ecdsa-/))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (buf.match(/^putty-user-key-file-2:/i))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t\tbuf = Buffer.from(buf, 'binary');\n\t} else {\n\t\tassert.buffer(buf);\n\t\tif (findPEMHeader(buf))\n\t\t\treturn (pem.read(buf, options));\n\t\tif (findSSHHeader(buf))\n\t\t\treturn (ssh.read(buf, options));\n\t\tif (findPuTTYHeader(buf))\n\t\t\treturn (putty.read(buf, options));\n\t\tif (findDNSSECHeader(buf))\n\t\t\treturn (dnssec.read(buf, options));\n\t}\n\tif (buf.readUInt32BE(0) < buf.length)\n\t\treturn (rfc4253.read(buf, options));\n\tthrow (new Error('Failed to auto-detect format of key'));\n}\n\nfunction findPuTTYHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 22 <= buf.length &&\n\t    buf.slice(offset, offset + 22).toString('ascii').toLowerCase() ===\n\t    'putty-user-key-file-2:')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findSSHHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10 || buf[offset] === 9))\n\t\t++offset;\n\tif (offset + 4 <= buf.length &&\n\t    buf.slice(offset, offset + 4).toString('ascii') === 'ssh-')\n\t\treturn (true);\n\tif (offset + 6 <= buf.length &&\n\t    buf.slice(offset, offset + 6).toString('ascii') === 'ecdsa-')\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction findPEMHeader(buf) {\n\tvar offset = 0;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32 || buf[offset] === 10))\n\t\t++offset;\n\tif (buf[offset] !== 45)\n\t\treturn (false);\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 45))\n\t\t++offset;\n\twhile (offset < buf.length &&\n\t    (buf[offset] === 32))\n\t\t++offset;\n\tif (offset + 5 > buf.length ||\n\t    buf.slice(offset, offset + 5).toString('ascii') !== 'BEGIN')\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction findDNSSECHeader(buf) {\n\t// private case first\n\tif (buf.length <= DNSSEC_PRIVKEY_HEADER_PREFIX.length)\n\t\treturn (false);\n\tvar headerCheck = buf.slice(0, DNSSEC_PRIVKEY_HEADER_PREFIX.length);\n\tif (headerCheck.toString('ascii') === DNSSEC_PRIVKEY_HEADER_PREFIX)\n\t\treturn (true);\n\n\t// public-key RFC3110 ?\n\t// 'domain.com. IN KEY ...' or 'domain.com. IN DNSKEY ...'\n\t// skip any comment-lines\n\tif (typeof (buf) !== 'string') {\n\t\tbuf = buf.toString('ascii');\n\t}\n\tvar lines = buf.split('\\n');\n\tvar line = 0;\n\t/* JSSTYLED */\n\twhile (lines[line].match(/^\\;/))\n\t\tline++;\n\tif (lines[line].toString('ascii').match(/\\. IN KEY /))\n\t\treturn (true);\n\tif (lines[line].toString('ascii').match(/\\. IN DNSKEY /))\n\t\treturn (true);\n\treturn (false);\n}\n\nfunction write(key, options) {\n\tthrow (new Error('\"auto\" format cannot be used for writing'));\n}\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar utils = require('../utils');\nvar SSHBuffer = require('../ssh-buffer');\nvar Dhe = require('../dhe');\n\nvar supportedAlgos = {\n\t'rsa-sha1' : 5,\n\t'rsa-sha256' : 8,\n\t'rsa-sha512' : 10,\n\t'ecdsa-p256-sha256' : 13,\n\t'ecdsa-p384-sha384' : 14\n\t/*\n\t * ed25519 is hypothetically supported with id 15\n\t * but the common tools available don't appear to be\n\t * capable of generating/using ed25519 keys\n\t */\n};\n\nvar supportedAlgosById = {};\nObject.keys(supportedAlgos).forEach(function (k) {\n\tsupportedAlgosById[supportedAlgos[k]] = k.toUpperCase();\n});\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\tvar lines = buf.split('\\n');\n\tif (lines[0].match(/^Private-key-format\\: v1/)) {\n\t\tvar algElems = lines[1].split(' ');\n\t\tvar algoNum = parseInt(algElems[1], 10);\n\t\tvar algoName = algElems[2];\n\t\tif (!supportedAlgosById[algoNum])\n\t\t\tthrow (new Error('Unsupported algorithm: ' + algoName));\n\t\treturn (readDNSSECPrivateKey(algoNum, lines.slice(2)));\n\t}\n\n\t// skip any comment-lines\n\tvar line = 0;\n\t/* JSSTYLED */\n\twhile (lines[line].match(/^\\;/))\n\t\tline++;\n\t// we should now have *one single* line left with our KEY on it.\n\tif ((lines[line].match(/\\. IN KEY /) ||\n\t    lines[line].match(/\\. IN DNSKEY /)) && lines[line+1].length === 0) {\n\t\treturn (readRFC3110(lines[line]));\n\t}\n\tthrow (new Error('Cannot parse dnssec key'));\n}\n\nfunction readRFC3110(keyString) {\n\tvar elems = keyString.split(' ');\n\t//unused var flags = parseInt(elems[3], 10);\n\t//unused var protocol = parseInt(elems[4], 10);\n\tvar algorithm = parseInt(elems[5], 10);\n\tif (!supportedAlgosById[algorithm])\n\t\tthrow (new Error('Unsupported algorithm: ' + algorithm));\n\tvar base64key = elems.slice(6, elems.length).join();\n\tvar keyBuffer = Buffer.from(base64key, 'base64');\n\tif (supportedAlgosById[algorithm].match(/^RSA-/)) {\n\t\t// join the rest of the body into a single base64-blob\n\t\tvar publicExponentLen = keyBuffer.readUInt8(0);\n\t\tif (publicExponentLen != 3 && publicExponentLen != 1)\n\t\t\tthrow (new Error('Cannot parse dnssec key: ' +\n\t\t\t    'unsupported exponent length'));\n\n\t\tvar publicExponent = keyBuffer.slice(1, publicExponentLen+1);\n\t\tpublicExponent = utils.mpNormalize(publicExponent);\n\t\tvar modulus = keyBuffer.slice(1+publicExponentLen);\n\t\tmodulus = utils.mpNormalize(modulus);\n\t\t// now, make the key\n\t\tvar rsaKey = {\n\t\t\ttype: 'rsa',\n\t\t\tparts: []\n\t\t};\n\t\trsaKey.parts.push({ name: 'e', data: publicExponent});\n\t\trsaKey.parts.push({ name: 'n', data: modulus});\n\t\treturn (new Key(rsaKey));\n\t}\n\tif (supportedAlgosById[algorithm] === 'ECDSA-P384-SHA384' ||\n\t    supportedAlgosById[algorithm] === 'ECDSA-P256-SHA256') {\n\t\tvar curve = 'nistp384';\n\t\tvar size = 384;\n\t\tif (supportedAlgosById[algorithm].match(/^ECDSA-P256-SHA256/)) {\n\t\t\tcurve = 'nistp256';\n\t\t\tsize = 256;\n\t\t}\n\n\t\tvar ecdsaKey = {\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tsize: size,\n\t\t\tparts: [\n\t\t\t\t{name: 'curve', data: Buffer.from(curve) },\n\t\t\t\t{name: 'Q', data: utils.ecNormalize(keyBuffer) }\n\t\t\t]\n\t\t};\n\t\treturn (new Key(ecdsaKey));\n\t}\n\tthrow (new Error('Unsupported algorithm: ' +\n\t    supportedAlgosById[algorithm]));\n}\n\nfunction elementToBuf(e) {\n\treturn (Buffer.from(e.split(' ')[1], 'base64'));\n}\n\nfunction readDNSSECRSAPrivateKey(elements) {\n\tvar rsaParams = {};\n\telements.forEach(function (element) {\n\t\tif (element.split(' ')[0] === 'Modulus:')\n\t\t\trsaParams['n'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'PublicExponent:')\n\t\t\trsaParams['e'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'PrivateExponent:')\n\t\t\trsaParams['d'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'Prime1:')\n\t\t\trsaParams['p'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'Prime2:')\n\t\t\trsaParams['q'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'Exponent1:')\n\t\t\trsaParams['dmodp'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'Exponent2:')\n\t\t\trsaParams['dmodq'] = elementToBuf(element);\n\t\telse if (element.split(' ')[0] === 'Coefficient:')\n\t\t\trsaParams['iqmp'] = elementToBuf(element);\n\t});\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'e', data: utils.mpNormalize(rsaParams['e'])},\n\t\t\t{ name: 'n', data: utils.mpNormalize(rsaParams['n'])},\n\t\t\t{ name: 'd', data: utils.mpNormalize(rsaParams['d'])},\n\t\t\t{ name: 'p', data: utils.mpNormalize(rsaParams['p'])},\n\t\t\t{ name: 'q', data: utils.mpNormalize(rsaParams['q'])},\n\t\t\t{ name: 'dmodp',\n\t\t\t    data: utils.mpNormalize(rsaParams['dmodp'])},\n\t\t\t{ name: 'dmodq',\n\t\t\t    data: utils.mpNormalize(rsaParams['dmodq'])},\n\t\t\t{ name: 'iqmp',\n\t\t\t    data: utils.mpNormalize(rsaParams['iqmp'])}\n\t\t]\n\t};\n\treturn (new PrivateKey(key));\n}\n\nfunction readDNSSECPrivateKey(alg, elements) {\n\tif (supportedAlgosById[alg].match(/^RSA-/)) {\n\t\treturn (readDNSSECRSAPrivateKey(elements));\n\t}\n\tif (supportedAlgosById[alg] === 'ECDSA-P384-SHA384' ||\n\t    supportedAlgosById[alg] === 'ECDSA-P256-SHA256') {\n\t\tvar d = Buffer.from(elements[0].split(' ')[1], 'base64');\n\t\tvar curve = 'nistp384';\n\t\tvar size = 384;\n\t\tif (supportedAlgosById[alg] === 'ECDSA-P256-SHA256') {\n\t\t\tcurve = 'nistp256';\n\t\t\tsize = 256;\n\t\t}\n\t\t// DNSSEC generates the public-key on the fly (go calculate it)\n\t\tvar publicKey = utils.publicFromPrivateECDSA(curve, d);\n\t\tvar Q = publicKey.part['Q'].data;\n\t\tvar ecdsaKey = {\n\t\t\ttype: 'ecdsa',\n\t\t\tcurve: curve,\n\t\t\tsize: size,\n\t\t\tparts: [\n\t\t\t\t{name: 'curve', data: Buffer.from(curve) },\n\t\t\t\t{name: 'd', data: d },\n\t\t\t\t{name: 'Q', data: Q }\n\t\t\t]\n\t\t};\n\t\treturn (new PrivateKey(ecdsaKey));\n\t}\n\tthrow (new Error('Unsupported algorithm: ' + supportedAlgosById[alg]));\n}\n\nfunction dnssecTimestamp(date) {\n\tvar year = date.getFullYear() + ''; //stringify\n\tvar month = (date.getMonth() + 1);\n\tvar timestampStr = year + month + date.getUTCDate();\n\ttimestampStr += '' + date.getUTCHours() + date.getUTCMinutes();\n\ttimestampStr += date.getUTCSeconds();\n\treturn (timestampStr);\n}\n\nfunction rsaAlgFromOptions(opts) {\n\tif (!opts || !opts.hashAlgo || opts.hashAlgo === 'sha1')\n\t\treturn ('5 (RSASHA1)');\n\telse if (opts.hashAlgo === 'sha256')\n\t\treturn ('8 (RSASHA256)');\n\telse if (opts.hashAlgo === 'sha512')\n\t\treturn ('10 (RSASHA512)');\n\telse\n\t\tthrow (new Error('Unknown or unsupported hash: ' +\n\t\t    opts.hashAlgo));\n}\n\nfunction writeRSA(key, options) {\n\t// if we're missing parts, add them.\n\tif (!key.part.dmodp || !key.part.dmodq) {\n\t\tutils.addRSAMissing(key);\n\t}\n\n\tvar out = '';\n\tout += 'Private-key-format: v1.3\\n';\n\tout += 'Algorithm: ' + rsaAlgFromOptions(options) + '\\n';\n\tvar n = utils.mpDenormalize(key.part['n'].data);\n\tout += 'Modulus: ' + n.toString('base64') + '\\n';\n\tvar e = utils.mpDenormalize(key.part['e'].data);\n\tout += 'PublicExponent: ' + e.toString('base64') + '\\n';\n\tvar d = utils.mpDenormalize(key.part['d'].data);\n\tout += 'PrivateExponent: ' + d.toString('base64') + '\\n';\n\tvar p = utils.mpDenormalize(key.part['p'].data);\n\tout += 'Prime1: ' + p.toString('base64') + '\\n';\n\tvar q = utils.mpDenormalize(key.part['q'].data);\n\tout += 'Prime2: ' + q.toString('base64') + '\\n';\n\tvar dmodp = utils.mpDenormalize(key.part['dmodp'].data);\n\tout += 'Exponent1: ' + dmodp.toString('base64') + '\\n';\n\tvar dmodq = utils.mpDenormalize(key.part['dmodq'].data);\n\tout += 'Exponent2: ' + dmodq.toString('base64') + '\\n';\n\tvar iqmp = utils.mpDenormalize(key.part['iqmp'].data);\n\tout += 'Coefficient: ' + iqmp.toString('base64') + '\\n';\n\t// Assume that we're valid as-of now\n\tvar timestamp = new Date();\n\tout += 'Created: ' + dnssecTimestamp(timestamp) + '\\n';\n\tout += 'Publish: ' + dnssecTimestamp(timestamp) + '\\n';\n\tout += 'Activate: ' + dnssecTimestamp(timestamp) + '\\n';\n\treturn (Buffer.from(out, 'ascii'));\n}\n\nfunction writeECDSA(key, options) {\n\tvar out = '';\n\tout += 'Private-key-format: v1.3\\n';\n\n\tif (key.curve === 'nistp256') {\n\t\tout += 'Algorithm: 13 (ECDSAP256SHA256)\\n';\n\t} else if (key.curve === 'nistp384') {\n\t\tout += 'Algorithm: 14 (ECDSAP384SHA384)\\n';\n\t} else {\n\t\tthrow (new Error('Unsupported curve'));\n\t}\n\tvar base64Key = key.part['d'].data.toString('base64');\n\tout += 'PrivateKey: ' + base64Key + '\\n';\n\n\t// Assume that we're valid as-of now\n\tvar timestamp = new Date();\n\tout += 'Created: ' + dnssecTimestamp(timestamp) + '\\n';\n\tout += 'Publish: ' + dnssecTimestamp(timestamp) + '\\n';\n\tout += 'Activate: ' + dnssecTimestamp(timestamp) + '\\n';\n\n\treturn (Buffer.from(out, 'ascii'));\n}\n\nfunction write(key, options) {\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tif (key.type === 'rsa') {\n\t\t\treturn (writeRSA(key, options));\n\t\t} else if (key.type === 'ecdsa') {\n\t\t\treturn (writeECDSA(key, options));\n\t\t} else {\n\t\t\tthrow (new Error('Unsupported algorithm: ' + key.type));\n\t\t}\n\t} else if (Key.isKey(key)) {\n\t\t/*\n\t\t * RFC3110 requires a keyname, and a keytype, which we\n\t\t * don't really have a mechanism for specifying such\n\t\t * additional metadata.\n\t\t */\n\t\tthrow (new Error('Format \"dnssec\" only supports ' +\n\t\t    'writing private keys'));\n\t} else {\n\t\tthrow (new Error('key is not a Key or PrivateKey'));\n\t}\n}\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\tverify: verify,\n\tsign: sign,\n\tsignAsync: signAsync,\n\twrite: write,\n\n\t/* Internal private API */\n\tfromBuffer: fromBuffer,\n\ttoBuffer: toBuffer\n};\n\nvar assert = require('assert-plus');\nvar SSHBuffer = require('../ssh-buffer');\nvar crypto = require('crypto');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar Identity = require('../identity');\nvar rfc4253 = require('./rfc4253');\nvar Signature = require('../signature');\nvar utils = require('../utils');\nvar Certificate = require('../certificate');\n\nfunction verify(cert, key) {\n\t/*\n\t * We always give an issuerKey, so if our verify() is being called then\n\t * there was no signature. Return false.\n\t */\n\treturn (false);\n}\n\nvar TYPES = {\n\t'user': 1,\n\t'host': 2\n};\nObject.keys(TYPES).forEach(function (k) { TYPES[TYPES[k]] = k; });\n\nvar ECDSA_ALGO = /^ecdsa-sha2-([^@-]+)-cert-v01@openssh.com$/;\n\nfunction read(buf, options) {\n\tif (Buffer.isBuffer(buf))\n\t\tbuf = buf.toString('ascii');\n\tvar parts = buf.trim().split(/[ \\t\\n]+/g);\n\tif (parts.length < 2 || parts.length > 3)\n\t\tthrow (new Error('Not a valid SSH certificate line'));\n\n\tvar algo = parts[0];\n\tvar data = parts[1];\n\n\tdata = Buffer.from(data, 'base64');\n\treturn (fromBuffer(data, algo));\n}\n\nfunction fromBuffer(data, algo, partial) {\n\tvar sshbuf = new SSHBuffer({ buffer: data });\n\tvar innerAlgo = sshbuf.readString();\n\tif (algo !== undefined && innerAlgo !== algo)\n\t\tthrow (new Error('SSH certificate algorithm mismatch'));\n\tif (algo === undefined)\n\t\talgo = innerAlgo;\n\n\tvar cert = {};\n\tcert.signatures = {};\n\tcert.signatures.openssh = {};\n\n\tcert.signatures.openssh.nonce = sshbuf.readBuffer();\n\n\tvar key = {};\n\tvar parts = (key.parts = []);\n\tkey.type = getAlg(algo);\n\n\tvar partCount = algs.info[key.type].parts.length;\n\twhile (parts.length < partCount)\n\t\tparts.push(sshbuf.readPart());\n\tassert.ok(parts.length >= 1, 'key must have at least one part');\n\n\tvar algInfo = algs.info[key.type];\n\tif (key.type === 'ecdsa') {\n\t\tvar res = ECDSA_ALGO.exec(algo);\n\t\tassert.ok(res !== null);\n\t\tassert.strictEqual(res[1], parts[0].data.toString());\n\t}\n\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tparts[i].name = algInfo.parts[i];\n\t\tif (parts[i].name !== 'curve' &&\n\t\t    algInfo.normalize !== false) {\n\t\t\tvar p = parts[i];\n\t\t\tp.data = utils.mpNormalize(p.data);\n\t\t}\n\t}\n\n\tcert.subjectKey = new Key(key);\n\n\tcert.serial = sshbuf.readInt64();\n\n\tvar type = TYPES[sshbuf.readInt()];\n\tassert.string(type, 'valid cert type');\n\n\tcert.signatures.openssh.keyId = sshbuf.readString();\n\n\tvar principals = [];\n\tvar pbuf = sshbuf.readBuffer();\n\tvar psshbuf = new SSHBuffer({ buffer: pbuf });\n\twhile (!psshbuf.atEnd())\n\t\tprincipals.push(psshbuf.readString());\n\tif (principals.length === 0)\n\t\tprincipals = ['*'];\n\n\tcert.subjects = principals.map(function (pr) {\n\t\tif (type === 'user')\n\t\t\treturn (Identity.forUser(pr));\n\t\telse if (type === 'host')\n\t\t\treturn (Identity.forHost(pr));\n\t\tthrow (new Error('Unknown identity type ' + type));\n\t});\n\n\tcert.validFrom = int64ToDate(sshbuf.readInt64());\n\tcert.validUntil = int64ToDate(sshbuf.readInt64());\n\n\tvar exts = [];\n\tvar extbuf = new SSHBuffer({ buffer: sshbuf.readBuffer() });\n\tvar ext;\n\twhile (!extbuf.atEnd()) {\n\t\text = { critical: true };\n\t\text.name = extbuf.readString();\n\t\text.data = extbuf.readBuffer();\n\t\texts.push(ext);\n\t}\n\textbuf = new SSHBuffer({ buffer: sshbuf.readBuffer() });\n\twhile (!extbuf.atEnd()) {\n\t\text = { critical: false };\n\t\text.name = extbuf.readString();\n\t\text.data = extbuf.readBuffer();\n\t\texts.push(ext);\n\t}\n\tcert.signatures.openssh.exts = exts;\n\n\t/* reserved */\n\tsshbuf.readBuffer();\n\n\tvar signingKeyBuf = sshbuf.readBuffer();\n\tcert.issuerKey = rfc4253.read(signingKeyBuf);\n\n\t/*\n\t * OpenSSH certs don't give the identity of the issuer, just their\n\t * public key. So, we use an Identity that matches anything. The\n\t * isSignedBy() function will later tell you if the key matches.\n\t */\n\tcert.issuer = Identity.forHost('**');\n\n\tvar sigBuf = sshbuf.readBuffer();\n\tcert.signatures.openssh.signature =\n\t    Signature.parse(sigBuf, cert.issuerKey.type, 'ssh');\n\n\tif (partial !== undefined) {\n\t\tpartial.remainder = sshbuf.remainder();\n\t\tpartial.consumed = sshbuf._offset;\n\t}\n\n\treturn (new Certificate(cert));\n}\n\nfunction int64ToDate(buf) {\n\tvar i = buf.readUInt32BE(0) * 4294967296;\n\ti += buf.readUInt32BE(4);\n\tvar d = new Date();\n\td.setTime(i * 1000);\n\td.sourceInt64 = buf;\n\treturn (d);\n}\n\nfunction dateToInt64(date) {\n\tif (date.sourceInt64 !== undefined)\n\t\treturn (date.sourceInt64);\n\tvar i = Math.round(date.getTime() / 1000);\n\tvar upper = Math.floor(i / 4294967296);\n\tvar lower = Math.floor(i % 4294967296);\n\tvar buf = Buffer.alloc(8);\n\tbuf.writeUInt32BE(upper, 0);\n\tbuf.writeUInt32BE(lower, 4);\n\treturn (buf);\n}\n\nfunction sign(cert, key) {\n\tif (cert.signatures.openssh === undefined)\n\t\tcert.signatures.openssh = {};\n\ttry {\n\t\tvar blob = toBuffer(cert, true);\n\t} catch (e) {\n\t\tdelete (cert.signatures.openssh);\n\t\treturn (false);\n\t}\n\tvar sig = cert.signatures.openssh;\n\tvar hashAlgo = undefined;\n\tif (key.type === 'rsa' || key.type === 'dsa')\n\t\thashAlgo = 'sha1';\n\tvar signer = key.createSign(hashAlgo);\n\tsigner.write(blob);\n\tsig.signature = signer.sign();\n\treturn (true);\n}\n\nfunction signAsync(cert, signer, done) {\n\tif (cert.signatures.openssh === undefined)\n\t\tcert.signatures.openssh = {};\n\ttry {\n\t\tvar blob = toBuffer(cert, true);\n\t} catch (e) {\n\t\tdelete (cert.signatures.openssh);\n\t\tdone(e);\n\t\treturn;\n\t}\n\tvar sig = cert.signatures.openssh;\n\n\tsigner(blob, function (err, signature) {\n\t\tif (err) {\n\t\t\tdone(err);\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\t/*\n\t\t\t * This will throw if the signature isn't of a\n\t\t\t * type/algo that can be used for SSH.\n\t\t\t */\n\t\t\tsignature.toBuffer('ssh');\n\t\t} catch (e) {\n\t\t\tdone(e);\n\t\t\treturn;\n\t\t}\n\t\tsig.signature = signature;\n\t\tdone();\n\t});\n}\n\nfunction write(cert, options) {\n\tif (options === undefined)\n\t\toptions = {};\n\n\tvar blob = toBuffer(cert);\n\tvar out = getCertType(cert.subjectKey) + ' ' + blob.toString('base64');\n\tif (options.comment)\n\t\tout = out + ' ' + options.comment;\n\treturn (out);\n}\n\n\nfunction toBuffer(cert, noSig) {\n\tassert.object(cert.signatures.openssh, 'signature for openssh format');\n\tvar sig = cert.signatures.openssh;\n\n\tif (sig.nonce === undefined)\n\t\tsig.nonce = crypto.randomBytes(16);\n\tvar buf = new SSHBuffer({});\n\tbuf.writeString(getCertType(cert.subjectKey));\n\tbuf.writeBuffer(sig.nonce);\n\n\tvar key = cert.subjectKey;\n\tvar algInfo = algs.info[key.type];\n\talgInfo.parts.forEach(function (part) {\n\t\tbuf.writePart(key.part[part]);\n\t});\n\n\tbuf.writeInt64(cert.serial);\n\n\tvar type = cert.subjects[0].type;\n\tassert.notStrictEqual(type, 'unknown');\n\tcert.subjects.forEach(function (id) {\n\t\tassert.strictEqual(id.type, type);\n\t});\n\ttype = TYPES[type];\n\tbuf.writeInt(type);\n\n\tif (sig.keyId === undefined) {\n\t\tsig.keyId = cert.subjects[0].type + '_' +\n\t\t    (cert.subjects[0].uid || cert.subjects[0].hostname);\n\t}\n\tbuf.writeString(sig.keyId);\n\n\tvar sub = new SSHBuffer({});\n\tcert.subjects.forEach(function (id) {\n\t\tif (type === TYPES.host)\n\t\t\tsub.writeString(id.hostname);\n\t\telse if (type === TYPES.user)\n\t\t\tsub.writeString(id.uid);\n\t});\n\tbuf.writeBuffer(sub.toBuffer());\n\n\tbuf.writeInt64(dateToInt64(cert.validFrom));\n\tbuf.writeInt64(dateToInt64(cert.validUntil));\n\n\tvar exts = sig.exts;\n\tif (exts === undefined)\n\t\texts = [];\n\n\tvar extbuf = new SSHBuffer({});\n\texts.forEach(function (ext) {\n\t\tif (ext.critical !== true)\n\t\t\treturn;\n\t\textbuf.writeString(ext.name);\n\t\textbuf.writeBuffer(ext.data);\n\t});\n\tbuf.writeBuffer(extbuf.toBuffer());\n\n\textbuf = new SSHBuffer({});\n\texts.forEach(function (ext) {\n\t\tif (ext.critical === true)\n\t\t\treturn;\n\t\textbuf.writeString(ext.name);\n\t\textbuf.writeBuffer(ext.data);\n\t});\n\tbuf.writeBuffer(extbuf.toBuffer());\n\n\t/* reserved */\n\tbuf.writeBuffer(Buffer.alloc(0));\n\n\tsub = rfc4253.write(cert.issuerKey);\n\tbuf.writeBuffer(sub);\n\n\tif (!noSig)\n\t\tbuf.writeBuffer(sig.signature.toBuffer('ssh'));\n\n\treturn (buf.toBuffer());\n}\n\nfunction getAlg(certType) {\n\tif (certType === 'ssh-rsa-cert-v01@openssh.com')\n\t\treturn ('rsa');\n\tif (certType === 'ssh-dss-cert-v01@openssh.com')\n\t\treturn ('dsa');\n\tif (certType.match(ECDSA_ALGO))\n\t\treturn ('ecdsa');\n\tif (certType === 'ssh-ed25519-cert-v01@openssh.com')\n\t\treturn ('ed25519');\n\tthrow (new Error('Unsupported cert type ' + certType));\n}\n\nfunction getCertType(key) {\n\tif (key.type === 'rsa')\n\t\treturn ('ssh-rsa-cert-v01@openssh.com');\n\tif (key.type === 'dsa')\n\t\treturn ('ssh-dss-cert-v01@openssh.com');\n\tif (key.type === 'ecdsa')\n\t\treturn ('ecdsa-sha2-' + key.curve + '-cert-v01@openssh.com');\n\tif (key.type === 'ed25519')\n\t\treturn ('ssh-ed25519-cert-v01@openssh.com');\n\tthrow (new Error('Unsupported key type ' + key.type));\n}\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar crypto = require('crypto');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar pkcs1 = require('./pkcs1');\nvar pkcs8 = require('./pkcs8');\nvar sshpriv = require('./ssh-private');\nvar rfc4253 = require('./rfc4253');\n\nvar errors = require('../errors');\n\nvar OID_PBES2 = '1.2.840.113549.1.5.13';\nvar OID_PBKDF2 = '1.2.840.113549.1.5.12';\n\nvar OID_TO_CIPHER = {\n\t'1.2.840.113549.3.7': '3des-cbc',\n\t'2.16.840.1.101.3.4.1.2': 'aes128-cbc',\n\t'2.16.840.1.101.3.4.1.42': 'aes256-cbc'\n};\nvar CIPHER_TO_OID = {};\nObject.keys(OID_TO_CIPHER).forEach(function (k) {\n\tCIPHER_TO_OID[OID_TO_CIPHER[k]] = k;\n});\n\nvar OID_TO_HASH = {\n\t'1.2.840.113549.2.7': 'sha1',\n\t'1.2.840.113549.2.9': 'sha256',\n\t'1.2.840.113549.2.11': 'sha512'\n};\nvar HASH_TO_OID = {};\nObject.keys(OID_TO_HASH).forEach(function (k) {\n\tHASH_TO_OID[OID_TO_HASH[k]] = k;\n});\n\n/*\n * For reading we support both PKCS#1 and PKCS#8. If we find a private key,\n * we just take the public component of it and use that.\n */\nfunction read(buf, options, forceType) {\n\tvar input = buf;\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m;\n\tvar si = -1;\n\twhile (!m && si < lines.length) {\n\t\tm = lines[++si].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*BEGIN ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/);\n\t}\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2;\n\tvar ei = lines.length;\n\twhile (!m2 && ei > 0) {\n\t\tm2 = lines[--ei].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*END ([A-Z0-9][A-Za-z0-9]+ )?(PUBLIC|PRIVATE) KEY[ ]*[-]+/);\n\t}\n\tassert.ok(m2, 'invalid PEM footer');\n\n\t/* Begin and end banners must match key type */\n\tassert.equal(m[2], m2[2]);\n\tvar type = m[2].toLowerCase();\n\n\tvar alg;\n\tif (m[1]) {\n\t\t/* They also must match algorithms, if given */\n\t\tassert.equal(m[1], m2[1], 'PEM header and footer mismatch');\n\t\talg = m[1].trim();\n\t}\n\n\tlines = lines.slice(si, ei + 1);\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = Buffer.from(lines, 'base64');\n\n\tvar cipher, key, iv;\n\tif (headers['proc-type']) {\n\t\tvar parts = headers['proc-type'].split(',');\n\t\tif (parts[0] === '4' && parts[1] === 'ENCRYPTED') {\n\t\t\tif (typeof (options.passphrase) === 'string') {\n\t\t\t\toptions.passphrase = Buffer.from(\n\t\t\t\t    options.passphrase, 'utf-8');\n\t\t\t}\n\t\t\tif (!Buffer.isBuffer(options.passphrase)) {\n\t\t\t\tthrow (new errors.KeyEncryptedError(\n\t\t\t\t    options.filename, 'PEM'));\n\t\t\t} else {\n\t\t\t\tparts = headers['dek-info'].split(',');\n\t\t\t\tassert.ok(parts.length === 2);\n\t\t\t\tcipher = parts[0].toLowerCase();\n\t\t\t\tiv = Buffer.from(parts[1], 'hex');\n\t\t\t\tkey = utils.opensslKeyDeriv(cipher, iv,\n\t\t\t\t    options.passphrase, 1).key;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (alg && alg.toLowerCase() === 'encrypted') {\n\t\tvar eder = new asn1.BerReader(buf);\n\t\tvar pbesEnd;\n\t\teder.readSequence();\n\n\t\teder.readSequence();\n\t\tpbesEnd = eder.offset + eder.length;\n\n\t\tvar method = eder.readOID();\n\t\tif (method !== OID_PBES2) {\n\t\t\tthrow (new Error('Unsupported PEM/PKCS8 encryption ' +\n\t\t\t    'scheme: ' + method));\n\t\t}\n\n\t\teder.readSequence();\t/* PBES2-params */\n\n\t\teder.readSequence();\t/* keyDerivationFunc */\n\t\tvar kdfEnd = eder.offset + eder.length;\n\t\tvar kdfOid = eder.readOID();\n\t\tif (kdfOid !== OID_PBKDF2)\n\t\t\tthrow (new Error('Unsupported PBES2 KDF: ' + kdfOid));\n\t\teder.readSequence();\n\t\tvar salt = eder.readString(asn1.Ber.OctetString, true);\n\t\tvar iterations = eder.readInt();\n\t\tvar hashAlg = 'sha1';\n\t\tif (eder.offset < kdfEnd) {\n\t\t\teder.readSequence();\n\t\t\tvar hashAlgOid = eder.readOID();\n\t\t\thashAlg = OID_TO_HASH[hashAlgOid];\n\t\t\tif (hashAlg === undefined) {\n\t\t\t\tthrow (new Error('Unsupported PBKDF2 hash: ' +\n\t\t\t\t    hashAlgOid));\n\t\t\t}\n\t\t}\n\t\teder._offset = kdfEnd;\n\n\t\teder.readSequence();\t/* encryptionScheme */\n\t\tvar cipherOid = eder.readOID();\n\t\tcipher = OID_TO_CIPHER[cipherOid];\n\t\tif (cipher === undefined) {\n\t\t\tthrow (new Error('Unsupported PBES2 cipher: ' +\n\t\t\t    cipherOid));\n\t\t}\n\t\tiv = eder.readString(asn1.Ber.OctetString, true);\n\n\t\teder._offset = pbesEnd;\n\t\tbuf = eder.readString(asn1.Ber.OctetString, true);\n\n\t\tif (typeof (options.passphrase) === 'string') {\n\t\t\toptions.passphrase = Buffer.from(\n\t\t\t    options.passphrase, 'utf-8');\n\t\t}\n\t\tif (!Buffer.isBuffer(options.passphrase)) {\n\t\t\tthrow (new errors.KeyEncryptedError(\n\t\t\t    options.filename, 'PEM'));\n\t\t}\n\n\t\tvar cinfo = utils.opensshCipherInfo(cipher);\n\n\t\tcipher = cinfo.opensslName;\n\t\tkey = utils.pbkdf2(hashAlg, salt, iterations, cinfo.keySize,\n\t\t    options.passphrase);\n\t\talg = undefined;\n\t}\n\n\tif (cipher && key && iv) {\n\t\tvar cipherStream = crypto.createDecipheriv(cipher, key, iv);\n\t\tvar chunk, chunks = [];\n\t\tcipherStream.once('error', function (e) {\n\t\t\tif (e.toString().indexOf('bad decrypt') !== -1) {\n\t\t\t\tthrow (new Error('Incorrect passphrase ' +\n\t\t\t\t    'supplied, could not decrypt key'));\n\t\t\t}\n\t\t\tthrow (e);\n\t\t});\n\t\tcipherStream.write(buf);\n\t\tcipherStream.end();\n\t\twhile ((chunk = cipherStream.read()) !== null)\n\t\t\tchunks.push(chunk);\n\t\tbuf = Buffer.concat(chunks);\n\t}\n\n\t/* The new OpenSSH internal format abuses PEM headers */\n\tif (alg && alg.toLowerCase() === 'openssh')\n\t\treturn (sshpriv.readSSHPrivate(type, buf, options));\n\tif (alg && alg.toLowerCase() === 'ssh2')\n\t\treturn (rfc4253.readType(type, buf, options));\n\n\tvar der = new asn1.BerReader(buf);\n\tder.originalInput = input;\n\n\t/*\n\t * All of the PEM file types start with a sequence tag, so chop it\n\t * off here\n\t */\n\tder.readSequence();\n\n\t/* PKCS#1 type keys name an algorithm in the banner explicitly */\n\tif (alg) {\n\t\tif (forceType)\n\t\t\tassert.strictEqual(forceType, 'pkcs1');\n\t\treturn (pkcs1.readPkcs1(alg, type, der));\n\t} else {\n\t\tif (forceType)\n\t\t\tassert.strictEqual(forceType, 'pkcs8');\n\t\treturn (pkcs8.readPkcs8(alg, type, der));\n\t}\n}\n\nfunction write(key, options, type) {\n\tassert.object(key);\n\n\tvar alg = {\n\t    'ecdsa': 'EC',\n\t    'rsa': 'RSA',\n\t    'dsa': 'DSA',\n\t    'ed25519': 'EdDSA'\n\t}[key.type];\n\tvar header;\n\n\tvar der = new asn1.BerWriter();\n\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tif (type && type === 'pkcs8') {\n\t\t\theader = 'PRIVATE KEY';\n\t\t\tpkcs8.writePkcs8(der, key);\n\t\t} else {\n\t\t\tif (type)\n\t\t\t\tassert.strictEqual(type, 'pkcs1');\n\t\t\theader = alg + ' PRIVATE KEY';\n\t\t\tpkcs1.writePkcs1(der, key);\n\t\t}\n\n\t} else if (Key.isKey(key)) {\n\t\tif (type && type === 'pkcs1') {\n\t\t\theader = alg + ' PUBLIC KEY';\n\t\t\tpkcs1.writePkcs1(der, key);\n\t\t} else {\n\t\t\tif (type)\n\t\t\t\tassert.strictEqual(type, 'pkcs8');\n\t\t\theader = 'PUBLIC KEY';\n\t\t\tpkcs8.writePkcs8(der, key);\n\t\t}\n\n\t} else {\n\t\tthrow (new Error('key is not a Key or PrivateKey'));\n\t}\n\n\tvar tmp = der.buffer.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = Buffer.alloc(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs1: readPkcs1,\n\twrite: write,\n\twritePkcs1: writePkcs1\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\n\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nvar pkcs8 = require('./pkcs8');\nvar readECDSACurve = pkcs8.readECDSACurve;\n\nfunction read(buf, options) {\n\treturn (pem.read(buf, options, 'pkcs1'));\n}\n\nfunction write(key, options) {\n\treturn (pem.write(key, options, 'pkcs1'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs1(alg, type, der) {\n\tswitch (alg) {\n\tcase 'RSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1RSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1RSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'DSA':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs1DSAPublic(der));\n\t\telse if (type === 'private')\n\t\t\treturn (readPkcs1DSAPrivate(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'EC':\n\tcase 'ECDSA':\n\t\tif (type === 'private')\n\t\t\treturn (readPkcs1ECDSAPrivate(der));\n\t\telse if (type === 'public')\n\t\t\treturn (readPkcs1ECDSAPublic(der));\n\t\tthrow (new Error('Unknown key type: ' + type));\n\tcase 'EDDSA':\n\tcase 'EdDSA':\n\t\tif (type === 'private')\n\t\t\treturn (readPkcs1EdDSAPrivate(der));\n\t\tthrow (new Error(type + ' keys not supported with EdDSA'));\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + alg));\n\t}\n}\n\nfunction readPkcs1RSAPublic(der) {\n\t// modulus and exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1RSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version[0], 0);\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 0);\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\tvar y = readMPInt(der, 'y');\n\tvar x = readMPInt(der, 'x');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1EdDSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 1);\n\n\t// private key\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\n\tder.readSequence(0xa0);\n\tvar oid = der.readOID();\n\tassert.strictEqual(oid, '1.3.101.112', 'the ed25519 curve identifier');\n\n\tder.readSequence(0xa1);\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: k }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs1DSAPublic(der) {\n\tvar y = readMPInt(der, 'y');\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPublic(der) {\n\tder.readSequence();\n\n\tvar oid = der.readOID();\n\tassert.strictEqual(oid, '1.2.840.10045.2.1', 'must be ecPublicKey');\n\n\tvar curveOid = der.readOID();\n\n\tvar curve;\n\tvar curves = Object.keys(algs.curves);\n\tfor (var j = 0; j < curves.length; ++j) {\n\t\tvar c = curves[j];\n\t\tvar cd = algs.curves[c];\n\t\tif (cd.pkcs8oid === curveOid) {\n\t\t\tcurve = c;\n\t\t\tbreak;\n\t\t}\n\t}\n\tassert.string(curve, 'a known ECDSA named curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curve) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs1ECDSAPrivate(der) {\n\tvar version = readMPInt(der, 'version');\n\tassert.strictEqual(version.readUInt8(0), 1);\n\n\t// private key\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\n\tder.readSequence(0xa0);\n\tvar curve = readECDSACurve(der);\n\tassert.string(curve, 'a known elliptic curve');\n\n\tder.readSequence(0xa1);\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curve) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction writePkcs1(der, key) {\n\tder.startSequence();\n\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1RSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1RSAPublic(der, key);\n\t\tbreak;\n\tcase 'dsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1DSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1DSAPublic(der, key);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1ECDSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1ECDSAPublic(der, key);\n\t\tbreak;\n\tcase 'ed25519':\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs1EdDSAPrivate(der, key);\n\t\telse\n\t\t\twritePkcs1EdDSAPublic(der, key);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unknown key algo: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs1RSAPublic(der, key) {\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1RSAPrivate(der, key) {\n\tvar ver = Buffer.from([0]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPrivate(der, key) {\n\tvar ver = Buffer.from([0]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1DSAPublic(der, key) {\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n}\n\nfunction writePkcs1ECDSAPublic(der, key) {\n\tder.startSequence();\n\n\tder.writeOID('1.2.840.10045.2.1'); /* ecPublicKey */\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs1ECDSAPrivate(der, key) {\n\tvar ver = Buffer.from([1]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa0);\n\tvar curve = key.part.curve.data.toString();\n\tvar curveOid = algs.curves[curve].pkcs8oid;\n\tassert.string(curveOid, 'a known ECDSA named curve');\n\tder.writeOID(curveOid);\n\tder.endSequence();\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n}\n\nfunction writePkcs1EdDSAPrivate(der, key) {\n\tvar ver = Buffer.from([1]);\n\tder.writeBuffer(ver, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.k.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa0);\n\tder.writeOID('1.3.101.112');\n\tder.endSequence();\n\n\tder.startSequence(0xa1);\n\tutils.writeBitString(der, key.part.A.data);\n\tder.endSequence();\n}\n\nfunction writePkcs1EdDSAPublic(der, key) {\n\tthrow (new Error('Public keys are not supported for EdDSA PKCS#1'));\n}\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadPkcs8: readPkcs8,\n\twrite: write,\n\twritePkcs8: writePkcs8,\n\tpkcs8ToBuffer: pkcs8ToBuffer,\n\n\treadECDSACurve: readECDSACurve,\n\twriteECDSACurve: writeECDSACurve\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\n\nfunction read(buf, options) {\n\treturn (pem.read(buf, options, 'pkcs8'));\n}\n\nfunction write(key, options) {\n\treturn (pem.write(key, options, 'pkcs8'));\n}\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction readPkcs8(alg, type, der) {\n\t/* Private keys in pkcs#8 format have a weird extra int */\n\tif (der.peek() === asn1.Ber.Integer) {\n\t\tassert.strictEqual(type, 'private',\n\t\t    'unexpected Integer at start of public key');\n\t\tder.readString(asn1.Ber.Integer, true);\n\t}\n\n\tder.readSequence();\n\tvar next = der.offset + der.length;\n\n\tvar oid = der.readOID();\n\tswitch (oid) {\n\tcase '1.2.840.113549.1.1.1':\n\t\tder._offset = next;\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8RSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8RSAPrivate(der));\n\tcase '1.2.840.10040.4.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8DSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8DSAPrivate(der));\n\tcase '1.2.840.10045.2.1':\n\t\tif (type === 'public')\n\t\t\treturn (readPkcs8ECDSAPublic(der));\n\t\telse\n\t\t\treturn (readPkcs8ECDSAPrivate(der));\n\tcase '1.3.101.112':\n\t\tif (type === 'public') {\n\t\t\treturn (readPkcs8EdDSAPublic(der));\n\t\t} else {\n\t\t\treturn (readPkcs8EdDSAPrivate(der));\n\t\t}\n\tcase '1.3.101.110':\n\t\tif (type === 'public') {\n\t\t\treturn (readPkcs8X25519Public(der));\n\t\t} else {\n\t\t\treturn (readPkcs8X25519Private(der));\n\t\t}\n\tdefault:\n\t\tthrow (new Error('Unknown key type OID ' + oid));\n\t}\n}\n\nfunction readPkcs8RSAPublic(der) {\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\tder.readSequence();\n\n\t// modulus\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'exponent');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tsource: der.originalInput,\n\t\tparts: [\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'n', data: n }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8RSAPrivate(der) {\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar ver = readMPInt(der, 'version');\n\tassert.equal(ver[0], 0x0, 'unknown RSA private key version');\n\n\t// modulus then public exponent\n\tvar n = readMPInt(der, 'modulus');\n\tvar e = readMPInt(der, 'public exponent');\n\tvar d = readMPInt(der, 'private exponent');\n\tvar p = readMPInt(der, 'prime1');\n\tvar q = readMPInt(der, 'prime2');\n\tvar dmodp = readMPInt(der, 'exponent1');\n\tvar dmodq = readMPInt(der, 'exponent2');\n\tvar iqmp = readMPInt(der, 'iqmp');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'rsa',\n\t\tparts: [\n\t\t\t{ name: 'n', data: n },\n\t\t\t{ name: 'e', data: e },\n\t\t\t{ name: 'd', data: d },\n\t\t\t{ name: 'iqmp', data: iqmp },\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'dmodp', data: dmodp },\n\t\t\t{ name: 'dmodq', data: dmodq }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8DSAPublic(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\t// bit string sequence\n\tder.readSequence(asn1.Ber.BitString);\n\tder.readByte();\n\n\tvar y = readMPInt(der, 'y');\n\n\t// now, make the key\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8DSAPrivate(der) {\n\tder.readSequence();\n\n\tvar p = readMPInt(der, 'p');\n\tvar q = readMPInt(der, 'q');\n\tvar g = readMPInt(der, 'g');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar x = readMPInt(der, 'x');\n\n\t/* The pkcs#8 format does not include the public key */\n\tvar y = utils.calculateDSAPublic(g, p, x);\n\n\tvar key = {\n\t\ttype: 'dsa',\n\t\tparts: [\n\t\t\t{ name: 'p', data: p },\n\t\t\t{ name: 'q', data: q },\n\t\t\t{ name: 'g', data: g },\n\t\t\t{ name: 'y', data: y },\n\t\t\t{ name: 'x', data: x }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readECDSACurve(der) {\n\tvar curveName, curveNames;\n\tvar j, c, cd;\n\n\tif (der.peek() === asn1.Ber.OID) {\n\t\tvar oid = der.readOID();\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tif (cd.pkcs8oid === oid) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.readSequence();\n\t\tvar version = der.readString(asn1.Ber.Integer, true);\n\t\tassert.strictEqual(version[0], 1, 'ECDSA key not version 1');\n\n\t\tvar curve = {};\n\n\t\t// FieldID sequence\n\t\tder.readSequence();\n\t\tvar fieldTypeOid = der.readOID();\n\t\tassert.strictEqual(fieldTypeOid, '1.2.840.10045.1.1',\n\t\t    'ECDSA key is not from a prime-field');\n\t\tvar p = curve.p = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\t/*\n\t\t * p always starts with a 1 bit, so count the zeros to get its\n\t\t * real size.\n\t\t */\n\t\tcurve.size = p.length * 8 - utils.countZeros(p);\n\n\t\t// Curve sequence\n\t\tder.readSequence();\n\t\tcurve.a = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tcurve.b = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.OctetString, true));\n\t\tif (der.peek() === asn1.Ber.BitString)\n\t\t\tcurve.s = der.readString(asn1.Ber.BitString, true);\n\n\t\t// Combined Gx and Gy\n\t\tcurve.G = der.readString(asn1.Ber.OctetString, true);\n\t\tassert.strictEqual(curve.G[0], 0x4,\n\t\t    'uncompressed G is required');\n\n\t\tcurve.n = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tcurve.h = utils.mpNormalize(\n\t\t    der.readString(asn1.Ber.Integer, true));\n\t\tassert.strictEqual(curve.h[0], 0x1, 'a cofactor=1 curve is ' +\n\t\t    'required');\n\n\t\tcurveNames = Object.keys(algs.curves);\n\t\tvar ks = Object.keys(curve);\n\t\tfor (j = 0; j < curveNames.length; ++j) {\n\t\t\tc = curveNames[j];\n\t\t\tcd = algs.curves[c];\n\t\t\tvar equal = true;\n\t\t\tfor (var i = 0; i < ks.length; ++i) {\n\t\t\t\tvar k = ks[i];\n\t\t\t\tif (cd[k] === undefined)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (typeof (cd[k]) === 'object' &&\n\t\t\t\t    cd[k].equals !== undefined) {\n\t\t\t\t\tif (!cd[k].equals(curve[k])) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if (Buffer.isBuffer(cd[k])) {\n\t\t\t\t\tif (cd[k].toString('binary')\n\t\t\t\t\t    !== curve[k].toString('binary')) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (cd[k] !== curve[k]) {\n\t\t\t\t\t\tequal = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (equal) {\n\t\t\t\tcurveName = c;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn (curveName);\n}\n\nfunction readPkcs8ECDSAPrivate(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tder.readSequence();\n\n\tvar version = readMPInt(der, 'version');\n\tassert.equal(version[0], 1, 'unknown version of ECDSA key');\n\n\tvar d = der.readString(asn1.Ber.OctetString, true);\n\tvar Q;\n\n\tif (der.peek() == 0xa0) {\n\t\tder.readSequence(0xa0);\n\t\tder._offset += der.length;\n\t}\n\tif (der.peek() == 0xa1) {\n\t\tder.readSequence(0xa1);\n\t\tQ = der.readString(asn1.Ber.BitString, true);\n\t\tQ = utils.ecNormalize(Q);\n\t}\n\n\tif (Q === undefined) {\n\t\tvar pub = utils.publicFromPrivateECDSA(curveName, d);\n\t\tQ = pub.part.Q.data;\n\t}\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curveName) },\n\t\t\t{ name: 'Q', data: Q },\n\t\t\t{ name: 'd', data: d }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8ECDSAPublic(der) {\n\tvar curveName = readECDSACurve(der);\n\tassert.string(curveName, 'a known elliptic curve');\n\n\tvar Q = der.readString(asn1.Ber.BitString, true);\n\tQ = utils.ecNormalize(Q);\n\n\tvar key = {\n\t\ttype: 'ecdsa',\n\t\tparts: [\n\t\t\t{ name: 'curve', data: Buffer.from(curveName) },\n\t\t\t{ name: 'Q', data: Q }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8EdDSAPublic(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8X25519Public(der) {\n\tvar A = utils.readBitString(der);\n\n\tvar key = {\n\t\ttype: 'curve25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) }\n\t\t]\n\t};\n\n\treturn (new Key(key));\n}\n\nfunction readPkcs8EdDSAPrivate(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\tk = utils.zeroPadToLength(k, 32);\n\n\tvar A;\n\tif (der.peek() === asn1.Ber.BitString) {\n\t\tA = utils.readBitString(der);\n\t\tA = utils.zeroPadToLength(A, 32);\n\t} else {\n\t\tA = utils.calculateED25519Public(k);\n\t}\n\n\tvar key = {\n\t\ttype: 'ed25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: utils.zeroPadToLength(k, 32) }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction readPkcs8X25519Private(der) {\n\tif (der.peek() === 0x00)\n\t\tder.readByte();\n\n\tder.readSequence(asn1.Ber.OctetString);\n\tvar k = der.readString(asn1.Ber.OctetString, true);\n\tk = utils.zeroPadToLength(k, 32);\n\n\tvar A = utils.calculateX25519Public(k);\n\n\tvar key = {\n\t\ttype: 'curve25519',\n\t\tparts: [\n\t\t\t{ name: 'A', data: utils.zeroPadToLength(A, 32) },\n\t\t\t{ name: 'k', data: utils.zeroPadToLength(k, 32) }\n\t\t]\n\t};\n\n\treturn (new PrivateKey(key));\n}\n\nfunction pkcs8ToBuffer(key) {\n\tvar der = new asn1.BerWriter();\n\twritePkcs8(der, key);\n\treturn (der.buffer);\n}\n\nfunction writePkcs8(der, key) {\n\tder.startSequence();\n\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tvar sillyInt = Buffer.from([0]);\n\t\tder.writeBuffer(sillyInt, asn1.Ber.Integer);\n\t}\n\n\tder.startSequence();\n\tswitch (key.type) {\n\tcase 'rsa':\n\t\tder.writeOID('1.2.840.113549.1.1.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8RSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8RSAPublic(key, der);\n\t\tbreak;\n\tcase 'dsa':\n\t\tder.writeOID('1.2.840.10040.4.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8DSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8DSAPublic(key, der);\n\t\tbreak;\n\tcase 'ecdsa':\n\t\tder.writeOID('1.2.840.10045.2.1');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\twritePkcs8ECDSAPrivate(key, der);\n\t\telse\n\t\t\twritePkcs8ECDSAPublic(key, der);\n\t\tbreak;\n\tcase 'ed25519':\n\t\tder.writeOID('1.3.101.112');\n\t\tif (PrivateKey.isPrivateKey(key))\n\t\t\tthrow (new Error('Ed25519 private keys in pkcs8 ' +\n\t\t\t    'format are not supported'));\n\t\twritePkcs8EdDSAPublic(key, der);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unsupported key type: ' + key.type));\n\t}\n\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPrivate(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = Buffer.from([0]);\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.d.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tif (!key.part.dmodp || !key.part.dmodq)\n\t\tutils.addRSAMissing(key);\n\tder.writeBuffer(key.part.dmodp.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.dmodq.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.iqmp.data, asn1.Ber.Integer);\n\n\tder.endSequence();\n\tder.endSequence();\n}\n\nfunction writePkcs8RSAPublic(key, der) {\n\tder.writeNull();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\n\tder.startSequence();\n\tder.writeBuffer(key.part.n.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.e.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPrivate(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.writeBuffer(key.part.x.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writePkcs8DSAPublic(key, der) {\n\tder.startSequence();\n\tder.writeBuffer(key.part.p.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.q.data, asn1.Ber.Integer);\n\tder.writeBuffer(key.part.g.data, asn1.Ber.Integer);\n\tder.endSequence();\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.BitString);\n\tder.writeByte(0x00);\n\tder.writeBuffer(key.part.y.data, asn1.Ber.Integer);\n\tder.endSequence();\n}\n\nfunction writeECDSACurve(key, der) {\n\tvar curve = algs.curves[key.curve];\n\tif (curve.pkcs8oid) {\n\t\t/* This one has a name in pkcs#8, so just write the oid */\n\t\tder.writeOID(curve.pkcs8oid);\n\n\t} else {\n\t\t// ECParameters sequence\n\t\tder.startSequence();\n\n\t\tvar version = Buffer.from([1]);\n\t\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\t\t// FieldID sequence\n\t\tder.startSequence();\n\t\tder.writeOID('1.2.840.10045.1.1'); // prime-field\n\t\tder.writeBuffer(curve.p, asn1.Ber.Integer);\n\t\tder.endSequence();\n\n\t\t// Curve sequence\n\t\tder.startSequence();\n\t\tvar a = curve.p;\n\t\tif (a[0] === 0x0)\n\t\t\ta = a.slice(1);\n\t\tder.writeBuffer(a, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.b, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.s, asn1.Ber.BitString);\n\t\tder.endSequence();\n\n\t\tder.writeBuffer(curve.G, asn1.Ber.OctetString);\n\t\tder.writeBuffer(curve.n, asn1.Ber.Integer);\n\t\tvar h = curve.h;\n\t\tif (!h) {\n\t\t\th = Buffer.from([1]);\n\t\t}\n\t\tder.writeBuffer(h, asn1.Ber.Integer);\n\n\t\t// ECParameters\n\t\tder.endSequence();\n\t}\n}\n\nfunction writePkcs8ECDSAPublic(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n}\n\nfunction writePkcs8ECDSAPrivate(key, der) {\n\twriteECDSACurve(key, der);\n\tder.endSequence();\n\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.startSequence();\n\n\tvar version = Buffer.from([1]);\n\tder.writeBuffer(version, asn1.Ber.Integer);\n\n\tder.writeBuffer(key.part.d.data, asn1.Ber.OctetString);\n\n\tder.startSequence(0xa1);\n\tvar Q = utils.ecNormalize(key.part.Q.data, true);\n\tder.writeBuffer(Q, asn1.Ber.BitString);\n\tder.endSequence();\n\n\tder.endSequence();\n\tder.endSequence();\n}\n\nfunction writePkcs8EdDSAPublic(key, der) {\n\tder.endSequence();\n\n\tutils.writeBitString(der, key.part.A.data);\n}\n\nfunction writePkcs8EdDSAPrivate(key, der) {\n\tder.endSequence();\n\n\tvar k = utils.mpNormalize(key.part.k.data, true);\n\tder.startSequence(asn1.Ber.OctetString);\n\tder.writeBuffer(k, asn1.Ber.OctetString);\n\tder.endSequence();\n}\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar rfc4253 = require('./rfc4253');\nvar Key = require('../key');\n\nvar errors = require('../errors');\n\nfunction read(buf, options) {\n\tvar lines = buf.toString('ascii').split(/[\\r\\n]+/);\n\tvar found = false;\n\tvar parts;\n\tvar si = 0;\n\twhile (si < lines.length) {\n\t\tparts = splitHeader(lines[si++]);\n\t\tif (parts &&\n\t\t    parts[0].toLowerCase() === 'putty-user-key-file-2') {\n\t\t\tfound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!found) {\n\t\tthrow (new Error('No PuTTY format first line found'));\n\t}\n\tvar alg = parts[1];\n\n\tparts = splitHeader(lines[si++]);\n\tassert.equal(parts[0].toLowerCase(), 'encryption');\n\n\tparts = splitHeader(lines[si++]);\n\tassert.equal(parts[0].toLowerCase(), 'comment');\n\tvar comment = parts[1];\n\n\tparts = splitHeader(lines[si++]);\n\tassert.equal(parts[0].toLowerCase(), 'public-lines');\n\tvar publicLines = parseInt(parts[1], 10);\n\tif (!isFinite(publicLines) || publicLines < 0 ||\n\t    publicLines > lines.length) {\n\t\tthrow (new Error('Invalid public-lines count'));\n\t}\n\n\tvar publicBuf = Buffer.from(\n\t    lines.slice(si, si + publicLines).join(''), 'base64');\n\tvar keyType = rfc4253.algToKeyType(alg);\n\tvar key = rfc4253.read(publicBuf);\n\tif (key.type !== keyType) {\n\t\tthrow (new Error('Outer key algorithm mismatch'));\n\t}\n\tkey.comment = comment;\n\treturn (key);\n}\n\nfunction splitHeader(line) {\n\tvar idx = line.indexOf(':');\n\tif (idx === -1)\n\t\treturn (null);\n\tvar header = line.slice(0, idx);\n\t++idx;\n\twhile (line[idx] === ' ')\n\t\t++idx;\n\tvar rest = line.slice(idx);\n\treturn ([header, rest]);\n}\n\nfunction write(key, options) {\n\tassert.object(key);\n\tif (!Key.isKey(key))\n\t\tthrow (new Error('Must be a public key'));\n\n\tvar alg = rfc4253.keyTypeToAlg(key);\n\tvar buf = rfc4253.write(key);\n\tvar comment = key.comment || '';\n\n\tvar b64 = buf.toString('base64');\n\tvar lines = wrap(b64, 64);\n\n\tlines.unshift('Public-Lines: ' + lines.length);\n\tlines.unshift('Comment: ' + comment);\n\tlines.unshift('Encryption: none');\n\tlines.unshift('PuTTY-User-Key-File-2: ' + alg);\n\n\treturn (Buffer.from(lines.join('\\n') + '\\n'));\n}\n\nfunction wrap(txt, len) {\n\tvar lines = [];\n\tvar pos = 0;\n\twhile (pos < txt.length) {\n\t\tlines.push(txt.slice(pos, pos + 64));\n\t\tpos += 64;\n\t}\n\treturn (lines);\n}\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read.bind(undefined, false, undefined),\n\treadType: read.bind(undefined, false),\n\twrite: write,\n\t/* semi-private api, used by sshpk-agent */\n\treadPartial: read.bind(undefined, true),\n\n\t/* shared with ssh format */\n\treadInternal: read,\n\tkeyTypeToAlg: keyTypeToAlg,\n\talgToKeyType: algToKeyType\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar SSHBuffer = require('../ssh-buffer');\n\nfunction algToKeyType(alg) {\n\tassert.string(alg);\n\tif (alg === 'ssh-dss')\n\t\treturn ('dsa');\n\telse if (alg === 'ssh-rsa')\n\t\treturn ('rsa');\n\telse if (alg === 'ssh-ed25519')\n\t\treturn ('ed25519');\n\telse if (alg === 'ssh-curve25519')\n\t\treturn ('curve25519');\n\telse if (alg.match(/^ecdsa-sha2-/))\n\t\treturn ('ecdsa');\n\telse\n\t\tthrow (new Error('Unknown algorithm ' + alg));\n}\n\nfunction keyTypeToAlg(key) {\n\tassert.object(key);\n\tif (key.type === 'dsa')\n\t\treturn ('ssh-dss');\n\telse if (key.type === 'rsa')\n\t\treturn ('ssh-rsa');\n\telse if (key.type === 'ed25519')\n\t\treturn ('ssh-ed25519');\n\telse if (key.type === 'curve25519')\n\t\treturn ('ssh-curve25519');\n\telse if (key.type === 'ecdsa')\n\t\treturn ('ecdsa-sha2-' + key.part.curve.data.toString());\n\telse\n\t\tthrow (new Error('Unknown key type ' + key.type));\n}\n\nfunction read(partial, type, buf, options) {\n\tif (typeof (buf) === 'string')\n\t\tbuf = Buffer.from(buf);\n\tassert.buffer(buf, 'buf');\n\n\tvar key = {};\n\n\tvar parts = key.parts = [];\n\tvar sshbuf = new SSHBuffer({buffer: buf});\n\n\tvar alg = sshbuf.readString();\n\tassert.ok(!sshbuf.atEnd(), 'key must have at least one part');\n\n\tkey.type = algToKeyType(alg);\n\n\tvar partCount = algs.info[key.type].parts.length;\n\tif (type && type === 'private')\n\t\tpartCount = algs.privInfo[key.type].parts.length;\n\n\twhile (!sshbuf.atEnd() && parts.length < partCount)\n\t\tparts.push(sshbuf.readPart());\n\twhile (!partial && !sshbuf.atEnd())\n\t\tparts.push(sshbuf.readPart());\n\n\tassert.ok(parts.length >= 1,\n\t    'key must have at least one part');\n\tassert.ok(partial || sshbuf.atEnd(),\n\t    'leftover bytes at end of key');\n\n\tvar Constructor = Key;\n\tvar algInfo = algs.info[key.type];\n\tif (type === 'private' || algInfo.parts.length !== parts.length) {\n\t\talgInfo = algs.privInfo[key.type];\n\t\tConstructor = PrivateKey;\n\t}\n\tassert.strictEqual(algInfo.parts.length, parts.length);\n\n\tif (key.type === 'ecdsa') {\n\t\tvar res = /^ecdsa-sha2-(.+)$/.exec(alg);\n\t\tassert.ok(res !== null);\n\t\tassert.strictEqual(res[1], parts[0].data.toString());\n\t}\n\n\tvar normalized = true;\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = parts[i];\n\t\tp.name = algInfo.parts[i];\n\t\t/*\n\t\t * OpenSSH stores ed25519 \"private\" keys as seed + public key\n\t\t * concat'd together (k followed by A). We want to keep them\n\t\t * separate for other formats that don't do this.\n\t\t */\n\t\tif (key.type === 'ed25519' && p.name === 'k')\n\t\t\tp.data = p.data.slice(0, 32);\n\n\t\tif (p.name !== 'curve' && algInfo.normalize !== false) {\n\t\t\tvar nd;\n\t\t\tif (key.type === 'ed25519') {\n\t\t\t\tnd = utils.zeroPadToLength(p.data, 32);\n\t\t\t} else {\n\t\t\t\tnd = utils.mpNormalize(p.data);\n\t\t\t}\n\t\t\tif (nd.toString('binary') !==\n\t\t\t    p.data.toString('binary')) {\n\t\t\t\tp.data = nd;\n\t\t\t\tnormalized = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (normalized)\n\t\tkey._rfc4253Cache = sshbuf.toBuffer();\n\n\tif (partial && typeof (partial) === 'object') {\n\t\tpartial.remainder = sshbuf.remainder();\n\t\tpartial.consumed = sshbuf._offset;\n\t}\n\n\treturn (new Constructor(key));\n}\n\nfunction write(key, options) {\n\tassert.object(key);\n\n\tvar alg = keyTypeToAlg(key);\n\tvar i;\n\n\tvar algInfo = algs.info[key.type];\n\tif (PrivateKey.isPrivateKey(key))\n\t\talgInfo = algs.privInfo[key.type];\n\tvar parts = algInfo.parts;\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeString(alg);\n\n\tfor (i = 0; i < parts.length; ++i) {\n\t\tvar data = key.part[parts[i]].data;\n\t\tif (algInfo.normalize !== false) {\n\t\t\tif (key.type === 'ed25519')\n\t\t\t\tdata = utils.zeroPadToLength(data, 32);\n\t\t\telse\n\t\t\t\tdata = utils.mpNormalize(data);\n\t\t}\n\t\tif (key.type === 'ed25519' && parts[i] === 'k')\n\t\t\tdata = Buffer.concat([data, key.part.A.data]);\n\t\tbuf.writeBuffer(data);\n\t}\n\n\treturn (buf.toBuffer());\n}\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\treadSSHPrivate: readSSHPrivate,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar crypto = require('crypto');\n\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar rfc4253 = require('./rfc4253');\nvar SSHBuffer = require('../ssh-buffer');\nvar errors = require('../errors');\n\nvar bcrypt;\n\nfunction read(buf, options) {\n\treturn (pem.read(buf, options));\n}\n\nvar MAGIC = 'openssh-key-v1';\n\nfunction readSSHPrivate(type, buf, options) {\n\tbuf = new SSHBuffer({buffer: buf});\n\n\tvar magic = buf.readCString();\n\tassert.strictEqual(magic, MAGIC, 'bad magic string');\n\n\tvar cipher = buf.readString();\n\tvar kdf = buf.readString();\n\tvar kdfOpts = buf.readBuffer();\n\n\tvar nkeys = buf.readInt();\n\tif (nkeys !== 1) {\n\t\tthrow (new Error('OpenSSH-format key file contains ' +\n\t\t    'multiple keys: this is unsupported.'));\n\t}\n\n\tvar pubKey = buf.readBuffer();\n\n\tif (type === 'public') {\n\t\tassert.ok(buf.atEnd(), 'excess bytes left after key');\n\t\treturn (rfc4253.read(pubKey));\n\t}\n\n\tvar privKeyBlob = buf.readBuffer();\n\tassert.ok(buf.atEnd(), 'excess bytes left after key');\n\n\tvar kdfOptsBuf = new SSHBuffer({ buffer: kdfOpts });\n\tswitch (kdf) {\n\tcase 'none':\n\t\tif (cipher !== 'none') {\n\t\t\tthrow (new Error('OpenSSH-format key uses KDF \"none\" ' +\n\t\t\t     'but specifies a cipher other than \"none\"'));\n\t\t}\n\t\tbreak;\n\tcase 'bcrypt':\n\t\tvar salt = kdfOptsBuf.readBuffer();\n\t\tvar rounds = kdfOptsBuf.readInt();\n\t\tvar cinf = utils.opensshCipherInfo(cipher);\n\t\tif (bcrypt === undefined) {\n\t\t\tbcrypt = require('bcrypt-pbkdf');\n\t\t}\n\n\t\tif (typeof (options.passphrase) === 'string') {\n\t\t\toptions.passphrase = Buffer.from(options.passphrase,\n\t\t\t    'utf-8');\n\t\t}\n\t\tif (!Buffer.isBuffer(options.passphrase)) {\n\t\t\tthrow (new errors.KeyEncryptedError(\n\t\t\t    options.filename, 'OpenSSH'));\n\t\t}\n\n\t\tvar pass = new Uint8Array(options.passphrase);\n\t\tvar salti = new Uint8Array(salt);\n\t\t/* Use the pbkdf to derive both the key and the IV. */\n\t\tvar out = new Uint8Array(cinf.keySize + cinf.blockSize);\n\t\tvar res = bcrypt.pbkdf(pass, pass.length, salti, salti.length,\n\t\t    out, out.length, rounds);\n\t\tif (res !== 0) {\n\t\t\tthrow (new Error('bcrypt_pbkdf function returned ' +\n\t\t\t    'failure, parameters invalid'));\n\t\t}\n\t\tout = Buffer.from(out);\n\t\tvar ckey = out.slice(0, cinf.keySize);\n\t\tvar iv = out.slice(cinf.keySize, cinf.keySize + cinf.blockSize);\n\t\tvar cipherStream = crypto.createDecipheriv(cinf.opensslName,\n\t\t    ckey, iv);\n\t\tcipherStream.setAutoPadding(false);\n\t\tvar chunk, chunks = [];\n\t\tcipherStream.once('error', function (e) {\n\t\t\tif (e.toString().indexOf('bad decrypt') !== -1) {\n\t\t\t\tthrow (new Error('Incorrect passphrase ' +\n\t\t\t\t    'supplied, could not decrypt key'));\n\t\t\t}\n\t\t\tthrow (e);\n\t\t});\n\t\tcipherStream.write(privKeyBlob);\n\t\tcipherStream.end();\n\t\twhile ((chunk = cipherStream.read()) !== null)\n\t\t\tchunks.push(chunk);\n\t\tprivKeyBlob = Buffer.concat(chunks);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error(\n\t\t    'OpenSSH-format key uses unknown KDF \"' + kdf + '\"'));\n\t}\n\n\tbuf = new SSHBuffer({buffer: privKeyBlob});\n\n\tvar checkInt1 = buf.readInt();\n\tvar checkInt2 = buf.readInt();\n\tif (checkInt1 !== checkInt2) {\n\t\tthrow (new Error('Incorrect passphrase supplied, could not ' +\n\t\t    'decrypt key'));\n\t}\n\n\tvar ret = {};\n\tvar key = rfc4253.readInternal(ret, 'private', buf.remainder());\n\n\tbuf.skip(ret.consumed);\n\n\tvar comment = buf.readString();\n\tkey.comment = comment;\n\n\treturn (key);\n}\n\nfunction write(key, options) {\n\tvar pubKey;\n\tif (PrivateKey.isPrivateKey(key))\n\t\tpubKey = key.toPublic();\n\telse\n\t\tpubKey = key;\n\n\tvar cipher = 'none';\n\tvar kdf = 'none';\n\tvar kdfopts = Buffer.alloc(0);\n\tvar cinf = { blockSize: 8 };\n\tvar passphrase;\n\tif (options !== undefined) {\n\t\tpassphrase = options.passphrase;\n\t\tif (typeof (passphrase) === 'string')\n\t\t\tpassphrase = Buffer.from(passphrase, 'utf-8');\n\t\tif (passphrase !== undefined) {\n\t\t\tassert.buffer(passphrase, 'options.passphrase');\n\t\t\tassert.optionalString(options.cipher, 'options.cipher');\n\t\t\tcipher = options.cipher;\n\t\t\tif (cipher === undefined)\n\t\t\t\tcipher = 'aes128-ctr';\n\t\t\tcinf = utils.opensshCipherInfo(cipher);\n\t\t\tkdf = 'bcrypt';\n\t\t}\n\t}\n\n\tvar privBuf;\n\tif (PrivateKey.isPrivateKey(key)) {\n\t\tprivBuf = new SSHBuffer({});\n\t\tvar checkInt = crypto.randomBytes(4).readUInt32BE(0);\n\t\tprivBuf.writeInt(checkInt);\n\t\tprivBuf.writeInt(checkInt);\n\t\tprivBuf.write(key.toBuffer('rfc4253'));\n\t\tprivBuf.writeString(key.comment || '');\n\n\t\tvar n = 1;\n\t\twhile (privBuf._offset % cinf.blockSize !== 0)\n\t\t\tprivBuf.writeChar(n++);\n\t\tprivBuf = privBuf.toBuffer();\n\t}\n\n\tswitch (kdf) {\n\tcase 'none':\n\t\tbreak;\n\tcase 'bcrypt':\n\t\tvar salt = crypto.randomBytes(16);\n\t\tvar rounds = 16;\n\t\tvar kdfssh = new SSHBuffer({});\n\t\tkdfssh.writeBuffer(salt);\n\t\tkdfssh.writeInt(rounds);\n\t\tkdfopts = kdfssh.toBuffer();\n\n\t\tif (bcrypt === undefined) {\n\t\t\tbcrypt = require('bcrypt-pbkdf');\n\t\t}\n\t\tvar pass = new Uint8Array(passphrase);\n\t\tvar salti = new Uint8Array(salt);\n\t\t/* Use the pbkdf to derive both the key and the IV. */\n\t\tvar out = new Uint8Array(cinf.keySize + cinf.blockSize);\n\t\tvar res = bcrypt.pbkdf(pass, pass.length, salti, salti.length,\n\t\t    out, out.length, rounds);\n\t\tif (res !== 0) {\n\t\t\tthrow (new Error('bcrypt_pbkdf function returned ' +\n\t\t\t    'failure, parameters invalid'));\n\t\t}\n\t\tout = Buffer.from(out);\n\t\tvar ckey = out.slice(0, cinf.keySize);\n\t\tvar iv = out.slice(cinf.keySize, cinf.keySize + cinf.blockSize);\n\n\t\tvar cipherStream = crypto.createCipheriv(cinf.opensslName,\n\t\t    ckey, iv);\n\t\tcipherStream.setAutoPadding(false);\n\t\tvar chunk, chunks = [];\n\t\tcipherStream.once('error', function (e) {\n\t\t\tthrow (e);\n\t\t});\n\t\tcipherStream.write(privBuf);\n\t\tcipherStream.end();\n\t\twhile ((chunk = cipherStream.read()) !== null)\n\t\t\tchunks.push(chunk);\n\t\tprivBuf = Buffer.concat(chunks);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error('Unsupported kdf ' + kdf));\n\t}\n\n\tvar buf = new SSHBuffer({});\n\n\tbuf.writeCString(MAGIC);\n\tbuf.writeString(cipher);\t/* cipher */\n\tbuf.writeString(kdf);\t\t/* kdf */\n\tbuf.writeBuffer(kdfopts);\t/* kdfoptions */\n\n\tbuf.writeInt(1);\t\t/* nkeys */\n\tbuf.writeBuffer(pubKey.toBuffer('rfc4253'));\n\n\tif (privBuf)\n\t\tbuf.writeBuffer(privBuf);\n\n\tbuf = buf.toBuffer();\n\n\tvar header;\n\tif (PrivateKey.isPrivateKey(key))\n\t\theader = 'OPENSSH PRIVATE KEY';\n\telse\n\t\theader = 'OPENSSH PUBLIC KEY';\n\n\tvar tmp = buf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 70) +\n\t    18 + 16 + header.length*2 + 10;\n\tbuf = Buffer.alloc(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 70;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar rfc4253 = require('./rfc4253');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\n\nvar sshpriv = require('./ssh-private');\n\n/*JSSTYLED*/\nvar SSHKEY_RE = /^([a-z0-9-]+)[ \\t]+([a-zA-Z0-9+\\/]+[=]*)([ \\t]+([^ \\t][^\\n]*[\\n]*)?)?$/;\n/*JSSTYLED*/\nvar SSHKEY_RE2 = /^([a-z0-9-]+)[ \\t\\n]+([a-zA-Z0-9+\\/][a-zA-Z0-9+\\/ \\t\\n=]*)([^a-zA-Z0-9+\\/ \\t\\n=].*)?$/;\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar trimmed = buf.trim().replace(/[\\\\\\r]/g, '');\n\tvar m = trimmed.match(SSHKEY_RE);\n\tif (!m)\n\t\tm = trimmed.match(SSHKEY_RE2);\n\tassert.ok(m, 'key must match regex');\n\n\tvar type = rfc4253.algToKeyType(m[1]);\n\tvar kbuf = Buffer.from(m[2], 'base64');\n\n\t/*\n\t * This is a bit tricky. If we managed to parse the key and locate the\n\t * key comment with the regex, then do a non-partial read and assert\n\t * that we have consumed all bytes. If we couldn't locate the key\n\t * comment, though, there may be whitespace shenanigans going on that\n\t * have conjoined the comment to the rest of the key. We do a partial\n\t * read in this case to try to make the best out of a sorry situation.\n\t */\n\tvar key;\n\tvar ret = {};\n\tif (m[4]) {\n\t\ttry {\n\t\t\tkey = rfc4253.read(kbuf);\n\n\t\t} catch (e) {\n\t\t\tm = trimmed.match(SSHKEY_RE2);\n\t\t\tassert.ok(m, 'key must match regex');\n\t\t\tkbuf = Buffer.from(m[2], 'base64');\n\t\t\tkey = rfc4253.readInternal(ret, 'public', kbuf);\n\t\t}\n\t} else {\n\t\tkey = rfc4253.readInternal(ret, 'public', kbuf);\n\t}\n\n\tassert.strictEqual(type, key.type);\n\n\tif (m[4] && m[4].length > 0) {\n\t\tkey.comment = m[4];\n\n\t} else if (ret.consumed) {\n\t\t/*\n\t\t * Now the magic: trying to recover the key comment when it's\n\t\t * gotten conjoined to the key or otherwise shenanigan'd.\n\t\t *\n\t\t * Work out how much base64 we used, then drop all non-base64\n\t\t * chars from the beginning up to this point in the the string.\n\t\t * Then offset in this and try to make up for missing = chars.\n\t\t */\n\t\tvar data = m[2] + (m[3] ? m[3] : '');\n\t\tvar realOffset = Math.ceil(ret.consumed / 3) * 4;\n\t\tdata = data.slice(0, realOffset - 2). /*JSSTYLED*/\n\t\t    replace(/[^a-zA-Z0-9+\\/=]/g, '') +\n\t\t    data.slice(realOffset - 2);\n\n\t\tvar padding = ret.consumed % 3;\n\t\tif (padding > 0 &&\n\t\t    data.slice(realOffset - 1, realOffset) !== '=')\n\t\t\trealOffset--;\n\t\twhile (data.slice(realOffset, realOffset + 1) === '=')\n\t\t\trealOffset++;\n\n\t\t/* Finally, grab what we think is the comment & clean it up. */\n\t\tvar trailer = data.slice(realOffset);\n\t\ttrailer = trailer.replace(/[\\r\\n]/g, ' ').\n\t\t    replace(/^\\s+/, '');\n\t\tif (trailer.match(/^[a-zA-Z0-9]/))\n\t\t\tkey.comment = trailer;\n\t}\n\n\treturn (key);\n}\n\nfunction write(key, options) {\n\tassert.object(key);\n\tif (!Key.isKey(key))\n\t\tthrow (new Error('Must be a public key'));\n\n\tvar parts = [];\n\tvar alg = rfc4253.keyTypeToAlg(key);\n\tparts.push(alg);\n\n\tvar buf = rfc4253.write(key);\n\tparts.push(buf.toString('base64'));\n\n\tif (key.comment)\n\t\tparts.push(key.comment);\n\n\treturn (Buffer.from(parts.join(' ')));\n}\n","// Copyright 2016 Joyent, Inc.\n\nvar x509 = require('./x509');\n\nmodule.exports = {\n\tread: read,\n\tverify: x509.verify,\n\tsign: x509.sign,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\n\nfunction read(buf, options) {\n\tif (typeof (buf) !== 'string') {\n\t\tassert.buffer(buf, 'buf');\n\t\tbuf = buf.toString('ascii');\n\t}\n\n\tvar lines = buf.trim().split(/[\\r\\n]+/g);\n\n\tvar m;\n\tvar si = -1;\n\twhile (!m && si < lines.length) {\n\t\tm = lines[++si].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*BEGIN CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m, 'invalid PEM header');\n\n\tvar m2;\n\tvar ei = lines.length;\n\twhile (!m2 && ei > 0) {\n\t\tm2 = lines[--ei].match(/*JSSTYLED*/\n\t\t    /[-]+[ ]*END CERTIFICATE[ ]*[-]+/);\n\t}\n\tassert.ok(m2, 'invalid PEM footer');\n\n\tlines = lines.slice(si, ei + 1);\n\n\tvar headers = {};\n\twhile (true) {\n\t\tlines = lines.slice(1);\n\t\tm = lines[0].match(/*JSSTYLED*/\n\t\t    /^([A-Za-z0-9-]+): (.+)$/);\n\t\tif (!m)\n\t\t\tbreak;\n\t\theaders[m[1].toLowerCase()] = m[2];\n\t}\n\n\t/* Chop off the first and last lines */\n\tlines = lines.slice(0, -1).join('');\n\tbuf = Buffer.from(lines, 'base64');\n\n\treturn (x509.read(buf, options));\n}\n\nfunction write(cert, options) {\n\tvar dbuf = x509.write(cert, options);\n\n\tvar header = 'CERTIFICATE';\n\tvar tmp = dbuf.toString('base64');\n\tvar len = tmp.length + (tmp.length / 64) +\n\t    18 + 16 + header.length*2 + 10;\n\tvar buf = Buffer.alloc(len);\n\tvar o = 0;\n\to += buf.write('-----BEGIN ' + header + '-----\\n', o);\n\tfor (var i = 0; i < tmp.length; ) {\n\t\tvar limit = i + 64;\n\t\tif (limit > tmp.length)\n\t\t\tlimit = tmp.length;\n\t\to += buf.write(tmp.slice(i, limit), o);\n\t\tbuf[o++] = 10;\n\t\ti = limit;\n\t}\n\to += buf.write('-----END ' + header + '-----\\n', o);\n\n\treturn (buf.slice(0, o));\n}\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = {\n\tread: read,\n\tverify: verify,\n\tsign: sign,\n\tsignAsync: signAsync,\n\twrite: write\n};\n\nvar assert = require('assert-plus');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('../algs');\nvar utils = require('../utils');\nvar Key = require('../key');\nvar PrivateKey = require('../private-key');\nvar pem = require('./pem');\nvar Identity = require('../identity');\nvar Signature = require('../signature');\nvar Certificate = require('../certificate');\nvar pkcs8 = require('./pkcs8');\n\n/*\n * This file is based on RFC5280 (X.509).\n */\n\n/* Helper to read in a single mpint */\nfunction readMPInt(der, nm) {\n\tassert.strictEqual(der.peek(), asn1.Ber.Integer,\n\t    nm + ' is not an Integer');\n\treturn (utils.mpNormalize(der.readString(asn1.Ber.Integer, true)));\n}\n\nfunction verify(cert, key) {\n\tvar sig = cert.signatures.x509;\n\tassert.object(sig, 'x509 signature');\n\n\tvar algParts = sig.algo.split('-');\n\tif (algParts[0] !== key.type)\n\t\treturn (false);\n\n\tvar blob = sig.cache;\n\tif (blob === undefined) {\n\t\tvar der = new asn1.BerWriter();\n\t\twriteTBSCert(cert, der);\n\t\tblob = der.buffer;\n\t}\n\n\tvar verifier = key.createVerify(algParts[1]);\n\tverifier.write(blob);\n\treturn (verifier.verify(sig.signature));\n}\n\nfunction Local(i) {\n\treturn (asn1.Ber.Context | asn1.Ber.Constructor | i);\n}\n\nfunction Context(i) {\n\treturn (asn1.Ber.Context | i);\n}\n\nvar SIGN_ALGS = {\n\t'rsa-md5': '1.2.840.113549.1.1.4',\n\t'rsa-sha1': '1.2.840.113549.1.1.5',\n\t'rsa-sha256': '1.2.840.113549.1.1.11',\n\t'rsa-sha384': '1.2.840.113549.1.1.12',\n\t'rsa-sha512': '1.2.840.113549.1.1.13',\n\t'dsa-sha1': '1.2.840.10040.4.3',\n\t'dsa-sha256': '2.16.840.1.101.3.4.3.2',\n\t'ecdsa-sha1': '1.2.840.10045.4.1',\n\t'ecdsa-sha256': '1.2.840.10045.4.3.2',\n\t'ecdsa-sha384': '1.2.840.10045.4.3.3',\n\t'ecdsa-sha512': '1.2.840.10045.4.3.4',\n\t'ed25519-sha512': '1.3.101.112'\n};\nObject.keys(SIGN_ALGS).forEach(function (k) {\n\tSIGN_ALGS[SIGN_ALGS[k]] = k;\n});\nSIGN_ALGS['1.3.14.3.2.3'] = 'rsa-md5';\nSIGN_ALGS['1.3.14.3.2.29'] = 'rsa-sha1';\n\nvar EXTS = {\n\t'issuerKeyId': '2.5.29.35',\n\t'altName': '2.5.29.17',\n\t'basicConstraints': '2.5.29.19',\n\t'keyUsage': '2.5.29.15',\n\t'extKeyUsage': '2.5.29.37'\n};\n\nfunction read(buf, options) {\n\tif (typeof (buf) === 'string') {\n\t\tbuf = Buffer.from(buf, 'binary');\n\t}\n\tassert.buffer(buf, 'buf');\n\n\tvar der = new asn1.BerReader(buf);\n\n\tder.readSequence();\n\tif (Math.abs(der.length - der.remain) > 1) {\n\t\tthrow (new Error('DER sequence does not contain whole byte ' +\n\t\t    'stream'));\n\t}\n\n\tvar tbsStart = der.offset;\n\tder.readSequence();\n\tvar sigOffset = der.offset + der.length;\n\tvar tbsEnd = sigOffset;\n\n\tif (der.peek() === Local(0)) {\n\t\tder.readSequence(Local(0));\n\t\tvar version = der.readInt();\n\t\tassert.ok(version <= 3,\n\t\t    'only x.509 versions up to v3 supported');\n\t}\n\n\tvar cert = {};\n\tcert.signatures = {};\n\tvar sig = (cert.signatures.x509 = {});\n\tsig.extras = {};\n\n\tcert.serial = readMPInt(der, 'serial');\n\n\tder.readSequence();\n\tvar after = der.offset + der.length;\n\tvar certAlgOid = der.readOID();\n\tvar certAlg = SIGN_ALGS[certAlgOid];\n\tif (certAlg === undefined)\n\t\tthrow (new Error('unknown signature algorithm ' + certAlgOid));\n\n\tder._offset = after;\n\tcert.issuer = Identity.parseAsn1(der);\n\n\tder.readSequence();\n\tcert.validFrom = readDate(der);\n\tcert.validUntil = readDate(der);\n\n\tcert.subjects = [Identity.parseAsn1(der)];\n\n\tder.readSequence();\n\tafter = der.offset + der.length;\n\tcert.subjectKey = pkcs8.readPkcs8(undefined, 'public', der);\n\tder._offset = after;\n\n\t/* issuerUniqueID */\n\tif (der.peek() === Local(1)) {\n\t\tder.readSequence(Local(1));\n\t\tsig.extras.issuerUniqueID =\n\t\t    buf.slice(der.offset, der.offset + der.length);\n\t\tder._offset += der.length;\n\t}\n\n\t/* subjectUniqueID */\n\tif (der.peek() === Local(2)) {\n\t\tder.readSequence(Local(2));\n\t\tsig.extras.subjectUniqueID =\n\t\t    buf.slice(der.offset, der.offset + der.length);\n\t\tder._offset += der.length;\n\t}\n\n\t/* extensions */\n\tif (der.peek() === Local(3)) {\n\t\tder.readSequence(Local(3));\n\t\tvar extEnd = der.offset + der.length;\n\t\tder.readSequence();\n\n\t\twhile (der.offset < extEnd)\n\t\t\treadExtension(cert, buf, der);\n\n\t\tassert.strictEqual(der.offset, extEnd);\n\t}\n\n\tassert.strictEqual(der.offset, sigOffset);\n\n\tder.readSequence();\n\tafter = der.offset + der.length;\n\tvar sigAlgOid = der.readOID();\n\tvar sigAlg = SIGN_ALGS[sigAlgOid];\n\tif (sigAlg === undefined)\n\t\tthrow (new Error('unknown signature algorithm ' + sigAlgOid));\n\tder._offset = after;\n\n\tvar sigData = der.readString(asn1.Ber.BitString, true);\n\tif (sigData[0] === 0)\n\t\tsigData = sigData.slice(1);\n\tvar algParts = sigAlg.split('-');\n\n\tsig.signature = Signature.parse(sigData, algParts[0], 'asn1');\n\tsig.signature.hashAlgorithm = algParts[1];\n\tsig.algo = sigAlg;\n\tsig.cache = buf.slice(tbsStart, tbsEnd);\n\n\treturn (new Certificate(cert));\n}\n\nfunction readDate(der) {\n\tif (der.peek() === asn1.Ber.UTCTime) {\n\t\treturn (utcTimeToDate(der.readString(asn1.Ber.UTCTime)));\n\t} else if (der.peek() === asn1.Ber.GeneralizedTime) {\n\t\treturn (gTimeToDate(der.readString(asn1.Ber.GeneralizedTime)));\n\t} else {\n\t\tthrow (new Error('Unsupported date format'));\n\t}\n}\n\nfunction writeDate(der, date) {\n\tif (date.getUTCFullYear() >= 2050 || date.getUTCFullYear() < 1950) {\n\t\tder.writeString(dateToGTime(date), asn1.Ber.GeneralizedTime);\n\t} else {\n\t\tder.writeString(dateToUTCTime(date), asn1.Ber.UTCTime);\n\t}\n}\n\n/* RFC5280, section 4.2.1.6 (GeneralName type) */\nvar ALTNAME = {\n\tOtherName: Local(0),\n\tRFC822Name: Context(1),\n\tDNSName: Context(2),\n\tX400Address: Local(3),\n\tDirectoryName: Local(4),\n\tEDIPartyName: Local(5),\n\tURI: Context(6),\n\tIPAddress: Context(7),\n\tOID: Context(8)\n};\n\n/* RFC5280, section 4.2.1.12 (KeyPurposeId) */\nvar EXTPURPOSE = {\n\t'serverAuth': '1.3.6.1.5.5.7.3.1',\n\t'clientAuth': '1.3.6.1.5.5.7.3.2',\n\t'codeSigning': '1.3.6.1.5.5.7.3.3',\n\n\t/* See https://github.com/joyent/oid-docs/blob/master/root.md */\n\t'joyentDocker': '1.3.6.1.4.1.38678.1.4.1',\n\t'joyentCmon': '1.3.6.1.4.1.38678.1.4.2'\n};\nvar EXTPURPOSE_REV = {};\nObject.keys(EXTPURPOSE).forEach(function (k) {\n\tEXTPURPOSE_REV[EXTPURPOSE[k]] = k;\n});\n\nvar KEYUSEBITS = [\n\t'signature', 'identity', 'keyEncryption',\n\t'encryption', 'keyAgreement', 'ca', 'crl'\n];\n\nfunction readExtension(cert, buf, der) {\n\tder.readSequence();\n\tvar after = der.offset + der.length;\n\tvar extId = der.readOID();\n\tvar id;\n\tvar sig = cert.signatures.x509;\n\tif (!sig.extras.exts)\n\t\tsig.extras.exts = [];\n\n\tvar critical;\n\tif (der.peek() === asn1.Ber.Boolean)\n\t\tcritical = der.readBoolean();\n\n\tswitch (extId) {\n\tcase (EXTS.basicConstraints):\n\t\tder.readSequence(asn1.Ber.OctetString);\n\t\tder.readSequence();\n\t\tvar bcEnd = der.offset + der.length;\n\t\tvar ca = false;\n\t\tif (der.peek() === asn1.Ber.Boolean)\n\t\t\tca = der.readBoolean();\n\t\tif (cert.purposes === undefined)\n\t\t\tcert.purposes = [];\n\t\tif (ca === true)\n\t\t\tcert.purposes.push('ca');\n\t\tvar bc = { oid: extId, critical: critical };\n\t\tif (der.offset < bcEnd && der.peek() === asn1.Ber.Integer)\n\t\t\tbc.pathLen = der.readInt();\n\t\tsig.extras.exts.push(bc);\n\t\tbreak;\n\tcase (EXTS.extKeyUsage):\n\t\tder.readSequence(asn1.Ber.OctetString);\n\t\tder.readSequence();\n\t\tif (cert.purposes === undefined)\n\t\t\tcert.purposes = [];\n\t\tvar ekEnd = der.offset + der.length;\n\t\twhile (der.offset < ekEnd) {\n\t\t\tvar oid = der.readOID();\n\t\t\tcert.purposes.push(EXTPURPOSE_REV[oid] || oid);\n\t\t}\n\t\t/*\n\t\t * This is a bit of a hack: in the case where we have a cert\n\t\t * that's only allowed to do serverAuth or clientAuth (and not\n\t\t * the other), we want to make sure all our Subjects are of\n\t\t * the right type. But we already parsed our Subjects and\n\t\t * decided if they were hosts or users earlier (since it appears\n\t\t * first in the cert).\n\t\t *\n\t\t * So we go through and mutate them into the right kind here if\n\t\t * it doesn't match. This might not be hugely beneficial, as it\n\t\t * seems that single-purpose certs are not often seen in the\n\t\t * wild.\n\t\t */\n\t\tif (cert.purposes.indexOf('serverAuth') !== -1 &&\n\t\t    cert.purposes.indexOf('clientAuth') === -1) {\n\t\t\tcert.subjects.forEach(function (ide) {\n\t\t\t\tif (ide.type !== 'host') {\n\t\t\t\t\tide.type = 'host';\n\t\t\t\t\tide.hostname = ide.uid ||\n\t\t\t\t\t    ide.email ||\n\t\t\t\t\t    ide.components[0].value;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (cert.purposes.indexOf('clientAuth') !== -1 &&\n\t\t    cert.purposes.indexOf('serverAuth') === -1) {\n\t\t\tcert.subjects.forEach(function (ide) {\n\t\t\t\tif (ide.type !== 'user') {\n\t\t\t\t\tide.type = 'user';\n\t\t\t\t\tide.uid = ide.hostname ||\n\t\t\t\t\t    ide.email ||\n\t\t\t\t\t    ide.components[0].value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tsig.extras.exts.push({ oid: extId, critical: critical });\n\t\tbreak;\n\tcase (EXTS.keyUsage):\n\t\tder.readSequence(asn1.Ber.OctetString);\n\t\tvar bits = der.readString(asn1.Ber.BitString, true);\n\t\tvar setBits = readBitField(bits, KEYUSEBITS);\n\t\tsetBits.forEach(function (bit) {\n\t\t\tif (cert.purposes === undefined)\n\t\t\t\tcert.purposes = [];\n\t\t\tif (cert.purposes.indexOf(bit) === -1)\n\t\t\t\tcert.purposes.push(bit);\n\t\t});\n\t\tsig.extras.exts.push({ oid: extId, critical: critical,\n\t\t    bits: bits });\n\t\tbreak;\n\tcase (EXTS.altName):\n\t\tder.readSequence(asn1.Ber.OctetString);\n\t\tder.readSequence();\n\t\tvar aeEnd = der.offset + der.length;\n\t\twhile (der.offset < aeEnd) {\n\t\t\tswitch (der.peek()) {\n\t\t\tcase ALTNAME.OtherName:\n\t\t\tcase ALTNAME.EDIPartyName:\n\t\t\t\tder.readSequence();\n\t\t\t\tder._offset += der.length;\n\t\t\t\tbreak;\n\t\t\tcase ALTNAME.OID:\n\t\t\t\tder.readOID(ALTNAME.OID);\n\t\t\t\tbreak;\n\t\t\tcase ALTNAME.RFC822Name:\n\t\t\t\t/* RFC822 specifies email addresses */\n\t\t\t\tvar email = der.readString(ALTNAME.RFC822Name);\n\t\t\t\tid = Identity.forEmail(email);\n\t\t\t\tif (!cert.subjects[0].equals(id))\n\t\t\t\t\tcert.subjects.push(id);\n\t\t\t\tbreak;\n\t\t\tcase ALTNAME.DirectoryName:\n\t\t\t\tder.readSequence(ALTNAME.DirectoryName);\n\t\t\t\tid = Identity.parseAsn1(der);\n\t\t\t\tif (!cert.subjects[0].equals(id))\n\t\t\t\t\tcert.subjects.push(id);\n\t\t\t\tbreak;\n\t\t\tcase ALTNAME.DNSName:\n\t\t\t\tvar host = der.readString(\n\t\t\t\t    ALTNAME.DNSName);\n\t\t\t\tid = Identity.forHost(host);\n\t\t\t\tif (!cert.subjects[0].equals(id))\n\t\t\t\t\tcert.subjects.push(id);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tder.readString(der.peek());\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsig.extras.exts.push({ oid: extId, critical: critical });\n\t\tbreak;\n\tdefault:\n\t\tsig.extras.exts.push({\n\t\t\toid: extId,\n\t\t\tcritical: critical,\n\t\t\tdata: der.readString(asn1.Ber.OctetString, true)\n\t\t});\n\t\tbreak;\n\t}\n\n\tder._offset = after;\n}\n\nvar UTCTIME_RE =\n    /^([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})?Z$/;\nfunction utcTimeToDate(t) {\n\tvar m = t.match(UTCTIME_RE);\n\tassert.ok(m, 'timestamps must be in UTC');\n\tvar d = new Date();\n\n\tvar thisYear = d.getUTCFullYear();\n\tvar century = Math.floor(thisYear / 100) * 100;\n\n\tvar year = parseInt(m[1], 10);\n\tif (thisYear % 100 < 50 && year >= 60)\n\t\tyear += (century - 1);\n\telse\n\t\tyear += century;\n\td.setUTCFullYear(year, parseInt(m[2], 10) - 1, parseInt(m[3], 10));\n\td.setUTCHours(parseInt(m[4], 10), parseInt(m[5], 10));\n\tif (m[6] && m[6].length > 0)\n\t\td.setUTCSeconds(parseInt(m[6], 10));\n\treturn (d);\n}\n\nvar GTIME_RE =\n    /^([0-9]{4})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})?Z$/;\nfunction gTimeToDate(t) {\n\tvar m = t.match(GTIME_RE);\n\tassert.ok(m);\n\tvar d = new Date();\n\n\td.setUTCFullYear(parseInt(m[1], 10), parseInt(m[2], 10) - 1,\n\t    parseInt(m[3], 10));\n\td.setUTCHours(parseInt(m[4], 10), parseInt(m[5], 10));\n\tif (m[6] && m[6].length > 0)\n\t\td.setUTCSeconds(parseInt(m[6], 10));\n\treturn (d);\n}\n\nfunction zeroPad(n, m) {\n\tif (m === undefined)\n\t\tm = 2;\n\tvar s = '' + n;\n\twhile (s.length < m)\n\t\ts = '0' + s;\n\treturn (s);\n}\n\nfunction dateToUTCTime(d) {\n\tvar s = '';\n\ts += zeroPad(d.getUTCFullYear() % 100);\n\ts += zeroPad(d.getUTCMonth() + 1);\n\ts += zeroPad(d.getUTCDate());\n\ts += zeroPad(d.getUTCHours());\n\ts += zeroPad(d.getUTCMinutes());\n\ts += zeroPad(d.getUTCSeconds());\n\ts += 'Z';\n\treturn (s);\n}\n\nfunction dateToGTime(d) {\n\tvar s = '';\n\ts += zeroPad(d.getUTCFullYear(), 4);\n\ts += zeroPad(d.getUTCMonth() + 1);\n\ts += zeroPad(d.getUTCDate());\n\ts += zeroPad(d.getUTCHours());\n\ts += zeroPad(d.getUTCMinutes());\n\ts += zeroPad(d.getUTCSeconds());\n\ts += 'Z';\n\treturn (s);\n}\n\nfunction sign(cert, key) {\n\tif (cert.signatures.x509 === undefined)\n\t\tcert.signatures.x509 = {};\n\tvar sig = cert.signatures.x509;\n\n\tsig.algo = key.type + '-' + key.defaultHashAlgorithm();\n\tif (SIGN_ALGS[sig.algo] === undefined)\n\t\treturn (false);\n\n\tvar der = new asn1.BerWriter();\n\twriteTBSCert(cert, der);\n\tvar blob = der.buffer;\n\tsig.cache = blob;\n\n\tvar signer = key.createSign();\n\tsigner.write(blob);\n\tcert.signatures.x509.signature = signer.sign();\n\n\treturn (true);\n}\n\nfunction signAsync(cert, signer, done) {\n\tif (cert.signatures.x509 === undefined)\n\t\tcert.signatures.x509 = {};\n\tvar sig = cert.signatures.x509;\n\n\tvar der = new asn1.BerWriter();\n\twriteTBSCert(cert, der);\n\tvar blob = der.buffer;\n\tsig.cache = blob;\n\n\tsigner(blob, function (err, signature) {\n\t\tif (err) {\n\t\t\tdone(err);\n\t\t\treturn;\n\t\t}\n\t\tsig.algo = signature.type + '-' + signature.hashAlgorithm;\n\t\tif (SIGN_ALGS[sig.algo] === undefined) {\n\t\t\tdone(new Error('Invalid signing algorithm \"' +\n\t\t\t    sig.algo + '\"'));\n\t\t\treturn;\n\t\t}\n\t\tsig.signature = signature;\n\t\tdone();\n\t});\n}\n\nfunction write(cert, options) {\n\tvar sig = cert.signatures.x509;\n\tassert.object(sig, 'x509 signature');\n\n\tvar der = new asn1.BerWriter();\n\tder.startSequence();\n\tif (sig.cache) {\n\t\tder._ensure(sig.cache.length);\n\t\tsig.cache.copy(der._buf, der._offset);\n\t\tder._offset += sig.cache.length;\n\t} else {\n\t\twriteTBSCert(cert, der);\n\t}\n\n\tder.startSequence();\n\tder.writeOID(SIGN_ALGS[sig.algo]);\n\tif (sig.algo.match(/^rsa-/))\n\t\tder.writeNull();\n\tder.endSequence();\n\n\tvar sigData = sig.signature.toBuffer('asn1');\n\tvar data = Buffer.alloc(sigData.length + 1);\n\tdata[0] = 0;\n\tsigData.copy(data, 1);\n\tder.writeBuffer(data, asn1.Ber.BitString);\n\tder.endSequence();\n\n\treturn (der.buffer);\n}\n\nfunction writeTBSCert(cert, der) {\n\tvar sig = cert.signatures.x509;\n\tassert.object(sig, 'x509 signature');\n\n\tder.startSequence();\n\n\tder.startSequence(Local(0));\n\tder.writeInt(2);\n\tder.endSequence();\n\n\tder.writeBuffer(utils.mpNormalize(cert.serial), asn1.Ber.Integer);\n\n\tder.startSequence();\n\tder.writeOID(SIGN_ALGS[sig.algo]);\n\tif (sig.algo.match(/^rsa-/))\n\t\tder.writeNull();\n\tder.endSequence();\n\n\tcert.issuer.toAsn1(der);\n\n\tder.startSequence();\n\twriteDate(der, cert.validFrom);\n\twriteDate(der, cert.validUntil);\n\tder.endSequence();\n\n\tvar subject = cert.subjects[0];\n\tvar altNames = cert.subjects.slice(1);\n\tsubject.toAsn1(der);\n\n\tpkcs8.writePkcs8(der, cert.subjectKey);\n\n\tif (sig.extras && sig.extras.issuerUniqueID) {\n\t\tder.writeBuffer(sig.extras.issuerUniqueID, Local(1));\n\t}\n\n\tif (sig.extras && sig.extras.subjectUniqueID) {\n\t\tder.writeBuffer(sig.extras.subjectUniqueID, Local(2));\n\t}\n\n\tif (altNames.length > 0 || subject.type === 'host' ||\n\t    (cert.purposes !== undefined && cert.purposes.length > 0) ||\n\t    (sig.extras && sig.extras.exts)) {\n\t\tder.startSequence(Local(3));\n\t\tder.startSequence();\n\n\t\tvar exts = [];\n\t\tif (cert.purposes !== undefined && cert.purposes.length > 0) {\n\t\t\texts.push({\n\t\t\t\toid: EXTS.basicConstraints,\n\t\t\t\tcritical: true\n\t\t\t});\n\t\t\texts.push({\n\t\t\t\toid: EXTS.keyUsage,\n\t\t\t\tcritical: true\n\t\t\t});\n\t\t\texts.push({\n\t\t\t\toid: EXTS.extKeyUsage,\n\t\t\t\tcritical: true\n\t\t\t});\n\t\t}\n\t\texts.push({ oid: EXTS.altName });\n\t\tif (sig.extras && sig.extras.exts)\n\t\t\texts = sig.extras.exts;\n\n\t\tfor (var i = 0; i < exts.length; ++i) {\n\t\t\tder.startSequence();\n\t\t\tder.writeOID(exts[i].oid);\n\n\t\t\tif (exts[i].critical !== undefined)\n\t\t\t\tder.writeBoolean(exts[i].critical);\n\n\t\t\tif (exts[i].oid === EXTS.altName) {\n\t\t\t\tder.startSequence(asn1.Ber.OctetString);\n\t\t\t\tder.startSequence();\n\t\t\t\tif (subject.type === 'host') {\n\t\t\t\t\tder.writeString(subject.hostname,\n\t\t\t\t\t    Context(2));\n\t\t\t\t}\n\t\t\t\tfor (var j = 0; j < altNames.length; ++j) {\n\t\t\t\t\tif (altNames[j].type === 'host') {\n\t\t\t\t\t\tder.writeString(\n\t\t\t\t\t\t    altNames[j].hostname,\n\t\t\t\t\t\t    ALTNAME.DNSName);\n\t\t\t\t\t} else if (altNames[j].type ===\n\t\t\t\t\t    'email') {\n\t\t\t\t\t\tder.writeString(\n\t\t\t\t\t\t    altNames[j].email,\n\t\t\t\t\t\t    ALTNAME.RFC822Name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Encode anything else as a\n\t\t\t\t\t\t * DN style name for now.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tder.startSequence(\n\t\t\t\t\t\t    ALTNAME.DirectoryName);\n\t\t\t\t\t\taltNames[j].toAsn1(der);\n\t\t\t\t\t\tder.endSequence();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tder.endSequence();\n\t\t\t\tder.endSequence();\n\t\t\t} else if (exts[i].oid === EXTS.basicConstraints) {\n\t\t\t\tder.startSequence(asn1.Ber.OctetString);\n\t\t\t\tder.startSequence();\n\t\t\t\tvar ca = (cert.purposes.indexOf('ca') !== -1);\n\t\t\t\tvar pathLen = exts[i].pathLen;\n\t\t\t\tder.writeBoolean(ca);\n\t\t\t\tif (pathLen !== undefined)\n\t\t\t\t\tder.writeInt(pathLen);\n\t\t\t\tder.endSequence();\n\t\t\t\tder.endSequence();\n\t\t\t} else if (exts[i].oid === EXTS.extKeyUsage) {\n\t\t\t\tder.startSequence(asn1.Ber.OctetString);\n\t\t\t\tder.startSequence();\n\t\t\t\tcert.purposes.forEach(function (purpose) {\n\t\t\t\t\tif (purpose === 'ca')\n\t\t\t\t\t\treturn;\n\t\t\t\t\tif (KEYUSEBITS.indexOf(purpose) !== -1)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tvar oid = purpose;\n\t\t\t\t\tif (EXTPURPOSE[purpose] !== undefined)\n\t\t\t\t\t\toid = EXTPURPOSE[purpose];\n\t\t\t\t\tder.writeOID(oid);\n\t\t\t\t});\n\t\t\t\tder.endSequence();\n\t\t\t\tder.endSequence();\n\t\t\t} else if (exts[i].oid === EXTS.keyUsage) {\n\t\t\t\tder.startSequence(asn1.Ber.OctetString);\n\t\t\t\t/*\n\t\t\t\t * If we parsed this certificate from a byte\n\t\t\t\t * stream (i.e. we didn't generate it in sshpk)\n\t\t\t\t * then we'll have a \".bits\" property on the\n\t\t\t\t * ext with the original raw byte contents.\n\t\t\t\t *\n\t\t\t\t * If we have this, use it here instead of\n\t\t\t\t * regenerating it. This guarantees we output\n\t\t\t\t * the same data we parsed, so signatures still\n\t\t\t\t * validate.\n\t\t\t\t */\n\t\t\t\tif (exts[i].bits !== undefined) {\n\t\t\t\t\tder.writeBuffer(exts[i].bits,\n\t\t\t\t\t    asn1.Ber.BitString);\n\t\t\t\t} else {\n\t\t\t\t\tvar bits = writeBitField(cert.purposes,\n\t\t\t\t\t    KEYUSEBITS);\n\t\t\t\t\tder.writeBuffer(bits,\n\t\t\t\t\t    asn1.Ber.BitString);\n\t\t\t\t}\n\t\t\t\tder.endSequence();\n\t\t\t} else {\n\t\t\t\tder.writeBuffer(exts[i].data,\n\t\t\t\t    asn1.Ber.OctetString);\n\t\t\t}\n\n\t\t\tder.endSequence();\n\t\t}\n\n\t\tder.endSequence();\n\t\tder.endSequence();\n\t}\n\n\tder.endSequence();\n}\n\n/*\n * Reads an ASN.1 BER bitfield out of the Buffer produced by doing\n * `BerReader#readString(asn1.Ber.BitString)`. That function gives us the raw\n * contents of the BitString tag, which is a count of unused bits followed by\n * the bits as a right-padded byte string.\n *\n * `bits` is the Buffer, `bitIndex` should contain an array of string names\n * for the bits in the string, ordered starting with bit #0 in the ASN.1 spec.\n *\n * Returns an array of Strings, the names of the bits that were set to 1.\n */\nfunction readBitField(bits, bitIndex) {\n\tvar bitLen = 8 * (bits.length - 1) - bits[0];\n\tvar setBits = {};\n\tfor (var i = 0; i < bitLen; ++i) {\n\t\tvar byteN = 1 + Math.floor(i / 8);\n\t\tvar bit = 7 - (i % 8);\n\t\tvar mask = 1 << bit;\n\t\tvar bitVal = ((bits[byteN] & mask) !== 0);\n\t\tvar name = bitIndex[i];\n\t\tif (bitVal && typeof (name) === 'string') {\n\t\t\tsetBits[name] = true;\n\t\t}\n\t}\n\treturn (Object.keys(setBits));\n}\n\n/*\n * `setBits` is an array of strings, containing the names for each bit that\n * sould be set to 1. `bitIndex` is same as in `readBitField()`.\n *\n * Returns a Buffer, ready to be written out with `BerWriter#writeString()`.\n */\nfunction writeBitField(setBits, bitIndex) {\n\tvar bitLen = bitIndex.length;\n\tvar blen = Math.ceil(bitLen / 8);\n\tvar unused = blen * 8 - bitLen;\n\tvar bits = Buffer.alloc(1 + blen); // zero-filled\n\tbits[0] = unused;\n\tfor (var i = 0; i < bitLen; ++i) {\n\t\tvar byteN = 1 + Math.floor(i / 8);\n\t\tvar bit = 7 - (i % 8);\n\t\tvar mask = 1 << bit;\n\t\tvar name = bitIndex[i];\n\t\tif (name === undefined)\n\t\t\tcontinue;\n\t\tvar bitVal = (setBits.indexOf(name) !== -1);\n\t\tif (bitVal) {\n\t\t\tbits[byteN] |= mask;\n\t\t}\n\t}\n\treturn (bits);\n}\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = Identity;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar Buffer = require('safer-buffer').Buffer;\n\n/*JSSTYLED*/\nvar DNS_NAME_RE = /^([*]|[a-z0-9][a-z0-9\\-]{0,62})(?:\\.([*]|[a-z0-9][a-z0-9\\-]{0,62}))*$/i;\n\nvar oids = {};\noids.cn = '2.5.4.3';\noids.o = '2.5.4.10';\noids.ou = '2.5.4.11';\noids.l = '2.5.4.7';\noids.s = '2.5.4.8';\noids.c = '2.5.4.6';\noids.sn = '2.5.4.4';\noids.postalCode = '2.5.4.17';\noids.serialNumber = '2.5.4.5';\noids.street = '2.5.4.9';\noids.x500UniqueIdentifier = '2.5.4.45';\noids.role = '2.5.4.72';\noids.telephoneNumber = '2.5.4.20';\noids.description = '2.5.4.13';\noids.dc = '0.9.2342.19200300.100.1.25';\noids.uid = '0.9.2342.19200300.100.1.1';\noids.mail = '0.9.2342.19200300.100.1.3';\noids.title = '2.5.4.12';\noids.gn = '2.5.4.42';\noids.initials = '2.5.4.43';\noids.pseudonym = '2.5.4.65';\noids.emailAddress = '1.2.840.113549.1.9.1';\n\nvar unoids = {};\nObject.keys(oids).forEach(function (k) {\n\tunoids[oids[k]] = k;\n});\n\nfunction Identity(opts) {\n\tvar self = this;\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.components, 'options.components');\n\tthis.components = opts.components;\n\tthis.componentLookup = {};\n\tthis.components.forEach(function (c) {\n\t\tif (c.name && !c.oid)\n\t\t\tc.oid = oids[c.name];\n\t\tif (c.oid && !c.name)\n\t\t\tc.name = unoids[c.oid];\n\t\tif (self.componentLookup[c.name] === undefined)\n\t\t\tself.componentLookup[c.name] = [];\n\t\tself.componentLookup[c.name].push(c);\n\t});\n\tif (this.componentLookup.cn && this.componentLookup.cn.length > 0) {\n\t\tthis.cn = this.componentLookup.cn[0].value;\n\t}\n\tassert.optionalString(opts.type, 'options.type');\n\tif (opts.type === undefined) {\n\t\tif (this.components.length === 1 &&\n\t\t    this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1 &&\n\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t} else if (this.componentLookup.dc &&\n\t\t    this.components.length === this.componentLookup.dc.length) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.dc.map(\n\t\t\t    function (c) {\n\t\t\t\treturn (c.value);\n\t\t\t}).join('.');\n\n\t\t} else if (this.componentLookup.uid &&\n\t\t    this.components.length ===\n\t\t    this.componentLookup.uid.length) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t} else if (this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1 &&\n\t\t    this.componentLookup.cn[0].value.match(DNS_NAME_RE)) {\n\t\t\tthis.type = 'host';\n\t\t\tthis.hostname = this.componentLookup.cn[0].value;\n\n\t\t} else if (this.componentLookup.uid &&\n\t\t    this.componentLookup.uid.length === 1) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.uid[0].value;\n\n\t\t} else if (this.componentLookup.mail &&\n\t\t    this.componentLookup.mail.length === 1) {\n\t\t\tthis.type = 'email';\n\t\t\tthis.email = this.componentLookup.mail[0].value;\n\n\t\t} else if (this.componentLookup.cn &&\n\t\t    this.componentLookup.cn.length === 1) {\n\t\t\tthis.type = 'user';\n\t\t\tthis.uid = this.componentLookup.cn[0].value;\n\n\t\t} else {\n\t\t\tthis.type = 'unknown';\n\t\t}\n\t} else {\n\t\tthis.type = opts.type;\n\t\tif (this.type === 'host')\n\t\t\tthis.hostname = opts.hostname;\n\t\telse if (this.type === 'user')\n\t\t\tthis.uid = opts.uid;\n\t\telse if (this.type === 'email')\n\t\t\tthis.email = opts.email;\n\t\telse\n\t\t\tthrow (new Error('Unknown type ' + this.type));\n\t}\n}\n\nIdentity.prototype.toString = function () {\n\treturn (this.components.map(function (c) {\n\t\tvar n = c.name.toUpperCase();\n\t\t/*JSSTYLED*/\n\t\tn = n.replace(/=/g, '\\\\=');\n\t\tvar v = c.value;\n\t\t/*JSSTYLED*/\n\t\tv = v.replace(/,/g, '\\\\,');\n\t\treturn (n + '=' + v);\n\t}).join(', '));\n};\n\nIdentity.prototype.get = function (name, asArray) {\n\tassert.string(name, 'name');\n\tvar arr = this.componentLookup[name];\n\tif (arr === undefined || arr.length === 0)\n\t\treturn (undefined);\n\tif (!asArray && arr.length > 1)\n\t\tthrow (new Error('Multiple values for attribute ' + name));\n\tif (!asArray)\n\t\treturn (arr[0].value);\n\treturn (arr.map(function (c) {\n\t\treturn (c.value);\n\t}));\n};\n\nIdentity.prototype.toArray = function (idx) {\n\treturn (this.components.map(function (c) {\n\t\treturn ({\n\t\t\tname: c.name,\n\t\t\tvalue: c.value\n\t\t});\n\t}));\n};\n\n/*\n * These are from X.680 -- PrintableString allowed chars are in section 37.4\n * table 8. Spec for IA5Strings is \"1,6 + SPACE + DEL\" where 1 refers to\n * ISO IR #001 (standard ASCII control characters) and 6 refers to ISO IR #006\n * (the basic ASCII character set).\n */\n/* JSSTYLED */\nvar NOT_PRINTABLE = /[^a-zA-Z0-9 '(),+.\\/:=?-]/;\n/* JSSTYLED */\nvar NOT_IA5 = /[^\\x00-\\x7f]/;\n\nIdentity.prototype.toAsn1 = function (der, tag) {\n\tder.startSequence(tag);\n\tthis.components.forEach(function (c) {\n\t\tder.startSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\tder.startSequence();\n\t\tder.writeOID(c.oid);\n\t\t/*\n\t\t * If we fit in a PrintableString, use that. Otherwise use an\n\t\t * IA5String or UTF8String.\n\t\t *\n\t\t * If this identity was parsed from a DN, use the ASN.1 types\n\t\t * from the original representation (otherwise this might not\n\t\t * be a full match for the original in some validators).\n\t\t */\n\t\tif (c.asn1type === asn1.Ber.Utf8String ||\n\t\t    c.value.match(NOT_IA5)) {\n\t\t\tvar v = Buffer.from(c.value, 'utf8');\n\t\t\tder.writeBuffer(v, asn1.Ber.Utf8String);\n\n\t\t} else if (c.asn1type === asn1.Ber.IA5String ||\n\t\t    c.value.match(NOT_PRINTABLE)) {\n\t\t\tder.writeString(c.value, asn1.Ber.IA5String);\n\n\t\t} else {\n\t\t\tvar type = asn1.Ber.PrintableString;\n\t\t\tif (c.asn1type !== undefined)\n\t\t\t\ttype = c.asn1type;\n\t\t\tder.writeString(c.value, type);\n\t\t}\n\t\tder.endSequence();\n\t\tder.endSequence();\n\t});\n\tder.endSequence();\n};\n\nfunction globMatch(a, b) {\n\tif (a === '**' || b === '**')\n\t\treturn (true);\n\tvar aParts = a.split('.');\n\tvar bParts = b.split('.');\n\tif (aParts.length !== bParts.length)\n\t\treturn (false);\n\tfor (var i = 0; i < aParts.length; ++i) {\n\t\tif (aParts[i] === '*' || bParts[i] === '*')\n\t\t\tcontinue;\n\t\tif (aParts[i] !== bParts[i])\n\t\t\treturn (false);\n\t}\n\treturn (true);\n}\n\nIdentity.prototype.equals = function (other) {\n\tif (!Identity.isIdentity(other, [1, 0]))\n\t\treturn (false);\n\tif (other.components.length !== this.components.length)\n\t\treturn (false);\n\tfor (var i = 0; i < this.components.length; ++i) {\n\t\tif (this.components[i].oid !== other.components[i].oid)\n\t\t\treturn (false);\n\t\tif (!globMatch(this.components[i].value,\n\t\t    other.components[i].value)) {\n\t\t\treturn (false);\n\t\t}\n\t}\n\treturn (true);\n};\n\nIdentity.forHost = function (hostname) {\n\tassert.string(hostname, 'hostname');\n\treturn (new Identity({\n\t\ttype: 'host',\n\t\thostname: hostname,\n\t\tcomponents: [ { name: 'cn', value: hostname } ]\n\t}));\n};\n\nIdentity.forUser = function (uid) {\n\tassert.string(uid, 'uid');\n\treturn (new Identity({\n\t\ttype: 'user',\n\t\tuid: uid,\n\t\tcomponents: [ { name: 'uid', value: uid } ]\n\t}));\n};\n\nIdentity.forEmail = function (email) {\n\tassert.string(email, 'email');\n\treturn (new Identity({\n\t\ttype: 'email',\n\t\temail: email,\n\t\tcomponents: [ { name: 'mail', value: email } ]\n\t}));\n};\n\nIdentity.parseDN = function (dn) {\n\tassert.string(dn, 'dn');\n\tvar parts = [''];\n\tvar idx = 0;\n\tvar rem = dn;\n\twhile (rem.length > 0) {\n\t\tvar m;\n\t\t/*JSSTYLED*/\n\t\tif ((m = /^,/.exec(rem)) !== null) {\n\t\t\tparts[++idx] = '';\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^\\\\,/.exec(rem)) !== null) {\n\t\t\tparts[idx] += ',';\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^\\\\./.exec(rem)) !== null) {\n\t\t\tparts[idx] += m[0];\n\t\t\trem = rem.slice(m[0].length);\n\t\t/*JSSTYLED*/\n\t\t} else if ((m = /^[^\\\\,]+/.exec(rem)) !== null) {\n\t\t\tparts[idx] += m[0];\n\t\t\trem = rem.slice(m[0].length);\n\t\t} else {\n\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t}\n\t}\n\tvar cmps = parts.map(function (c) {\n\t\tc = c.trim();\n\t\tvar eqPos = c.indexOf('=');\n\t\twhile (eqPos > 0 && c.charAt(eqPos - 1) === '\\\\')\n\t\t\teqPos = c.indexOf('=', eqPos + 1);\n\t\tif (eqPos === -1) {\n\t\t\tthrow (new Error('Failed to parse DN'));\n\t\t}\n\t\t/*JSSTYLED*/\n\t\tvar name = c.slice(0, eqPos).toLowerCase().replace(/\\\\=/g, '=');\n\t\tvar value = c.slice(eqPos + 1);\n\t\treturn ({ name: name, value: value });\n\t});\n\treturn (new Identity({ components: cmps }));\n};\n\nIdentity.fromArray = function (components) {\n\tassert.arrayOfObject(components, 'components');\n\tcomponents.forEach(function (cmp) {\n\t\tassert.object(cmp, 'component');\n\t\tassert.string(cmp.name, 'component.name');\n\t\tif (!Buffer.isBuffer(cmp.value) &&\n\t\t    !(typeof (cmp.value) === 'string')) {\n\t\t\tthrow (new Error('Invalid component value'));\n\t\t}\n\t});\n\treturn (new Identity({ components: components }));\n};\n\nIdentity.parseAsn1 = function (der, top) {\n\tvar components = [];\n\tder.readSequence(top);\n\tvar end = der.offset + der.length;\n\twhile (der.offset < end) {\n\t\tder.readSequence(asn1.Ber.Constructor | asn1.Ber.Set);\n\t\tvar after = der.offset + der.length;\n\t\tder.readSequence();\n\t\tvar oid = der.readOID();\n\t\tvar type = der.peek();\n\t\tvar value;\n\t\tswitch (type) {\n\t\tcase asn1.Ber.PrintableString:\n\t\tcase asn1.Ber.IA5String:\n\t\tcase asn1.Ber.OctetString:\n\t\tcase asn1.Ber.T61String:\n\t\t\tvalue = der.readString(type);\n\t\t\tbreak;\n\t\tcase asn1.Ber.Utf8String:\n\t\t\tvalue = der.readString(type, true);\n\t\t\tvalue = value.toString('utf8');\n\t\t\tbreak;\n\t\tcase asn1.Ber.CharacterString:\n\t\tcase asn1.Ber.BMPString:\n\t\t\tvalue = der.readString(type, true);\n\t\t\tvalue = value.toString('utf16le');\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow (new Error('Unknown asn1 type ' + type));\n\t\t}\n\t\tcomponents.push({ oid: oid, asn1type: type, value: value });\n\t\tder._offset = after;\n\t}\n\tder._offset = end;\n\treturn (new Identity({\n\t\tcomponents: components\n\t}));\n};\n\nIdentity.isIdentity = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Identity, ver));\n};\n\n/*\n * API versions for Identity:\n * [1,0] -- initial ver\n */\nIdentity.prototype._sshpkApiVersion = [1, 0];\n\nIdentity._oldVersionDetect = function (obj) {\n\treturn ([1, 0]);\n};\n","// Copyright 2015 Joyent, Inc.\n\nvar Key = require('./key');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar PrivateKey = require('./private-key');\nvar Certificate = require('./certificate');\nvar Identity = require('./identity');\nvar errs = require('./errors');\n\nmodule.exports = {\n\t/* top-level classes */\n\tKey: Key,\n\tparseKey: Key.parse,\n\tFingerprint: Fingerprint,\n\tparseFingerprint: Fingerprint.parse,\n\tSignature: Signature,\n\tparseSignature: Signature.parse,\n\tPrivateKey: PrivateKey,\n\tparsePrivateKey: PrivateKey.parse,\n\tgeneratePrivateKey: PrivateKey.generate,\n\tCertificate: Certificate,\n\tparseCertificate: Certificate.parse,\n\tcreateSelfSignedCertificate: Certificate.createSelfSigned,\n\tcreateCertificate: Certificate.create,\n\tIdentity: Identity,\n\tidentityFromDN: Identity.parseDN,\n\tidentityForHost: Identity.forHost,\n\tidentityForUser: Identity.forUser,\n\tidentityForEmail: Identity.forEmail,\n\tidentityFromArray: Identity.fromArray,\n\n\t/* errors */\n\tFingerprintFormatError: errs.FingerprintFormatError,\n\tInvalidAlgorithmError: errs.InvalidAlgorithmError,\n\tKeyParseError: errs.KeyParseError,\n\tSignatureParseError: errs.SignatureParseError,\n\tKeyEncryptedError: errs.KeyEncryptedError,\n\tCertificateParseError: errs.CertificateParseError\n};\n","// Copyright 2018 Joyent, Inc.\n\nmodule.exports = Key;\n\nvar assert = require('assert-plus');\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar DiffieHellman = require('./dhe').DiffieHellman;\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar PrivateKey = require('./private-key');\nvar edCompat;\n\ntry {\n\tedCompat = require('./ed-compat');\n} catch (e) {\n\t/* Just continue through, and bail out if we try to use it. */\n}\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh'] = require('./formats/ssh');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\nformats['dnssec'] = require('./formats/dnssec');\nformats['putty'] = require('./formats/putty');\nformats['ppk'] = formats['putty'];\n\nfunction Key(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\tassert.optionalString(opts.comment, 'options.comment');\n\n\tvar algInfo = algs.info[opts.type];\n\tif (typeof (algInfo) !== 'object')\n\t\tthrow (new InvalidAlgorithmError(opts.type));\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n\tthis.comment = undefined;\n\tthis.source = opts.source;\n\n\t/* for speeding up hashing/fingerprint operations */\n\tthis._rfc4253Cache = opts._rfc4253Cache;\n\tthis._hashCache = {};\n\n\tvar sz;\n\tthis.curve = undefined;\n\tif (this.type === 'ecdsa') {\n\t\tvar curve = this.part.curve.data.toString();\n\t\tthis.curve = curve;\n\t\tsz = algs.curves[curve].size;\n\t} else if (this.type === 'ed25519' || this.type === 'curve25519') {\n\t\tsz = 256;\n\t\tthis.curve = 'curve25519';\n\t} else {\n\t\tvar szPart = this.part[algInfo.sizePart];\n\t\tsz = szPart.data.length;\n\t\tsz = sz * 8 - utils.countZeros(szPart.data);\n\t}\n\tthis.size = sz;\n}\n\nKey.formats = formats;\n\nKey.prototype.toBuffer = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'ssh';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\tassert.optionalObject(options, 'options');\n\n\tif (format === 'rfc4253') {\n\t\tif (this._rfc4253Cache === undefined)\n\t\t\tthis._rfc4253Cache = formats['rfc4253'].write(this);\n\t\treturn (this._rfc4253Cache);\n\t}\n\n\treturn (formats[format].write(this, options));\n};\n\nKey.prototype.toString = function (format, options) {\n\treturn (this.toBuffer(format, options).toString());\n};\n\nKey.prototype.hash = function (algo, type) {\n\tassert.string(algo, 'algorithm');\n\tassert.optionalString(type, 'type');\n\tif (type === undefined)\n\t\ttype = 'ssh';\n\talgo = algo.toLowerCase();\n\tif (algs.hashAlgs[algo] === undefined)\n\t\tthrow (new InvalidAlgorithmError(algo));\n\n\tvar cacheKey = algo + '||' + type;\n\tif (this._hashCache[cacheKey])\n\t\treturn (this._hashCache[cacheKey]);\n\n\tvar buf;\n\tif (type === 'ssh') {\n\t\tbuf = this.toBuffer('rfc4253');\n\t} else if (type === 'spki') {\n\t\tbuf = formats.pkcs8.pkcs8ToBuffer(this);\n\t} else {\n\t\tthrow (new Error('Hash type ' + type + ' not supported'));\n\t}\n\tvar hash = crypto.createHash(algo).update(buf).digest();\n\tthis._hashCache[cacheKey] = hash;\n\treturn (hash);\n};\n\nKey.prototype.fingerprint = function (algo, type) {\n\tif (algo === undefined)\n\t\talgo = 'sha256';\n\tif (type === undefined)\n\t\ttype = 'ssh';\n\tassert.string(algo, 'algorithm');\n\tassert.string(type, 'type');\n\tvar opts = {\n\t\ttype: 'key',\n\t\thash: this.hash(algo, type),\n\t\talgorithm: algo,\n\t\thashType: type\n\t};\n\treturn (new Fingerprint(opts));\n};\n\nKey.prototype.defaultHashAlgorithm = function () {\n\tvar hashAlgo = 'sha1';\n\tif (this.type === 'rsa')\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'dsa' && this.size > 1024)\n\t\thashAlgo = 'sha256';\n\tif (this.type === 'ed25519')\n\t\thashAlgo = 'sha512';\n\tif (this.type === 'ecdsa') {\n\t\tif (this.size <= 256)\n\t\t\thashAlgo = 'sha256';\n\t\telse if (this.size <= 384)\n\t\t\thashAlgo = 'sha384';\n\t\telse\n\t\t\thashAlgo = 'sha512';\n\t}\n\treturn (hashAlgo);\n};\n\nKey.prototype.createVerify = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Verifier(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createVerify(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldVerify = v.verify.bind(v);\n\tvar key = this.toBuffer('pkcs8');\n\tvar curve = this.curve;\n\tvar self = this;\n\tv.verify = function (signature, fmt) {\n\t\tif (Signature.isSignature(signature, [2, 0])) {\n\t\t\tif (signature.type !== self.type)\n\t\t\t\treturn (false);\n\t\t\tif (signature.hashAlgorithm &&\n\t\t\t    signature.hashAlgorithm !== hashAlgo)\n\t\t\t\treturn (false);\n\t\t\tif (signature.curve && self.type === 'ecdsa' &&\n\t\t\t    signature.curve !== curve)\n\t\t\t\treturn (false);\n\t\t\treturn (oldVerify(key, signature.toBuffer('asn1')));\n\n\t\t} else if (typeof (signature) === 'string' ||\n\t\t    Buffer.isBuffer(signature)) {\n\t\t\treturn (oldVerify(key, signature, fmt));\n\n\t\t/*\n\t\t * Avoid doing this on valid arguments, walking the prototype\n\t\t * chain can be quite slow.\n\t\t */\n\t\t} else if (Signature.isSignature(signature, [1, 0])) {\n\t\t\tthrow (new Error('signature was created by too old ' +\n\t\t\t    'a version of sshpk and cannot be verified'));\n\n\t\t} else {\n\t\t\tthrow (new TypeError('signature must be a string, ' +\n\t\t\t    'Buffer, or Signature object'));\n\t\t}\n\t};\n\treturn (v);\n};\n\nKey.prototype.createDiffieHellman = function () {\n\tif (this.type === 'rsa')\n\t\tthrow (new Error('RSA keys do not support Diffie-Hellman'));\n\n\treturn (new DiffieHellman(this));\n};\nKey.prototype.createDH = Key.prototype.createDiffieHellman;\n\nKey.parse = function (data, format, options) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (typeof (options) === 'string')\n\t\toptions = { filename: options };\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalString(options.filename, 'options.filename');\n\tif (options.filename === undefined)\n\t\toptions.filename = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data, options);\n\t\tif (k instanceof PrivateKey)\n\t\t\tk = k.toPublic();\n\t\tif (!k.comment)\n\t\t\tk.comment = options.filename;\n\t\treturn (k);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError')\n\t\t\tthrow (e);\n\t\tthrow (new KeyParseError(options.filename, format, e));\n\t}\n};\n\nKey.isKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Key, ver));\n};\n\n/*\n * API versions for Key:\n * [1,0] -- initial ver, may take Signature for createVerify or may not\n * [1,1] -- added pkcs1, pkcs8 formats\n * [1,2] -- added auto, ssh-private, openssh formats\n * [1,3] -- added defaultHashAlgorithm\n * [1,4] -- added ed support, createDH\n * [1,5] -- first explicitly tagged version\n * [1,6] -- changed ed25519 part names\n * [1,7] -- spki hash types\n */\nKey.prototype._sshpkApiVersion = [1, 7];\n\nKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tassert.func(obj.fingerprint);\n\tif (obj.createDH)\n\t\treturn ([1, 4]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 3]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 2]);\n\tif (obj.formats['pkcs1'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n","// Copyright 2017 Joyent, Inc.\n\nmodule.exports = PrivateKey;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar Fingerprint = require('./fingerprint');\nvar Signature = require('./signature');\nvar errs = require('./errors');\nvar util = require('util');\nvar utils = require('./utils');\nvar dhe = require('./dhe');\nvar generateECDSA = dhe.generateECDSA;\nvar generateED25519 = dhe.generateED25519;\nvar edCompat = require('./ed-compat');\nvar nacl = require('tweetnacl');\n\nvar Key = require('./key');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar KeyParseError = errs.KeyParseError;\nvar KeyEncryptedError = errs.KeyEncryptedError;\n\nvar formats = {};\nformats['auto'] = require('./formats/auto');\nformats['pem'] = require('./formats/pem');\nformats['pkcs1'] = require('./formats/pkcs1');\nformats['pkcs8'] = require('./formats/pkcs8');\nformats['rfc4253'] = require('./formats/rfc4253');\nformats['ssh-private'] = require('./formats/ssh-private');\nformats['openssh'] = formats['ssh-private'];\nformats['ssh'] = formats['ssh-private'];\nformats['dnssec'] = require('./formats/dnssec');\n\nfunction PrivateKey(opts) {\n\tassert.object(opts, 'options');\n\tKey.call(this, opts);\n\n\tthis._pubCache = undefined;\n}\nutil.inherits(PrivateKey, Key);\n\nPrivateKey.formats = formats;\n\nPrivateKey.prototype.toBuffer = function (format, options) {\n\tif (format === undefined)\n\t\tformat = 'pkcs1';\n\tassert.string(format, 'format');\n\tassert.object(formats[format], 'formats[format]');\n\tassert.optionalObject(options, 'options');\n\n\treturn (formats[format].write(this, options));\n};\n\nPrivateKey.prototype.hash = function (algo, type) {\n\treturn (this.toPublic().hash(algo, type));\n};\n\nPrivateKey.prototype.fingerprint = function (algo, type) {\n\treturn (this.toPublic().fingerprint(algo, type));\n};\n\nPrivateKey.prototype.toPublic = function () {\n\tif (this._pubCache)\n\t\treturn (this._pubCache);\n\n\tvar algInfo = algs.info[this.type];\n\tvar pubParts = [];\n\tfor (var i = 0; i < algInfo.parts.length; ++i) {\n\t\tvar p = algInfo.parts[i];\n\t\tpubParts.push(this.part[p]);\n\t}\n\n\tthis._pubCache = new Key({\n\t\ttype: this.type,\n\t\tsource: this,\n\t\tparts: pubParts\n\t});\n\tif (this.comment)\n\t\tthis._pubCache.comment = this.comment;\n\treturn (this._pubCache);\n};\n\nPrivateKey.prototype.derive = function (newType) {\n\tassert.string(newType, 'type');\n\tvar priv, pub, pair;\n\n\tif (this.type === 'ed25519' && newType === 'curve25519') {\n\t\tpriv = this.part.k.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\n\t\tpair = nacl.box.keyPair.fromSecretKey(new Uint8Array(priv));\n\t\tpub = Buffer.from(pair.publicKey);\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'curve25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'A', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'k', data: utils.mpNormalize(priv) }\n\t\t\t]\n\t\t}));\n\t} else if (this.type === 'curve25519' && newType === 'ed25519') {\n\t\tpriv = this.part.k.data;\n\t\tif (priv[0] === 0x00)\n\t\t\tpriv = priv.slice(1);\n\n\t\tpair = nacl.sign.keyPair.fromSeed(new Uint8Array(priv));\n\t\tpub = Buffer.from(pair.publicKey);\n\n\t\treturn (new PrivateKey({\n\t\t\ttype: 'ed25519',\n\t\t\tparts: [\n\t\t\t\t{ name: 'A', data: utils.mpNormalize(pub) },\n\t\t\t\t{ name: 'k', data: utils.mpNormalize(priv) }\n\t\t\t]\n\t\t}));\n\t}\n\tthrow (new Error('Key derivation not supported from ' + this.type +\n\t    ' to ' + newType));\n};\n\nPrivateKey.prototype.createVerify = function (hashAlgo) {\n\treturn (this.toPublic().createVerify(hashAlgo));\n};\n\nPrivateKey.prototype.createSign = function (hashAlgo) {\n\tif (hashAlgo === undefined)\n\t\thashAlgo = this.defaultHashAlgorithm();\n\tassert.string(hashAlgo, 'hash algorithm');\n\n\t/* ED25519 is not supported by OpenSSL, use a javascript impl. */\n\tif (this.type === 'ed25519' && edCompat !== undefined)\n\t\treturn (new edCompat.Signer(this, hashAlgo));\n\tif (this.type === 'curve25519')\n\t\tthrow (new Error('Curve25519 keys are not suitable for ' +\n\t\t    'signing or verification'));\n\n\tvar v, nm, err;\n\ttry {\n\t\tnm = hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t} catch (e) {\n\t\terr = e;\n\t}\n\tif (v === undefined || (err instanceof Error &&\n\t    err.message.match(/Unknown message digest/))) {\n\t\tnm = 'RSA-';\n\t\tnm += hashAlgo.toUpperCase();\n\t\tv = crypto.createSign(nm);\n\t}\n\tassert.ok(v, 'failed to create verifier');\n\tvar oldSign = v.sign.bind(v);\n\tvar key = this.toBuffer('pkcs1');\n\tvar type = this.type;\n\tvar curve = this.curve;\n\tv.sign = function () {\n\t\tvar sig = oldSign(key);\n\t\tif (typeof (sig) === 'string')\n\t\t\tsig = Buffer.from(sig, 'binary');\n\t\tsig = Signature.parse(sig, type, 'asn1');\n\t\tsig.hashAlgorithm = hashAlgo;\n\t\tsig.curve = curve;\n\t\treturn (sig);\n\t};\n\treturn (v);\n};\n\nPrivateKey.parse = function (data, format, options) {\n\tif (typeof (data) !== 'string')\n\t\tassert.buffer(data, 'data');\n\tif (format === undefined)\n\t\tformat = 'auto';\n\tassert.string(format, 'format');\n\tif (typeof (options) === 'string')\n\t\toptions = { filename: options };\n\tassert.optionalObject(options, 'options');\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.optionalString(options.filename, 'options.filename');\n\tif (options.filename === undefined)\n\t\toptions.filename = '(unnamed)';\n\n\tassert.object(formats[format], 'formats[format]');\n\n\ttry {\n\t\tvar k = formats[format].read(data, options);\n\t\tassert.ok(k instanceof PrivateKey, 'key is not a private key');\n\t\tif (!k.comment)\n\t\t\tk.comment = options.filename;\n\t\treturn (k);\n\t} catch (e) {\n\t\tif (e.name === 'KeyEncryptedError')\n\t\t\tthrow (e);\n\t\tthrow (new KeyParseError(options.filename, format, e));\n\t}\n};\n\nPrivateKey.isPrivateKey = function (obj, ver) {\n\treturn (utils.isCompatible(obj, PrivateKey, ver));\n};\n\nPrivateKey.generate = function (type, options) {\n\tif (options === undefined)\n\t\toptions = {};\n\tassert.object(options, 'options');\n\n\tswitch (type) {\n\tcase 'ecdsa':\n\t\tif (options.curve === undefined)\n\t\t\toptions.curve = 'nistp256';\n\t\tassert.string(options.curve, 'options.curve');\n\t\treturn (generateECDSA(options.curve));\n\tcase 'ed25519':\n\t\treturn (generateED25519());\n\tdefault:\n\t\tthrow (new Error('Key generation not supported with key ' +\n\t\t    'type \"' + type + '\"'));\n\t}\n};\n\n/*\n * API versions for PrivateKey:\n * [1,0] -- initial ver\n * [1,1] -- added auto, pkcs[18], openssh/ssh-private formats\n * [1,2] -- added defaultHashAlgorithm\n * [1,3] -- added derive, ed, createDH\n * [1,4] -- first tagged version\n * [1,5] -- changed ed25519 part names and format\n * [1,6] -- type arguments for hash() and fingerprint()\n */\nPrivateKey.prototype._sshpkApiVersion = [1, 6];\n\nPrivateKey._oldVersionDetect = function (obj) {\n\tassert.func(obj.toPublic);\n\tassert.func(obj.createSign);\n\tif (obj.derive)\n\t\treturn ([1, 3]);\n\tif (obj.defaultHashAlgorithm)\n\t\treturn ([1, 2]);\n\tif (obj.formats['auto'])\n\t\treturn ([1, 1]);\n\treturn ([1, 0]);\n};\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = Signature;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar algs = require('./algs');\nvar crypto = require('crypto');\nvar errs = require('./errors');\nvar utils = require('./utils');\nvar asn1 = require('asn1');\nvar SSHBuffer = require('./ssh-buffer');\n\nvar InvalidAlgorithmError = errs.InvalidAlgorithmError;\nvar SignatureParseError = errs.SignatureParseError;\n\nfunction Signature(opts) {\n\tassert.object(opts, 'options');\n\tassert.arrayOfObject(opts.parts, 'options.parts');\n\tassert.string(opts.type, 'options.type');\n\n\tvar partLookup = {};\n\tfor (var i = 0; i < opts.parts.length; ++i) {\n\t\tvar part = opts.parts[i];\n\t\tpartLookup[part.name] = part;\n\t}\n\n\tthis.type = opts.type;\n\tthis.hashAlgorithm = opts.hashAlgo;\n\tthis.curve = opts.curve;\n\tthis.parts = opts.parts;\n\tthis.part = partLookup;\n}\n\nSignature.prototype.toBuffer = function (format) {\n\tif (format === undefined)\n\t\tformat = 'asn1';\n\tassert.string(format, 'format');\n\n\tvar buf;\n\tvar stype = 'ssh-' + this.type;\n\n\tswitch (this.type) {\n\tcase 'rsa':\n\t\tswitch (this.hashAlgorithm) {\n\t\tcase 'sha256':\n\t\t\tstype = 'rsa-sha2-256';\n\t\t\tbreak;\n\t\tcase 'sha512':\n\t\t\tstype = 'rsa-sha2-512';\n\t\t\tbreak;\n\t\tcase 'sha1':\n\t\tcase undefined:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow (new Error('SSH signature ' +\n\t\t\t    'format does not support hash ' +\n\t\t\t    'algorithm ' + this.hashAlgorithm));\n\t\t}\n\t\tif (format === 'ssh') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString(stype);\n\t\t\tbuf.writePart(this.part.sig);\n\t\t\treturn (buf.toBuffer());\n\t\t} else {\n\t\t\treturn (this.part.sig.data);\n\t\t}\n\t\tbreak;\n\n\tcase 'ed25519':\n\t\tif (format === 'ssh') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString(stype);\n\t\t\tbuf.writePart(this.part.sig);\n\t\t\treturn (buf.toBuffer());\n\t\t} else {\n\t\t\treturn (this.part.sig.data);\n\t\t}\n\t\tbreak;\n\n\tcase 'dsa':\n\tcase 'ecdsa':\n\t\tvar r, s;\n\t\tif (format === 'asn1') {\n\t\t\tvar der = new asn1.BerWriter();\n\t\t\tder.startSequence();\n\t\t\tr = utils.mpNormalize(this.part.r.data);\n\t\t\ts = utils.mpNormalize(this.part.s.data);\n\t\t\tder.writeBuffer(r, asn1.Ber.Integer);\n\t\t\tder.writeBuffer(s, asn1.Ber.Integer);\n\t\t\tder.endSequence();\n\t\t\treturn (der.buffer);\n\t\t} else if (format === 'ssh' && this.type === 'dsa') {\n\t\t\tbuf = new SSHBuffer({});\n\t\t\tbuf.writeString('ssh-dss');\n\t\t\tr = this.part.r.data;\n\t\t\tif (r.length > 20 && r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\ts = this.part.s.data;\n\t\t\tif (s.length > 20 && s[0] === 0x00)\n\t\t\t\ts = s.slice(1);\n\t\t\tif ((this.hashAlgorithm &&\n\t\t\t    this.hashAlgorithm !== 'sha1') ||\n\t\t\t    r.length + s.length !== 40) {\n\t\t\t\tthrow (new Error('OpenSSH only supports ' +\n\t\t\t\t    'DSA signatures with SHA1 hash'));\n\t\t\t}\n\t\t\tbuf.writeBuffer(Buffer.concat([r, s]));\n\t\t\treturn (buf.toBuffer());\n\t\t} else if (format === 'ssh' && this.type === 'ecdsa') {\n\t\t\tvar inner = new SSHBuffer({});\n\t\t\tr = this.part.r.data;\n\t\t\tinner.writeBuffer(r);\n\t\t\tinner.writePart(this.part.s);\n\n\t\t\tbuf = new SSHBuffer({});\n\t\t\t/* XXX: find a more proper way to do this? */\n\t\t\tvar curve;\n\t\t\tif (r[0] === 0x00)\n\t\t\t\tr = r.slice(1);\n\t\t\tvar sz = r.length * 8;\n\t\t\tif (sz === 256)\n\t\t\t\tcurve = 'nistp256';\n\t\t\telse if (sz === 384)\n\t\t\t\tcurve = 'nistp384';\n\t\t\telse if (sz === 528)\n\t\t\t\tcurve = 'nistp521';\n\t\t\tbuf.writeString('ecdsa-sha2-' + curve);\n\t\t\tbuf.writeBuffer(inner.toBuffer());\n\t\t\treturn (buf.toBuffer());\n\t\t}\n\t\tthrow (new Error('Invalid signature format'));\n\tdefault:\n\t\tthrow (new Error('Invalid signature data'));\n\t}\n};\n\nSignature.prototype.toString = function (format) {\n\tassert.optionalString(format, 'format');\n\treturn (this.toBuffer(format).toString('base64'));\n};\n\nSignature.parse = function (data, type, format) {\n\tif (typeof (data) === 'string')\n\t\tdata = Buffer.from(data, 'base64');\n\tassert.buffer(data, 'data');\n\tassert.string(format, 'format');\n\tassert.string(type, 'type');\n\n\tvar opts = {};\n\topts.type = type.toLowerCase();\n\topts.parts = [];\n\n\ttry {\n\t\tassert.ok(data.length > 0, 'signature must not be empty');\n\t\tswitch (opts.type) {\n\t\tcase 'rsa':\n\t\t\treturn (parseOneNum(data, type, format, opts));\n\t\tcase 'ed25519':\n\t\t\treturn (parseOneNum(data, type, format, opts));\n\n\t\tcase 'dsa':\n\t\tcase 'ecdsa':\n\t\t\tif (format === 'asn1')\n\t\t\t\treturn (parseDSAasn1(data, type, format, opts));\n\t\t\telse if (opts.type === 'dsa')\n\t\t\t\treturn (parseDSA(data, type, format, opts));\n\t\t\telse\n\t\t\t\treturn (parseECDSA(data, type, format, opts));\n\n\t\tdefault:\n\t\t\tthrow (new InvalidAlgorithmError(type));\n\t\t}\n\n\t} catch (e) {\n\t\tif (e instanceof InvalidAlgorithmError)\n\t\t\tthrow (e);\n\t\tthrow (new SignatureParseError(type, format, e));\n\t}\n};\n\nfunction parseOneNum(data, type, format, opts) {\n\tif (format === 'ssh') {\n\t\ttry {\n\t\t\tvar buf = new SSHBuffer({buffer: data});\n\t\t\tvar head = buf.readString();\n\t\t} catch (e) {\n\t\t\t/* fall through */\n\t\t}\n\t\tif (buf !== undefined) {\n\t\t\tvar msg = 'SSH signature does not match expected ' +\n\t\t\t    'type (expected ' + type + ', got ' + head + ')';\n\t\t\tswitch (head) {\n\t\t\tcase 'ssh-rsa':\n\t\t\t\tassert.strictEqual(type, 'rsa', msg);\n\t\t\t\topts.hashAlgo = 'sha1';\n\t\t\t\tbreak;\n\t\t\tcase 'rsa-sha2-256':\n\t\t\t\tassert.strictEqual(type, 'rsa', msg);\n\t\t\t\topts.hashAlgo = 'sha256';\n\t\t\t\tbreak;\n\t\t\tcase 'rsa-sha2-512':\n\t\t\t\tassert.strictEqual(type, 'rsa', msg);\n\t\t\t\topts.hashAlgo = 'sha512';\n\t\t\t\tbreak;\n\t\t\tcase 'ssh-ed25519':\n\t\t\t\tassert.strictEqual(type, 'ed25519', msg);\n\t\t\t\topts.hashAlgo = 'sha512';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow (new Error('Unknown SSH signature ' +\n\t\t\t\t    'type: ' + head));\n\t\t\t}\n\t\t\tvar sig = buf.readPart();\n\t\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\t\tsig.name = 'sig';\n\t\t\topts.parts.push(sig);\n\t\t\treturn (new Signature(opts));\n\t\t}\n\t}\n\topts.parts.push({name: 'sig', data: data});\n\treturn (new Signature(opts));\n}\n\nfunction parseDSAasn1(data, type, format, opts) {\n\tvar der = new asn1.BerReader(data);\n\tder.readSequence();\n\tvar r = der.readString(asn1.Ber.Integer, true);\n\tvar s = der.readString(asn1.Ber.Integer, true);\n\n\topts.parts.push({name: 'r', data: utils.mpNormalize(r)});\n\topts.parts.push({name: 's', data: utils.mpNormalize(s)});\n\n\treturn (new Signature(opts));\n}\n\nfunction parseDSA(data, type, format, opts) {\n\tif (data.length != 40) {\n\t\tvar buf = new SSHBuffer({buffer: data});\n\t\tvar d = buf.readBuffer();\n\t\tif (d.toString('ascii') === 'ssh-dss')\n\t\t\td = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\t\tassert.strictEqual(d.length, 40, 'invalid inner length');\n\t\tdata = d;\n\t}\n\topts.parts.push({name: 'r', data: data.slice(0, 20)});\n\topts.parts.push({name: 's', data: data.slice(20, 40)});\n\treturn (new Signature(opts));\n}\n\nfunction parseECDSA(data, type, format, opts) {\n\tvar buf = new SSHBuffer({buffer: data});\n\n\tvar r, s;\n\tvar inner = buf.readBuffer();\n\tvar stype = inner.toString('ascii');\n\tif (stype.slice(0, 6) === 'ecdsa-') {\n\t\tvar parts = stype.split('-');\n\t\tassert.strictEqual(parts[0], 'ecdsa');\n\t\tassert.strictEqual(parts[1], 'sha2');\n\t\topts.curve = parts[2];\n\t\tswitch (opts.curve) {\n\t\tcase 'nistp256':\n\t\t\topts.hashAlgo = 'sha256';\n\t\t\tbreak;\n\t\tcase 'nistp384':\n\t\t\topts.hashAlgo = 'sha384';\n\t\t\tbreak;\n\t\tcase 'nistp521':\n\t\t\topts.hashAlgo = 'sha512';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow (new Error('Unsupported ECDSA curve: ' +\n\t\t\t    opts.curve));\n\t\t}\n\t\tinner = buf.readBuffer();\n\t\tassert.ok(buf.atEnd(), 'extra trailing bytes on outer');\n\t\tbuf = new SSHBuffer({buffer: inner});\n\t\tr = buf.readPart();\n\t} else {\n\t\tr = {data: inner};\n\t}\n\n\ts = buf.readPart();\n\tassert.ok(buf.atEnd(), 'extra trailing bytes');\n\n\tr.name = 'r';\n\ts.name = 's';\n\n\topts.parts.push(r);\n\topts.parts.push(s);\n\treturn (new Signature(opts));\n}\n\nSignature.isSignature = function (obj, ver) {\n\treturn (utils.isCompatible(obj, Signature, ver));\n};\n\n/*\n * API versions for Signature:\n * [1,0] -- initial ver\n * [2,0] -- support for rsa in full ssh format, compat with sshpk-agent\n *          hashAlgorithm property\n * [2,1] -- first tagged version\n */\nSignature.prototype._sshpkApiVersion = [2, 1];\n\nSignature._oldVersionDetect = function (obj) {\n\tassert.func(obj.toBuffer);\n\tif (obj.hasOwnProperty('hashAlgorithm'))\n\t\treturn ([2, 0]);\n\treturn ([1, 0]);\n};\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = SSHBuffer;\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\n\nfunction SSHBuffer(opts) {\n\tassert.object(opts, 'options');\n\tif (opts.buffer !== undefined)\n\t\tassert.buffer(opts.buffer, 'options.buffer');\n\n\tthis._size = opts.buffer ? opts.buffer.length : 1024;\n\tthis._buffer = opts.buffer || Buffer.alloc(this._size);\n\tthis._offset = 0;\n}\n\nSSHBuffer.prototype.toBuffer = function () {\n\treturn (this._buffer.slice(0, this._offset));\n};\n\nSSHBuffer.prototype.atEnd = function () {\n\treturn (this._offset >= this._buffer.length);\n};\n\nSSHBuffer.prototype.remainder = function () {\n\treturn (this._buffer.slice(this._offset));\n};\n\nSSHBuffer.prototype.skip = function (n) {\n\tthis._offset += n;\n};\n\nSSHBuffer.prototype.expand = function () {\n\tthis._size *= 2;\n\tvar buf = Buffer.alloc(this._size);\n\tthis._buffer.copy(buf, 0);\n\tthis._buffer = buf;\n};\n\nSSHBuffer.prototype.readPart = function () {\n\treturn ({data: this.readBuffer()});\n};\n\nSSHBuffer.prototype.readBuffer = function () {\n\tvar len = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\tassert.ok(this._offset + len <= this._buffer.length,\n\t    'length out of bounds at +0x' + this._offset.toString(16) +\n\t    ' (data truncated?)');\n\tvar buf = this._buffer.slice(this._offset, this._offset + len);\n\tthis._offset += len;\n\treturn (buf);\n};\n\nSSHBuffer.prototype.readString = function () {\n\treturn (this.readBuffer().toString());\n};\n\nSSHBuffer.prototype.readCString = function () {\n\tvar offset = this._offset;\n\twhile (offset < this._buffer.length &&\n\t    this._buffer[offset] !== 0x00)\n\t\toffset++;\n\tassert.ok(offset < this._buffer.length, 'c string does not terminate');\n\tvar str = this._buffer.slice(this._offset, offset).toString();\n\tthis._offset = offset + 1;\n\treturn (str);\n};\n\nSSHBuffer.prototype.readInt = function () {\n\tvar v = this._buffer.readUInt32BE(this._offset);\n\tthis._offset += 4;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readInt64 = function () {\n\tassert.ok(this._offset + 8 < this._buffer.length,\n\t    'buffer not long enough to read Int64');\n\tvar v = this._buffer.slice(this._offset, this._offset + 8);\n\tthis._offset += 8;\n\treturn (v);\n};\n\nSSHBuffer.prototype.readChar = function () {\n\tvar v = this._buffer[this._offset++];\n\treturn (v);\n};\n\nSSHBuffer.prototype.writeBuffer = function (buf) {\n\twhile (this._offset + 4 + buf.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(buf.length, this._offset);\n\tthis._offset += 4;\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n\nSSHBuffer.prototype.writeString = function (str) {\n\tthis.writeBuffer(Buffer.from(str, 'utf8'));\n};\n\nSSHBuffer.prototype.writeCString = function (str) {\n\twhile (this._offset + 1 + str.length > this._size)\n\t\tthis.expand();\n\tthis._buffer.write(str, this._offset);\n\tthis._offset += str.length;\n\tthis._buffer[this._offset++] = 0;\n};\n\nSSHBuffer.prototype.writeInt = function (v) {\n\twhile (this._offset + 4 > this._size)\n\t\tthis.expand();\n\tthis._buffer.writeUInt32BE(v, this._offset);\n\tthis._offset += 4;\n};\n\nSSHBuffer.prototype.writeInt64 = function (v) {\n\tassert.buffer(v, 'value');\n\tif (v.length > 8) {\n\t\tvar lead = v.slice(0, v.length - 8);\n\t\tfor (var i = 0; i < lead.length; ++i) {\n\t\t\tassert.strictEqual(lead[i], 0,\n\t\t\t    'must fit in 64 bits of precision');\n\t\t}\n\t\tv = v.slice(v.length - 8, v.length);\n\t}\n\twhile (this._offset + 8 > this._size)\n\t\tthis.expand();\n\tv.copy(this._buffer, this._offset);\n\tthis._offset += 8;\n};\n\nSSHBuffer.prototype.writeChar = function (v) {\n\twhile (this._offset + 1 > this._size)\n\t\tthis.expand();\n\tthis._buffer[this._offset++] = v;\n};\n\nSSHBuffer.prototype.writePart = function (p) {\n\tthis.writeBuffer(p.data);\n};\n\nSSHBuffer.prototype.write = function (buf) {\n\twhile (this._offset + buf.length > this._size)\n\t\tthis.expand();\n\tbuf.copy(this._buffer, this._offset);\n\tthis._offset += buf.length;\n};\n","// Copyright 2015 Joyent, Inc.\n\nmodule.exports = {\n\tbufferSplit: bufferSplit,\n\taddRSAMissing: addRSAMissing,\n\tcalculateDSAPublic: calculateDSAPublic,\n\tcalculateED25519Public: calculateED25519Public,\n\tcalculateX25519Public: calculateX25519Public,\n\tmpNormalize: mpNormalize,\n\tmpDenormalize: mpDenormalize,\n\tecNormalize: ecNormalize,\n\tcountZeros: countZeros,\n\tassertCompatible: assertCompatible,\n\tisCompatible: isCompatible,\n\topensslKeyDeriv: opensslKeyDeriv,\n\topensshCipherInfo: opensshCipherInfo,\n\tpublicFromPrivateECDSA: publicFromPrivateECDSA,\n\tzeroPadToLength: zeroPadToLength,\n\twriteBitString: writeBitString,\n\treadBitString: readBitString,\n\tpbkdf2: pbkdf2\n};\n\nvar assert = require('assert-plus');\nvar Buffer = require('safer-buffer').Buffer;\nvar PrivateKey = require('./private-key');\nvar Key = require('./key');\nvar crypto = require('crypto');\nvar algs = require('./algs');\nvar asn1 = require('asn1');\n\nvar ec = require('ecc-jsbn/lib/ec');\nvar jsbn = require('jsbn').BigInteger;\nvar nacl = require('tweetnacl');\n\nvar MAX_CLASS_DEPTH = 3;\n\nfunction isCompatible(obj, klass, needVer) {\n\tif (obj === null || typeof (obj) !== 'object')\n\t\treturn (false);\n\tif (needVer === undefined)\n\t\tneedVer = klass.prototype._sshpkApiVersion;\n\tif (obj instanceof klass &&\n\t    klass.prototype._sshpkApiVersion[0] == needVer[0])\n\t\treturn (true);\n\tvar proto = Object.getPrototypeOf(obj);\n\tvar depth = 0;\n\twhile (proto.constructor.name !== klass.name) {\n\t\tproto = Object.getPrototypeOf(proto);\n\t\tif (!proto || ++depth > MAX_CLASS_DEPTH)\n\t\t\treturn (false);\n\t}\n\tif (proto.constructor.name !== klass.name)\n\t\treturn (false);\n\tvar ver = proto._sshpkApiVersion;\n\tif (ver === undefined)\n\t\tver = klass._oldVersionDetect(obj);\n\tif (ver[0] != needVer[0] || ver[1] < needVer[1])\n\t\treturn (false);\n\treturn (true);\n}\n\nfunction assertCompatible(obj, klass, needVer, name) {\n\tif (name === undefined)\n\t\tname = 'object';\n\tassert.ok(obj, name + ' must not be null');\n\tassert.object(obj, name + ' must be an object');\n\tif (needVer === undefined)\n\t\tneedVer = klass.prototype._sshpkApiVersion;\n\tif (obj instanceof klass &&\n\t    klass.prototype._sshpkApiVersion[0] == needVer[0])\n\t\treturn;\n\tvar proto = Object.getPrototypeOf(obj);\n\tvar depth = 0;\n\twhile (proto.constructor.name !== klass.name) {\n\t\tproto = Object.getPrototypeOf(proto);\n\t\tassert.ok(proto && ++depth <= MAX_CLASS_DEPTH,\n\t\t    name + ' must be a ' + klass.name + ' instance');\n\t}\n\tassert.strictEqual(proto.constructor.name, klass.name,\n\t    name + ' must be a ' + klass.name + ' instance');\n\tvar ver = proto._sshpkApiVersion;\n\tif (ver === undefined)\n\t\tver = klass._oldVersionDetect(obj);\n\tassert.ok(ver[0] == needVer[0] && ver[1] >= needVer[1],\n\t    name + ' must be compatible with ' + klass.name + ' klass ' +\n\t    'version ' + needVer[0] + '.' + needVer[1]);\n}\n\nvar CIPHER_LEN = {\n\t'des-ede3-cbc': { key: 24, iv: 8 },\n\t'aes-128-cbc': { key: 16, iv: 16 },\n\t'aes-256-cbc': { key: 32, iv: 16 }\n};\nvar PKCS5_SALT_LEN = 8;\n\nfunction opensslKeyDeriv(cipher, salt, passphrase, count) {\n\tassert.buffer(salt, 'salt');\n\tassert.buffer(passphrase, 'passphrase');\n\tassert.number(count, 'iteration count');\n\n\tvar clen = CIPHER_LEN[cipher];\n\tassert.object(clen, 'supported cipher');\n\n\tsalt = salt.slice(0, PKCS5_SALT_LEN);\n\n\tvar D, D_prev, bufs;\n\tvar material = Buffer.alloc(0);\n\twhile (material.length < clen.key + clen.iv) {\n\t\tbufs = [];\n\t\tif (D_prev)\n\t\t\tbufs.push(D_prev);\n\t\tbufs.push(passphrase);\n\t\tbufs.push(salt);\n\t\tD = Buffer.concat(bufs);\n\t\tfor (var j = 0; j < count; ++j)\n\t\t\tD = crypto.createHash('md5').update(D).digest();\n\t\tmaterial = Buffer.concat([material, D]);\n\t\tD_prev = D;\n\t}\n\n\treturn ({\n\t    key: material.slice(0, clen.key),\n\t    iv: material.slice(clen.key, clen.key + clen.iv)\n\t});\n}\n\n/* See: RFC2898 */\nfunction pbkdf2(hashAlg, salt, iterations, size, passphrase) {\n\tvar hkey = Buffer.alloc(salt.length + 4);\n\tsalt.copy(hkey);\n\n\tvar gen = 0, ts = [];\n\tvar i = 1;\n\twhile (gen < size) {\n\t\tvar t = T(i++);\n\t\tgen += t.length;\n\t\tts.push(t);\n\t}\n\treturn (Buffer.concat(ts).slice(0, size));\n\n\tfunction T(I) {\n\t\thkey.writeUInt32BE(I, hkey.length - 4);\n\n\t\tvar hmac = crypto.createHmac(hashAlg, passphrase);\n\t\thmac.update(hkey);\n\n\t\tvar Ti = hmac.digest();\n\t\tvar Uc = Ti;\n\t\tvar c = 1;\n\t\twhile (c++ < iterations) {\n\t\t\thmac = crypto.createHmac(hashAlg, passphrase);\n\t\t\thmac.update(Uc);\n\t\t\tUc = hmac.digest();\n\t\t\tfor (var x = 0; x < Ti.length; ++x)\n\t\t\t\tTi[x] ^= Uc[x];\n\t\t}\n\t\treturn (Ti);\n\t}\n}\n\n/* Count leading zero bits on a buffer */\nfunction countZeros(buf) {\n\tvar o = 0, obit = 8;\n\twhile (o < buf.length) {\n\t\tvar mask = (1 << obit);\n\t\tif ((buf[o] & mask) === mask)\n\t\t\tbreak;\n\t\tobit--;\n\t\tif (obit < 0) {\n\t\t\to++;\n\t\t\tobit = 8;\n\t\t}\n\t}\n\treturn (o*8 + (8 - obit) - 1);\n}\n\nfunction bufferSplit(buf, chr) {\n\tassert.buffer(buf);\n\tassert.string(chr);\n\n\tvar parts = [];\n\tvar lastPart = 0;\n\tvar matches = 0;\n\tfor (var i = 0; i < buf.length; ++i) {\n\t\tif (buf[i] === chr.charCodeAt(matches))\n\t\t\t++matches;\n\t\telse if (buf[i] === chr.charCodeAt(0))\n\t\t\tmatches = 1;\n\t\telse\n\t\t\tmatches = 0;\n\n\t\tif (matches >= chr.length) {\n\t\t\tvar newPart = i + 1;\n\t\t\tparts.push(buf.slice(lastPart, newPart - matches));\n\t\t\tlastPart = newPart;\n\t\t\tmatches = 0;\n\t\t}\n\t}\n\tif (lastPart <= buf.length)\n\t\tparts.push(buf.slice(lastPart, buf.length));\n\n\treturn (parts);\n}\n\nfunction ecNormalize(buf, addZero) {\n\tassert.buffer(buf);\n\tif (buf[0] === 0x00 && buf[1] === 0x04) {\n\t\tif (addZero)\n\t\t\treturn (buf);\n\t\treturn (buf.slice(1));\n\t} else if (buf[0] === 0x04) {\n\t\tif (!addZero)\n\t\t\treturn (buf);\n\t} else {\n\t\twhile (buf[0] === 0x00)\n\t\t\tbuf = buf.slice(1);\n\t\tif (buf[0] === 0x02 || buf[0] === 0x03)\n\t\t\tthrow (new Error('Compressed elliptic curve points ' +\n\t\t\t    'are not supported'));\n\t\tif (buf[0] !== 0x04)\n\t\t\tthrow (new Error('Not a valid elliptic curve point'));\n\t\tif (!addZero)\n\t\t\treturn (buf);\n\t}\n\tvar b = Buffer.alloc(buf.length + 1);\n\tb[0] = 0x0;\n\tbuf.copy(b, 1);\n\treturn (b);\n}\n\nfunction readBitString(der, tag) {\n\tif (tag === undefined)\n\t\ttag = asn1.Ber.BitString;\n\tvar buf = der.readString(tag, true);\n\tassert.strictEqual(buf[0], 0x00, 'bit strings with unused bits are ' +\n\t    'not supported (0x' + buf[0].toString(16) + ')');\n\treturn (buf.slice(1));\n}\n\nfunction writeBitString(der, buf, tag) {\n\tif (tag === undefined)\n\t\ttag = asn1.Ber.BitString;\n\tvar b = Buffer.alloc(buf.length + 1);\n\tb[0] = 0x00;\n\tbuf.copy(b, 1);\n\tder.writeBuffer(b, tag);\n}\n\nfunction mpNormalize(buf) {\n\tassert.buffer(buf);\n\twhile (buf.length > 1 && buf[0] === 0x00 && (buf[1] & 0x80) === 0x00)\n\t\tbuf = buf.slice(1);\n\tif ((buf[0] & 0x80) === 0x80) {\n\t\tvar b = Buffer.alloc(buf.length + 1);\n\t\tb[0] = 0x00;\n\t\tbuf.copy(b, 1);\n\t\tbuf = b;\n\t}\n\treturn (buf);\n}\n\nfunction mpDenormalize(buf) {\n\tassert.buffer(buf);\n\twhile (buf.length > 1 && buf[0] === 0x00)\n\t\tbuf = buf.slice(1);\n\treturn (buf);\n}\n\nfunction zeroPadToLength(buf, len) {\n\tassert.buffer(buf);\n\tassert.number(len);\n\twhile (buf.length > len) {\n\t\tassert.equal(buf[0], 0x00);\n\t\tbuf = buf.slice(1);\n\t}\n\twhile (buf.length < len) {\n\t\tvar b = Buffer.alloc(buf.length + 1);\n\t\tb[0] = 0x00;\n\t\tbuf.copy(b, 1);\n\t\tbuf = b;\n\t}\n\treturn (buf);\n}\n\nfunction bigintToMpBuf(bigint) {\n\tvar buf = Buffer.from(bigint.toByteArray());\n\tbuf = mpNormalize(buf);\n\treturn (buf);\n}\n\nfunction calculateDSAPublic(g, p, x) {\n\tassert.buffer(g);\n\tassert.buffer(p);\n\tassert.buffer(x);\n\tg = new jsbn(g);\n\tp = new jsbn(p);\n\tx = new jsbn(x);\n\tvar y = g.modPow(x, p);\n\tvar ybuf = bigintToMpBuf(y);\n\treturn (ybuf);\n}\n\nfunction calculateED25519Public(k) {\n\tassert.buffer(k);\n\n\tvar kp = nacl.sign.keyPair.fromSeed(new Uint8Array(k));\n\treturn (Buffer.from(kp.publicKey));\n}\n\nfunction calculateX25519Public(k) {\n\tassert.buffer(k);\n\n\tvar kp = nacl.box.keyPair.fromSeed(new Uint8Array(k));\n\treturn (Buffer.from(kp.publicKey));\n}\n\nfunction addRSAMissing(key) {\n\tassert.object(key);\n\tassertCompatible(key, PrivateKey, [1, 1]);\n\n\tvar d = new jsbn(key.part.d.data);\n\tvar buf;\n\n\tif (!key.part.dmodp) {\n\t\tvar p = new jsbn(key.part.p.data);\n\t\tvar dmodp = d.mod(p.subtract(1));\n\n\t\tbuf = bigintToMpBuf(dmodp);\n\t\tkey.part.dmodp = {name: 'dmodp', data: buf};\n\t\tkey.parts.push(key.part.dmodp);\n\t}\n\tif (!key.part.dmodq) {\n\t\tvar q = new jsbn(key.part.q.data);\n\t\tvar dmodq = d.mod(q.subtract(1));\n\n\t\tbuf = bigintToMpBuf(dmodq);\n\t\tkey.part.dmodq = {name: 'dmodq', data: buf};\n\t\tkey.parts.push(key.part.dmodq);\n\t}\n}\n\nfunction publicFromPrivateECDSA(curveName, priv) {\n\tassert.string(curveName, 'curveName');\n\tassert.buffer(priv);\n\tvar params = algs.curves[curveName];\n\tvar p = new jsbn(params.p);\n\tvar a = new jsbn(params.a);\n\tvar b = new jsbn(params.b);\n\tvar curve = new ec.ECCurveFp(p, a, b);\n\tvar G = curve.decodePointHex(params.G.toString('hex'));\n\n\tvar d = new jsbn(mpNormalize(priv));\n\tvar pub = G.multiply(d);\n\tpub = Buffer.from(curve.encodePointHex(pub), 'hex');\n\n\tvar parts = [];\n\tparts.push({name: 'curve', data: Buffer.from(curveName)});\n\tparts.push({name: 'Q', data: pub});\n\n\tvar key = new Key({type: 'ecdsa', curve: curve, parts: parts});\n\treturn (key);\n}\n\nfunction opensshCipherInfo(cipher) {\n\tvar inf = {};\n\tswitch (cipher) {\n\tcase '3des-cbc':\n\t\tinf.keySize = 24;\n\t\tinf.blockSize = 8;\n\t\tinf.opensslName = 'des-ede3-cbc';\n\t\tbreak;\n\tcase 'blowfish-cbc':\n\t\tinf.keySize = 16;\n\t\tinf.blockSize = 8;\n\t\tinf.opensslName = 'bf-cbc';\n\t\tbreak;\n\tcase 'aes128-cbc':\n\tcase 'aes128-ctr':\n\tcase 'aes128-gcm@openssh.com':\n\t\tinf.keySize = 16;\n\t\tinf.blockSize = 16;\n\t\tinf.opensslName = 'aes-128-' + cipher.slice(7, 10);\n\t\tbreak;\n\tcase 'aes192-cbc':\n\tcase 'aes192-ctr':\n\tcase 'aes192-gcm@openssh.com':\n\t\tinf.keySize = 24;\n\t\tinf.blockSize = 16;\n\t\tinf.opensslName = 'aes-192-' + cipher.slice(7, 10);\n\t\tbreak;\n\tcase 'aes256-cbc':\n\tcase 'aes256-ctr':\n\tcase 'aes256-gcm@openssh.com':\n\t\tinf.keySize = 32;\n\t\tinf.blockSize = 16;\n\t\tinf.opensslName = 'aes-256-' + cipher.slice(7, 10);\n\t\tbreak;\n\tdefault:\n\t\tthrow (new Error(\n\t\t    'Unsupported openssl cipher \"' + cipher + '\"'));\n\t}\n\treturn (inf);\n}\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  mlen = n;\n  return mlen;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  var t, i;\n  for (i = 0; i < arguments.length; i++) {\n     if ((t = Object.prototype.toString.call(arguments[i])) !== '[object Uint8Array]')\n       throw new TypeError('unexpected type ' + t + ', use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\n// TODO: Completely remove this in v0.15.\nif (!nacl.util) {\n  nacl.util = {};\n  nacl.util.decodeUTF8 = nacl.util.encodeUTF8 = nacl.util.encodeBase64 = nacl.util.decodeBase64 = function() {\n    throw new Error('nacl.util moved into separate package: https://github.com/dchest/tweetnacl-util-js');\n  };\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return false;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return false;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  if (arguments.length !== 2)\n    throw new Error('nacl.sign.open accepts 2 arguments; did you mean to use nacl.sign.detached.verify?');\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","/*\n * verror.js: richer JavaScript errors\n */\n\nvar mod_assertplus = require('assert-plus');\nvar mod_util = require('util');\n\nvar mod_extsprintf = require('extsprintf');\nvar mod_isError = require('core-util-is').isError;\nvar sprintf = mod_extsprintf.sprintf;\n\n/*\n * Public interface\n */\n\n/* So you can 'var VError = require('verror')' */\nmodule.exports = VError;\n/* For compatibility */\nVError.VError = VError;\n/* Other exported classes */\nVError.SError = SError;\nVError.WError = WError;\nVError.MultiError = MultiError;\n\n/*\n * Common function used to parse constructor arguments for VError, WError, and\n * SError.  Named arguments to this function:\n *\n *     strict\t\tforce strict interpretation of sprintf arguments, even\n *     \t\t\tif the options in \"argv\" don't say so\n *\n *     argv\t\terror's constructor arguments, which are to be\n *     \t\t\tinterpreted as described in README.md.  For quick\n *     \t\t\treference, \"argv\" has one of the following forms:\n *\n *          [ sprintf_args... ]           (argv[0] is a string)\n *          [ cause, sprintf_args... ]    (argv[0] is an Error)\n *          [ options, sprintf_args... ]  (argv[0] is an object)\n *\n * This function normalizes these forms, producing an object with the following\n * properties:\n *\n *    options           equivalent to \"options\" in third form.  This will never\n *    \t\t\tbe a direct reference to what the caller passed in\n *    \t\t\t(i.e., it may be a shallow copy), so it can be freely\n *    \t\t\tmodified.\n *\n *    shortmessage      result of sprintf(sprintf_args), taking options.strict\n *    \t\t\tinto account as described in README.md.\n */\nfunction parseConstructorArguments(args)\n{\n\tvar argv, options, sprintf_args, shortmessage, k;\n\n\tmod_assertplus.object(args, 'args');\n\tmod_assertplus.bool(args.strict, 'args.strict');\n\tmod_assertplus.array(args.argv, 'args.argv');\n\targv = args.argv;\n\n\t/*\n\t * First, figure out which form of invocation we've been given.\n\t */\n\tif (argv.length === 0) {\n\t\toptions = {};\n\t\tsprintf_args = [];\n\t} else if (mod_isError(argv[0])) {\n\t\toptions = { 'cause': argv[0] };\n\t\tsprintf_args = argv.slice(1);\n\t} else if (typeof (argv[0]) === 'object') {\n\t\toptions = {};\n\t\tfor (k in argv[0]) {\n\t\t\toptions[k] = argv[0][k];\n\t\t}\n\t\tsprintf_args = argv.slice(1);\n\t} else {\n\t\tmod_assertplus.string(argv[0],\n\t\t    'first argument to VError, SError, or WError ' +\n\t\t    'constructor must be a string, object, or Error');\n\t\toptions = {};\n\t\tsprintf_args = argv;\n\t}\n\n\t/*\n\t * Now construct the error's message.\n\t *\n\t * extsprintf (which we invoke here with our caller's arguments in order\n\t * to construct this Error's message) is strict in its interpretation of\n\t * values to be processed by the \"%s\" specifier.  The value passed to\n\t * extsprintf must actually be a string or something convertible to a\n\t * String using .toString().  Passing other values (notably \"null\" and\n\t * \"undefined\") is considered a programmer error.  The assumption is\n\t * that if you actually want to print the string \"null\" or \"undefined\",\n\t * then that's easy to do that when you're calling extsprintf; on the\n\t * other hand, if you did NOT want that (i.e., there's actually a bug\n\t * where the program assumes some variable is non-null and tries to\n\t * print it, which might happen when constructing a packet or file in\n\t * some specific format), then it's better to stop immediately than\n\t * produce bogus output.\n\t *\n\t * However, sometimes the bug is only in the code calling VError, and a\n\t * programmer might prefer to have the error message contain \"null\" or\n\t * \"undefined\" rather than have the bug in the error path crash the\n\t * program (making the first bug harder to identify).  For that reason,\n\t * by default VError converts \"null\" or \"undefined\" arguments to their\n\t * string representations and passes those to extsprintf.  Programmers\n\t * desiring the strict behavior can use the SError class or pass the\n\t * \"strict\" option to the VError constructor.\n\t */\n\tmod_assertplus.object(options);\n\tif (!options.strict && !args.strict) {\n\t\tsprintf_args = sprintf_args.map(function (a) {\n\t\t\treturn (a === null ? 'null' :\n\t\t\t    a === undefined ? 'undefined' : a);\n\t\t});\n\t}\n\n\tif (sprintf_args.length === 0) {\n\t\tshortmessage = '';\n\t} else {\n\t\tshortmessage = sprintf.apply(null, sprintf_args);\n\t}\n\n\treturn ({\n\t    'options': options,\n\t    'shortmessage': shortmessage\n\t});\n}\n\n/*\n * See README.md for reference documentation.\n */\nfunction VError()\n{\n\tvar args, obj, parsed, cause, ctor, message, k;\n\n\targs = Array.prototype.slice.call(arguments, 0);\n\n\t/*\n\t * This is a regrettable pattern, but JavaScript's built-in Error class\n\t * is defined to work this way, so we allow the constructor to be called\n\t * without \"new\".\n\t */\n\tif (!(this instanceof VError)) {\n\t\tobj = Object.create(VError.prototype);\n\t\tVError.apply(obj, arguments);\n\t\treturn (obj);\n\t}\n\n\t/*\n\t * For convenience and backwards compatibility, we support several\n\t * different calling forms.  Normalize them here.\n\t */\n\tparsed = parseConstructorArguments({\n\t    'argv': args,\n\t    'strict': false\n\t});\n\n\t/*\n\t * If we've been given a name, apply it now.\n\t */\n\tif (parsed.options.name) {\n\t\tmod_assertplus.string(parsed.options.name,\n\t\t    'error\\'s \"name\" must be a string');\n\t\tthis.name = parsed.options.name;\n\t}\n\n\t/*\n\t * For debugging, we keep track of the original short message (attached\n\t * this Error particularly) separately from the complete message (which\n\t * includes the messages of our cause chain).\n\t */\n\tthis.jse_shortmsg = parsed.shortmessage;\n\tmessage = parsed.shortmessage;\n\n\t/*\n\t * If we've been given a cause, record a reference to it and update our\n\t * message appropriately.\n\t */\n\tcause = parsed.options.cause;\n\tif (cause) {\n\t\tmod_assertplus.ok(mod_isError(cause), 'cause is not an Error');\n\t\tthis.jse_cause = cause;\n\n\t\tif (!parsed.options.skipCauseMessage) {\n\t\t\tmessage += ': ' + cause.message;\n\t\t}\n\t}\n\n\t/*\n\t * If we've been given an object with properties, shallow-copy that\n\t * here.  We don't want to use a deep copy in case there are non-plain\n\t * objects here, but we don't want to use the original object in case\n\t * the caller modifies it later.\n\t */\n\tthis.jse_info = {};\n\tif (parsed.options.info) {\n\t\tfor (k in parsed.options.info) {\n\t\t\tthis.jse_info[k] = parsed.options.info[k];\n\t\t}\n\t}\n\n\tthis.message = message;\n\tError.call(this, message);\n\n\tif (Error.captureStackTrace) {\n\t\tctor = parsed.options.constructorOpt || this.constructor;\n\t\tError.captureStackTrace(this, ctor);\n\t}\n\n\treturn (this);\n}\n\nmod_util.inherits(VError, Error);\nVError.prototype.name = 'VError';\n\nVError.prototype.toString = function ve_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\n\treturn (str);\n};\n\n/*\n * This method is provided for compatibility.  New callers should use\n * VError.cause() instead.  That method also uses the saner `null` return value\n * when there is no cause.\n */\nVError.prototype.cause = function ve_cause()\n{\n\tvar cause = VError.cause(this);\n\treturn (cause === null ? undefined : cause);\n};\n\n/*\n * Static methods\n *\n * These class-level methods are provided so that callers can use them on\n * instances of Errors that are not VErrors.  New interfaces should be provided\n * only using static methods to eliminate the class of programming mistake where\n * people fail to check whether the Error object has the corresponding methods.\n */\n\nVError.cause = function (err)\n{\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\n\treturn (mod_isError(err.jse_cause) ? err.jse_cause : null);\n};\n\nVError.info = function (err)\n{\n\tvar rv, cause, k;\n\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\n\tcause = VError.cause(err);\n\tif (cause !== null) {\n\t\trv = VError.info(cause);\n\t} else {\n\t\trv = {};\n\t}\n\n\tif (typeof (err.jse_info) == 'object' && err.jse_info !== null) {\n\t\tfor (k in err.jse_info) {\n\t\t\trv[k] = err.jse_info[k];\n\t\t}\n\t}\n\n\treturn (rv);\n};\n\nVError.findCauseByName = function (err, name)\n{\n\tvar cause;\n\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\n\tmod_assertplus.string(name, 'name');\n\tmod_assertplus.ok(name.length > 0, 'name cannot be empty');\n\n\tfor (cause = err; cause !== null; cause = VError.cause(cause)) {\n\t\tmod_assertplus.ok(mod_isError(cause));\n\t\tif (cause.name == name) {\n\t\t\treturn (cause);\n\t\t}\n\t}\n\n\treturn (null);\n};\n\nVError.hasCauseWithName = function (err, name)\n{\n\treturn (VError.findCauseByName(err, name) !== null);\n};\n\nVError.fullStack = function (err)\n{\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\n\n\tvar cause = VError.cause(err);\n\n\tif (cause) {\n\t\treturn (err.stack + '\\ncaused by: ' + VError.fullStack(cause));\n\t}\n\n\treturn (err.stack);\n};\n\nVError.errorFromList = function (errors)\n{\n\tmod_assertplus.arrayOfObject(errors, 'errors');\n\n\tif (errors.length === 0) {\n\t\treturn (null);\n\t}\n\n\terrors.forEach(function (e) {\n\t\tmod_assertplus.ok(mod_isError(e));\n\t});\n\n\tif (errors.length == 1) {\n\t\treturn (errors[0]);\n\t}\n\n\treturn (new MultiError(errors));\n};\n\nVError.errorForEach = function (err, func)\n{\n\tmod_assertplus.ok(mod_isError(err), 'err must be an Error');\n\tmod_assertplus.func(func, 'func');\n\n\tif (err instanceof MultiError) {\n\t\terr.errors().forEach(function iterError(e) { func(e); });\n\t} else {\n\t\tfunc(err);\n\t}\n};\n\n\n/*\n * SError is like VError, but stricter about types.  You cannot pass \"null\" or\n * \"undefined\" as string arguments to the formatter.\n */\nfunction SError()\n{\n\tvar args, obj, parsed, options;\n\n\targs = Array.prototype.slice.call(arguments, 0);\n\tif (!(this instanceof SError)) {\n\t\tobj = Object.create(SError.prototype);\n\t\tSError.apply(obj, arguments);\n\t\treturn (obj);\n\t}\n\n\tparsed = parseConstructorArguments({\n\t    'argv': args,\n\t    'strict': true\n\t});\n\n\toptions = parsed.options;\n\tVError.call(this, options, '%s', parsed.shortmessage);\n\n\treturn (this);\n}\n\n/*\n * We don't bother setting SError.prototype.name because once constructed,\n * SErrors are just like VErrors.\n */\nmod_util.inherits(SError, VError);\n\n\n/*\n * Represents a collection of errors for the purpose of consumers that generally\n * only deal with one error.  Callers can extract the individual errors\n * contained in this object, but may also just treat it as a normal single\n * error, in which case a summary message will be printed.\n */\nfunction MultiError(errors)\n{\n\tmod_assertplus.array(errors, 'list of errors');\n\tmod_assertplus.ok(errors.length > 0, 'must be at least one error');\n\tthis.ase_errors = errors;\n\n\tVError.call(this, {\n\t    'cause': errors[0]\n\t}, 'first of %d error%s', errors.length, errors.length == 1 ? '' : 's');\n}\n\nmod_util.inherits(MultiError, VError);\nMultiError.prototype.name = 'MultiError';\n\nMultiError.prototype.errors = function me_errors()\n{\n\treturn (this.ase_errors.slice(0));\n};\n\n\n/*\n * See README.md for reference details.\n */\nfunction WError()\n{\n\tvar args, obj, parsed, options;\n\n\targs = Array.prototype.slice.call(arguments, 0);\n\tif (!(this instanceof WError)) {\n\t\tobj = Object.create(WError.prototype);\n\t\tWError.apply(obj, args);\n\t\treturn (obj);\n\t}\n\n\tparsed = parseConstructorArguments({\n\t    'argv': args,\n\t    'strict': false\n\t});\n\n\toptions = parsed.options;\n\toptions['skipCauseMessage'] = true;\n\tVError.call(this, options, '%s', parsed.shortmessage);\n\n\treturn (this);\n}\n\nmod_util.inherits(WError, VError);\nWError.prototype.name = 'WError';\n\nWError.prototype.toString = function we_toString()\n{\n\tvar str = (this.hasOwnProperty('name') && this.name ||\n\t\tthis.constructor.name || this.constructor.prototype.name);\n\tif (this.message)\n\t\tstr += ': ' + this.message;\n\tif (this.jse_cause && this.jse_cause.message)\n\t\tstr += '; caused by ' + this.jse_cause.toString();\n\n\treturn (str);\n};\n\n/*\n * For purely historical reasons, WError's cause() function allows you to set\n * the cause.\n */\nWError.prototype.cause = function we_cause(c)\n{\n\tif (mod_isError(c))\n\t\tthis.jse_cause = c;\n\n\treturn (this.jse_cause);\n};\n",null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3109);\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACnvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACzxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACnnliBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxzhjztptLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC9TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACprHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACfhRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACZA;AACA;AACA;;;A;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;ACjhtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC3PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvxuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACrxrjhntnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnhhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjzvnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjrTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACphJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjxjwzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACntEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChdxsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACrpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChvznjptnlrrlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACpXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvrrzpnvn1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;ACvlcA;;;A;;;;;;A;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;ACDA;AACA;AACA;AACA;;;;A","sourceRoot":""}